{"version":3,"file":"src_app_pages_bank-module_bank-module_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/bank-module/add-bank/add-bank.component.ts","./src/app/pages/bank-module/add-bank/add-bank.component.html","./src/app/pages/bank-module/add-cash/add-cash.component.ts","./src/app/pages/bank-module/add-cash/add-cash.component.html","./src/app/pages/bank-module/ban-kdetails/ban-kdetails.component.ts","./src/app/pages/bank-module/ban-kdetails/ban-kdetails.component.html","./src/app/pages/bank-module/bank-module-routing.module.ts","./src/app/pages/bank-module/bank-module.module.ts"],"sourcesContent":["import { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RouteReuseStrategy, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmedValidators } from 'src/app/_helpers/confirmed.validators';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { CashInHandServiceService } from 'src/app/core/services/cash-in-hand-service.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-bank',\r\n  templateUrl: './add-bank.component.html',\r\n  styleUrls: ['./add-bank.component.scss']\r\n})\r\nexport class AddBankComponent implements OnInit {\r\n  submitted: boolean;\r\n  isEdit: boolean;\r\n  public bankForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public hide: boolean = true;\r\n  public filteredOptions: Observable<string[]>;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n\r\n    private titleCasePipe: TitleCasePipe,\r\n    private cashInHandService: CashInHandServiceService,\r\n    private saleInvoiceService: SaleInvoiceService, private dialog: MatDialog , public dialogRef: MatDialogRef<AddBankComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bankForm = this.formBuilder.group({\r\n      IFSC: [\"\", [Validators.required, Validators.pattern('^[A-Za-z]{4}0[0-9]{6}$')]],\r\n      AccountHolderName: [\"\", [Validators.required]],\r\n      BankName: [\"\", [Validators.required]],\r\n      AccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      ConfirmAccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      Branch: [\"\", [Validators.required]],\r\n    },\r\n      {\r\n        validator: ConfirmedValidators('AccountNumber', 'ConfirmAccountNumber')\r\n      });\r\n  }\r\n  BankDatasave() {\r\n    this.submitted = true;\r\n    this.isEdit = false;\r\n    if (this.bankForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let body = {\r\n        \"bankDetails\": {\r\n          \"bankName\": this.bankForm.controls.BankName.value,\r\n          \"branchCode\": this.bankForm.controls.Branch.value,\r\n          \"accountNumber\": this.bankForm.controls.AccountNumber.value,\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value.toUpperCase(),\r\n          \"accountHolderName\":this.bankForm.controls.AccountHolderName.value\r\n\r\n        }\r\n      }\r\n      if (this.bankForm.valid) {\r\n        this.bankService.postBankDetails(body, this.currentUser.id).then((res) => {\r\n          if (res) {\r\n            this.toastService.openSnackBar(\"Bank Record Added Successfully!!!\");\r\n           // this.getbankdetails();\r\n           // this.modal.dismissAll();\r\n            this.bankForm.reset();\r\n            this.submitted = false;\r\n            this.dialogRef.close();\r\n          }\r\n        }, (err) => {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n        });\r\n      }\r\n    }\r\n  }\r\n  cancel() {\r\n     this.bankForm.reset();\r\n     this.submitted = false;\r\n      this.dialogRef.close();\r\n    }\r\n    get f() {\r\n      return this.bankForm.controls;\r\n    }\r\n    numberOnly(event): boolean {\r\n      const charCode = (event.which) ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    \r\n  getIFSCCode(ifscCode) {\r\n    if (ifscCode) {\r\n      let body =\r\n      {\r\n        \"bankDetails\": {\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value\r\n        }\r\n      }\r\n      this.bankService.getBankDetailsByIFSC(body, this.currentUser.id).then((res) => {\r\n        this.bankForm.patchValue({\r\n            'BankName': res.data.bankName,\r\n            'Branch': this.titleCasePipe.transform(res.data.branchCode)\r\n            })\r\n        this.toastService.openSnackBar(\"IFSC Code Validated Successfully!!!\");\r\n      }, (err) => {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Bank</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"BankDatasave()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"bankForm\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>Account Holder Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-uppercase\" placeholder=\"Account Holder Name\"autocomplete=\"off\"\r\n                            formControlName=\"AccountHolderName\" />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>IFSC</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-uppercase\" placeholder=\"IFSC\" formControlName=\"IFSC\"\r\n                            (change)=\"getIFSCCode($event.target.value)\" [ngClass]=\"{\r\n                  'is-invalid':\r\n                    f.IFSC.invalid && f.IFSC.touched && submitted\r\n                }\" autocomplete=\"new-password\" value=\"\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.IFSC.touched\">\r\n                        <mat-error *ngIf=\"f.IFSC.errors?.required\">\r\n                            IFSC Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.IFSC.errors?.pattern\">\r\n                            IFSC required MAHB0001115 format!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <label>Bank Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input type=\"text\" placeholder=\"Bank Name\" formControlName=\"BankName\"\r\n                            aria-label=\"Select Party Name\" matInput [matAutocomplete]=\"auto\" autocomplete=\"new-password\"\r\n                            [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.BankName.invalid && f.BankName.touched && submitted\r\n              }\" readonly />\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.bankName\">\r\n                                {{ option.bankName }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.BankName.touched\">\r\n                        <mat-error *ngIf=\"f.BankName.errors?.required\">\r\n                            BankName Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <label> Branch Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-capitalize\" type=\"text\" placeholder=\"Branch\"\r\n                            formControlName=\"Branch\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.Branch.invalid && f.Branch.touched && submitted\r\n              }\" value=\"\" readonly />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.Branch.touched\">\r\n                        <mat-error *ngIf=\"f.Branch.errors?.required\">\r\n                            Branch Name Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>Account Number</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input (keypress)=\"numberOnly($event)\" matInput [type]=\"hide ? 'password' : 'text'\"\r\n                            placeholder=\"Account Number\" formControlName=\"AccountNumber\" minlength=\"9\"\r\n                            autocomplete=\"new-password\" maxlength=\"19\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.AccountNumber.invalid &&\r\n                  f.AccountNumber.touched &&\r\n                  submitted\r\n              }\" value=\"\"  autocomplete=\"off\"/>\r\n                        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                        </mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.AccountNumber.touched\">\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.required\">\r\n                            Account Number Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.pattern\">\r\n                            Account Number Required Numeric\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.minLength\">\r\n                            Account Number Required Min Length 9 !\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.maxLength\">\r\n                            Account Number Required Max Length 19!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label> Re-Enter Account Number</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" placeholder=\"Re Enter Account Number\"\r\n                            formControlName=\"ConfirmAccountNumber\" minlength=\"9\" maxlength=\"19\"\r\n                            autocomplete=\"new-password\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.ConfirmAccountNumber.invalid &&\r\n                  f.ConfirmAccountNumber.touched &&\r\n                  submitted\r\n              }\" value=\"\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.ConfirmAccountNumber.touched\">\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.required\">\r\n                            Confirm Account Number Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.pattern\">\r\n                            Confirm Account Number Required Numeric\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.minLength\">\r\n                            Confirm Account Number Required Min Length 9 !\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.maxLength\">\r\n                            Confirm Account Number Required Max Length 19!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>Bank Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input type=\"text\" placeholder=\"Bank Name\" formControlName=\"BankName\"\r\n                            aria-label=\"Select Party Name\" matInput [matAutocomplete]=\"auto\" autocomplete=\"new-password\"\r\n                            [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.BankName.invalid && f.BankName.touched && submitted\r\n              }\" readonly />\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.bankName\">\r\n                                {{ option.bankName }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.BankName.touched\">\r\n                        <mat-error *ngIf=\"f.BankName.errors?.required\">\r\n                            BankName Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label> Branch Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-capitalize\" type=\"text\" placeholder=\"Branch\"\r\n                            formControlName=\"Branch\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.Branch.invalid && f.Branch.touched && submitted\r\n              }\" value=\"\" readonly />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.Branch.touched\">\r\n                        <mat-error *ngIf=\"f.Branch.errors?.required\">\r\n                            Branch Name Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div> -->\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { CashInHandServiceService } from 'src/app/core/services/cash-in-hand-service.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-add-cash',\r\n  templateUrl: './add-cash.component.html',\r\n  styleUrls: ['./add-cash.component.scss']\r\n})\r\nexport class AddCashComponent implements OnInit {\r\n  CashInHandForm: any;\r\n  submitted: boolean;\r\n  paymentType: string;\r\n  public todaysDate;\r\n  saleInvoiceId: any;\r\n  partyId: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n\r\n    private titleCasePipe: TitleCasePipe,\r\n    private cashInHandService: CashInHandServiceService,\r\n    private saleInvoiceService: SaleInvoiceService, private dialog: MatDialog, public dialogRef: MatDialogRef<AddCashComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.todaysDate = new Date();\r\n    this.getCurrentBal()\r\n    this.CashInHandForm = this.formBuilder.group({\r\n      currentBal: [],\r\n      date: [],\r\n      saleInvoiceNo: [null],\r\n      enterAmount: [, [Validators.required]],\r\n      NewBalance: [, [Validators.required]],\r\n      formRemark: [\"\", [Validators.required]],\r\n    })\r\n  }\r\n  get f1() {\r\n    return this.CashInHandForm.controls;\r\n  }\r\n  calculateValues() {\r\n    if (this.paymentType == \"PAYMENT\") {\r\n      this.CashInHandForm.patchValue({\r\n        NewBalance: +this.CashInHandForm.controls.currentBal.value + +this.CashInHandForm.controls.enterAmount.value\r\n      });\r\n    } else {\r\n      this.CashInHandForm.patchValue({\r\n        NewBalance: +this.CashInHandForm.controls.currentBal.value - +this.CashInHandForm.controls.enterAmount.value\r\n      });\r\n    }\r\n  }\r\n\r\n  GetpartyId(e) {\r\n    if (e) {\r\n      this.saleInvoiceService.getsaleInvoiceByIncoice({}, this.currentUser.id, e).then((res) => {\r\n        this.partyId = res.data.pageData[0].partyId;\r\n        this.saleInvoiceId = res.data.pageData[0].id;\r\n      });\r\n    }\r\n  }\r\n  addMoney() {\r\n    this.paymentType = \"PAYMENT\";\r\n    console.log(\"payment\", this.paymentType);\r\n  }\r\n\r\n  reduceMoney() {\r\n    this.paymentType = \"RECEIPT\";\r\n    console.log(\"receipt\", this.paymentType);\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n  cashSave() {\r\n    this.submitted = true;\r\n    if (this.CashInHandForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else{\r\n      let body = {\r\n        \"cashadjustments\": {\r\n          \"paymentType\": this.paymentType,\r\n          \"saleInvoiceId\": this.saleInvoiceId ? this.saleInvoiceId : null,\r\n          \"date\": moment(this.CashInHandForm.controls.date.value, \"DD MMM YYYY\").format(\"YYYY-MM-DD\"),\r\n          \"enterAmount\": this.CashInHandForm.controls.enterAmount.value,\r\n          \"remark\": this.CashInHandForm.controls.formRemark.value,\r\n          \"userId\": this.currentUser.id\r\n  \r\n        },\r\n      }\r\n \r\n      this.cashInHandService.cashInHandpost(body).then((res) => {\r\n        this.toastService.openSnackBar(\"Cash In Hand Updated\");\r\n        this.CashInHandForm.reset();\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n        this.getCurrentBal();\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getCurrentBal() {\r\n    this.cashInHandService.getCurrentBalance({}, this.currentUser.id).then((res) => {\r\n      this.CashInHandForm.patchValue({\r\n        currentBal: res.data[0].currentBalance,\r\n      });\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      })\r\n  }\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Cash in hand</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"cashSave()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"CashInHandForm\">\r\n            <div class=\"mb-5\">\r\n              <button class=\"btn btn-add-cash\" style=\"border-radius: 10px\" (click)=\"addMoney()\">\r\n                <i class=\"fas fa-plus me-2\"> </i>Add Money\r\n              </button>\r\n              <button class=\"btn btn-reduce-cash\" style=\"border-radius: 10px; margin-left: 10px\" (click)=\"reduceMoney()\">\r\n                <i class=\"fas fa-minus  me-2\"> </i>Reduce Cash\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Current Balance -->\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label>Current Balance</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input  matInput placeholder=\"Current Balance\" (change)=\"calculateValues()\" formControlName=\"currentBal\" />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label>Sale Invoice No</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input type=\"text\" matInput placeholder=\"Sale Invoice No\" (change)=\"GetpartyId($event.target.value)\"\r\n                    formControlName=\"saleInvoiceNo\" />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label for=\"Date\"> Date</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input matInput required ngModel bsDatepicker formControlName=\"date\" placeholder=\"Date\"\r\n                    style=\"text-transform: uppercase !important\" [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker\r\n                    [bsConfig]=\"{\r\n                      containerClass: 'theme-dark-blue',\r\n                      dateInputFormat: 'DD MMM YYYY',\r\n                      showWeekNumbers: false\r\n                    }\" />\r\n                  <span>\r\n                    <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                  </span>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label>New Amount</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input  type=\"number\" matInput placeholder=\"Enter Amount\" (change)=\"calculateValues()\" formControlName=\"enterAmount\" min=\"0\"\r\n                    oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                      'is-invalid':\r\n                        f1.enterAmount.invalid &&\r\n                        f1.enterAmount.touched &&\r\n                        submitted\r\n                    }\" />\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"\r\n                    (submitted || f1.enterAmount.touched) &&\r\n                    f1.enterAmount.errors?.required\r\n                  \">\r\n                  Enter Amount Is Required!\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                <label>New Balance</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input type=\"number\" matInput placeholder=\"New balance\" formControlName=\"NewBalance\" min=\"0\"\r\n                    oninput=\"this.value = Math.abs(this.value)\"\r\n  \r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        f1.NewBalance.invalid &&\r\n                        f1.NewBalance.touched &&\r\n                        submitted\r\n                    }\" readonly />\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"\r\n                    (submitted || f1.NewBalance.touched) &&\r\n                    f1.NewBalance.errors?.required\r\n                  \">\r\n                  New Balance Is Required!\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                <label>Item Description</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                  <textarea matInput required rows=\"3\" placeholder=\"Enter Item Description\"\r\n                  formControlName=\"formRemark\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </form>\r\n     \r\n\r\n    </div>\r\n\r\n</div>\r\n","import { formatDate } from '@angular/common';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ConfirmedValidators } from 'src/app/_helpers/confirmed.validators';\r\nimport { Constants } from 'src/app/_helpers/constant';\r\nimport { CashInHandServiceService } from 'src/app/core/services/cash-in-hand-service.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport * as moment from 'moment';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddBankComponent } from '../add-bank/add-bank.component';\r\nimport { AddCashComponent } from '../add-cash/add-cash.component';\r\n\r\n@Component({\r\n  selector: 'app-ban-kdetails',\r\n  templateUrl: './ban-kdetails.component.html',\r\n  styleUrls: ['./ban-kdetails.component.scss']\r\n})\r\nexport class BanKDetailsComponent implements OnInit {\r\n  public bankForm: FormGroup;\r\n  public CashInHandForm: FormGroup;\r\n  public filteredOptions: Observable<string[]>;\r\n  public myControl = new FormControl();\r\n  color: string = 'black';\r\n  submitted: boolean;\r\n  bankApiResponse: any;\r\n  isEdit: boolean = false;\r\n  BankData = [\r\n    {\r\n      \"id\": \"1\",\r\n      \"IFSC\": \"MAHB0000002\",\r\n      \"BANK\": \"Bank of Maharashtra\",\r\n      \"AccountNumber\": \"MH120123444454\",\r\n      \"BRANCH\": \"FORT BRANCH , MUMBAI\",\r\n      \"isEnable\": false,\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"IFSC\": \"UTIB0000037\",\r\n      \"BANK\": \"Axis Bank\",\r\n      \"AccountNumber\": \"MH120123444454\",\r\n      \"BRANCH\": \"FORT BRANCH , MUMBAI\",\r\n      \"isEnable\": false,\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"IFSC\": \"HDFC0000002\",\r\n      \"BANK\": \"HDFC Bank\",\r\n      \"AccountNumber\": \"MH120123444454\",\r\n      \"BRANCH\": \"FORT BRANCH , MUMBAI\",\r\n      \"isEnable\": false,\r\n    },\r\n    {\r\n      \"id\": \"4\",\r\n      \"IFSC\": \"SBIN0000371\",\r\n      \"BANK\": \"State Bank of India\",\r\n      \"AccountNumber\": \"MH120123444454\",\r\n      \"BRANCH\": \"ACHALPUR\",\r\n      \"isEnable\": false,\r\n    },\r\n  ]\r\n  isDisabled = false;\r\n  isShowButton: Boolean = false;\r\n  isShown: Boolean = false;\r\n  isShownm: Boolean = false;\r\n  bankdetails: any;\r\n  bname: any = \"\";\r\n  data: any\r\n  mobileOtp: any;\r\n  formData: any = [];\r\n  branchCode: any;\r\n  branchCode2: any;\r\n  bankDetailByAcc: any;\r\n  public hide: boolean = true;\r\n  accoutNumber: any;\r\n  public IFSC: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public todaysDate;\r\n  public today;\r\n  partyId: any\r\n  saleInvoiceId: any;\r\n  public paymentType: string = \"\";\r\n  public remark2:any;\r\n  dialogRef: any;\r\n  public singleBankRecord:any;\r\n  singleBankName: any;\r\n  singleBankAcc: any;\r\n  singleIfscCode: any;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n    private modal: NgbModal,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private cashInHandService: CashInHandServiceService,\r\n    private saleInvoiceService: SaleInvoiceService, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.todaysDate = new Date();\r\n    this.todaysDate = formatDate(this.todaysDate, 'yyyy-MM-dd', 'en-US');\r\n    console.log(\"date\",this.todaysDate)\r\n    this.bankForm = this.formBuilder.group({\r\n      IFSC: [\"\", [Validators.required, Validators.pattern('^[A-Za-z]{4}0[0-9]{6}$')]],\r\n      AccountHolderName: [\"\", [Validators.required]],\r\n      BankName: [\"\", [Validators.required]],\r\n      AccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      ConfirmAccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      Branch: [\"\", [Validators.required]],\r\n    },\r\n      {\r\n        validator: ConfirmedValidators('AccountNumber', 'ConfirmAccountNumber')\r\n      });\r\n    this.bankdetails = Constants.bankNames;\r\n    this.bankdetails.sort((a, b) => a.bankName > b.bankName ? 1 : -1)\r\n    this.filteredOptions = this.bankForm.controls.BankName.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(name => name ? this.filterBankNames(name) : this.bankdetails.slice())\r\n      );\r\n\r\n      this.CashInHandForm = this.formBuilder.group({\r\n        currentBal: [],\r\n        date: [],\r\n        paymentType: [\"\", [Validators.required]],\r\n        saleInvoiceNo: [],\r\n        enterAmount: [ ,[Validators.required]],\r\n        // NewAmount: [ ,[Validators.required]],\r\n        NewBalance: [ ,[Validators.required]],\r\n        formRemark:  [\"\", [Validators.required]],\r\n        // denomination: [ ,[Validators.required]],\r\n        // noOfPieces: [ ,[Validators.required]],\r\n        // total: [,[Validators.required]],\r\n        // coin: [],\r\n        // grandTotal: [ ,[Validators.required]],\r\n        // fivehundred: [],\r\n        // nofivehundred: [],\r\n        // totalfivehundred: [],\r\n        // hundred: [],\r\n        // nohundred: [],\r\n        // totalhundred: [],\r\n        // fifty: [],\r\n        // nofifty: [],\r\n        // totalfifty: [],\r\n        // twenty: [],\r\n        // notwenty: [],\r\n        // totaltwenty: [],\r\n        // ten: [],\r\n        // noten: [],\r\n        // totalten: [],\r\n        // five: [],\r\n        // nofive: [],\r\n        // totalfive: []\r\n      })\r\n\r\n\r\n\r\n    this.getbankdetails();\r\n   // this.getbankdetailsById();\r\n    // this.getBankIFSC();\r\n    this.getCurrentBal()\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  get f1() {\r\n    return this.CashInHandForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Filter customer name search\r\n   * @param name\r\n   * @returns\r\n   */\r\n  private filterBankNames(name: string): string[] {\r\n    return this.bankdetails.filter(x =>\r\n      x.bankName.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n  getbankdetails() {\r\n    this.bankService.getBankDetails({}, this.currentUser.id).then((res) => {\r\n      console.log(\"new Api:\",res);\r\n\r\n      this.bankApiResponse = res.data;\r\n      this.bankApiResponse.forEach((ele) => {\r\n        ele.isEnable = false;\r\n      })\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.bankApiResponse = [];\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getbankdetailsById(id){\r\n    // <p class=\"mb-1 mt-2\"><span class=\"me-3\">Bank Name :</span>ICICI Bank</p>\r\n    // <p class=\"mb-2 mt-1\">Account Number: 30002000668888</p>\r\n    // <p class=\"mb-1 mt-1\">IFSC Code: ICI2004300</p>\r\n    // <p class=\"mb-1 mt-1 d-flex flex-row\" style=\"justify-content: end\">\r\n    //   Balance: 200000.00\r\n    // </p>\r\n    this.bankService.getBankDetailsById({},this.currentUser.id,id).then((res)=>{\r\n\r\n        this.singleBankRecord=res.data;\r\n        this.singleBankName  =this.singleBankRecord.bankName \r\n        this.singleBankAcc=this.singleBankRecord.accountNumber \r\n        this.singleIfscCode= this.singleBankRecord.ifscCode\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // getBankIFSC(ifscCode:any){\r\n  //   this.bankService.getBankDetailsByIFSC({}, this.currentUser.id).then((res) => {\r\n\r\n  //   })\r\n  // }\r\n  removeBanK() {\r\n    this.bankService.deleteBankAccNo({}, this.accoutNumber).then((res) => {\r\n      this.toastService.openSnackBar(\"Bank Record Deleted Successfully!!!\");\r\n      this.getbankdetails();\r\n    })\r\n  }\r\n\r\n  myClickHandler(bankDetails) {\r\n    this.bankApiResponse.forEach(element => {\r\n      if (element.id == bankDetails.id) {\r\n        element.isEnable = true;\r\n      }\r\n      else {\r\n        element.isEnable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getIFSCCode(ifscCode) {\r\n    if (ifscCode) {\r\n      let body =\r\n      {\r\n        \"bankDetails\": {\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value\r\n        }\r\n      }\r\n      this.bankService.getBankDetailsByIFSC(body, this.currentUser.id).then((res) => {\r\n        this.bankForm.patchValue({\r\n            'BankName': res.data.bankName,\r\n            'Branch': this.titleCasePipe.transform(res.data.branchCode)\r\n            })\r\n        this.toastService.openSnackBar(\"IFSC Code Validated Successfully!!!\");\r\n      }, (err) => {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n      })\r\n\r\n\r\n\r\n\r\n      // this.http.get(\"https://ifsc.razorpay.com/\" + ifscCode).subscribe((res) => {\r\n      //   this.data = res;\r\n      //   // this.branchCode = this.data.BANKCODE;\r\n      //   this.branchCode = this.data.BRANCH;\r\n      //   this.bankForm.patchValue({\r\n      //     'IFSC': this.data.IFSC,\r\n      //     'BankName': this.data.BANK,\r\n      //     'Branch': this.titleCasePipe.transform(this.data.BRANCH)\r\n      //   })\r\n      // });\r\n    }\r\n  }\r\n\r\n\r\n  BankDatasave() {\r\n    this.submitted = true;\r\n    this.isEdit = false;\r\n    if (this.bankForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let body = {\r\n        \"bankDetails\": {\r\n          \"bankName\": this.bankForm.controls.BankName.value,\r\n          \"branchCode\": this.bankForm.controls.Branch.value,\r\n          \"accountNumber\": this.bankForm.controls.AccountNumber.value,\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value.toUpperCase(),\r\n          \"accountHolderName\":this.bankForm.controls.AccountHolderName.value\r\n\r\n        }\r\n      }\r\n      if (this.bankForm.valid) {\r\n        this.bankService.postBankDetails(body, this.currentUser.id).then((res) => {\r\n          if (res) {\r\n            this.toastService.openSnackBar(\"Bank Record Added Successfully!!!\");\r\n           // this.getbankdetails();\r\n           // this.modal.dismissAll();\r\n            this.bankForm.reset();\r\n            this.submitted = false;\r\n\r\n\r\n          }\r\n        }, (err) => {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  bankUpdate() {\r\n    if (this.bankForm.valid) {\r\n      let body = {\r\n        \"bankDetails\": {\r\n          \"bankName\": this.bankForm.controls.BankName.value,\r\n          \"branchCode\": this.bankForm.controls.Branch.value,\r\n          \"accountNumber\": this.bankForm.controls.AccountNumber.value,\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value.toUpperCase(),\r\n        }\r\n      }\r\n      this.bankService.updateBankDetails(body, this.bankDetailByAcc.accountNumber).then((res) => {\r\n        this.toastService.openSnackBar(\"Bank Record Updated Successfully!!!\");\r\n        this.getbankdetails();\r\n        this.bankForm.reset();\r\n        this.submitted = false;\r\n\r\n        this.modal.dismissAll();\r\n      })\r\n      this.isEdit = false\r\n    }\r\n  }\r\n\r\n  editItem(bank) {\r\n    this.isEdit = true\r\n    this.bankService.getBankDetailsByAcc({}, bank).then((res) => {\r\n      this.bankDetailByAcc = res.data\r\n      this.bankForm.patchValue({\r\n        'id': this.bankDetailByAcc.id,\r\n        'IFSC': this.bankDetailByAcc.ifscCode,\r\n        'BankName': this.bankDetailByAcc.bankName,\r\n        'AccountNumber': this.bankDetailByAcc.accountNumber,\r\n        'Branch': this.bankDetailByAcc.branchCode,\r\n        'ConfirmAccountNumber': this.bankDetailByAcc.accountNumber\r\n      })\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.bankForm.controls;\r\n  }\r\n\r\n  modalDismiss() {\r\n    this.bankForm.reset();\r\n    this.modal.dismissAll();\r\n    this.isEdit = false;\r\n  }\r\n\r\n  getBanKBYACC(accNumer) {\r\n    this.accoutNumber = accNumer\r\n\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  openAddBankModal(modal) {\r\n    this.modal.open(modal, {\r\n      centered: false,\r\n      backdrop: \"static\",\r\n      size: \"md\"\r\n    });\r\n  }\r\n  openDialogBank(){\r\n    const dialogRef: MatDialogRef<AddBankComponent> = this.dialog.open(AddBankComponent, {\r\n      width: 'auto',\r\n      height: '700px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-expense-class',\r\n      disableClose:true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n \r\n\r\n  }\r\n\r\n  openDialogCash(){\r\n    const dialogRef: MatDialogRef<AddCashComponent> = this.dialog.open(AddCashComponent, {\r\n      width: 'auto',\r\n      height: '700px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-expense-class',\r\n      disableClose:true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });  \r\n  }\r\n\r\n  // Cash In Hand\r\n\r\n  getCurrentBal(){\r\n    this.cashInHandService.getCurrentBalance({}, this.currentUser.id).then((res) => {\r\n      // this.CashInHandForm = res.data[0].currentBalance;\r\n\r\n      this.CashInHandForm.patchValue({\r\n        currentBal: res.data[0].currentBalance,\r\n      });\r\n\r\n    },\r\n    (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n\r\n    })\r\n}\r\n\r\n  openCashandModal(modal){\r\n    this.modal.open(modal, {\r\n      centered: false,\r\n      backdrop: \"static\",\r\n      size: \"md\"\r\n    });\r\n  }\r\n\r\n  modalDismissCashInHand() {\r\n    this.CashInHandForm.reset();\r\n    this.modal.dismissAll();\r\n  }\r\n\r\n  GetpartyId(e) {\r\n    if (e) {\r\n      this.saleInvoiceService.getsaleInvoiceByIncoice({}, this.currentUser.id, e).then((res) => {\r\n        this.partyId = res.data.pageData[0].partyId;\r\n        this.saleInvoiceId=res.data.pageData[0].id;\r\n      });\r\n    }\r\n  }\r\n\r\n  addMoney(){\r\n    this.paymentType = \"PAYMENT\";\r\n    console.log(\"payment\", this.paymentType);\r\n  }\r\n\r\n  reduceMoney(){\r\n    this.paymentType = \"RECEIPT\";\r\n    console.log(\"receipt\", this.paymentType);\r\n  }\r\n  save() {\r\n    console.log(\"remark2\",this.remark2)\r\n    this.submitted = true;\r\n    // if (this.CashInHandForm.invalid) {\r\n    //   this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n    //   return false;\r\n    // }\r\n\r\n\r\n    let body = {\r\n      \"cashadjustments\": {\r\n        \"paymentType\": this.paymentType,\r\n        \"saleInvoiceId\":this.saleInvoiceId ? this.saleInvoiceId : null,\r\n\r\n        // asOfDate: moment(\r\n        //   this.ProductForm.controls.asOfDate.value,\r\n        //   \"DD MMM YYYY\"\r\n        // ).format(\"YYYY-MM-DD\"\"YYYY-MM-DD\"),\r\n        \r\n\r\n        date:moment(this.CashInHandForm.controls.date.value,\"DD MMM YYYY\").format(\"YYYY-MM-DD\"),\r\n\r\n\r\n       // \"date\":this.CashInHandForm.controls.date.value,\r\n        \"enterAmount\": this.CashInHandForm.controls.enterAmount.value,\r\n        // \"newAmount\": this.CashInHandForm.controls.NewAmount.value,\r\n        // \"newBalance\": this.CashInHandForm.controls.NewBalance.value,\r\n        // \"grandTotal\":  this.CashInHandForm.controls.grandTotal.value,\r\n        // \"coins\":0,\r\n        \"remark\": this.CashInHandForm.controls.formRemark.value,\r\n        \"userId\":this.currentUser.id\r\n\r\n    },\r\n    }\r\n    console.log(\"body\", body);\r\n    this.cashInHandService.cashInHandpost(body).then((res) => {\r\n      this.toastService.openSnackBar(\"Cash In Hand Updated\");\r\n      this.CashInHandForm.reset();\r\n      this.submitted=false;\r\n      this.getCurrentBal();\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  clearInput() {\r\n    this.CashInHandForm.reset();\r\n    this.modal.dismissAll();\r\n     this.submitted=false;\r\n     this.getCurrentBal();\r\n  }\r\n  calculateValues(){\r\n    if(this.paymentType  ==\"PAYMENT\"){\r\n      this.CashInHandForm.patchValue({\r\n        NewBalance : +this.CashInHandForm.controls.currentBal.value  + +this.CashInHandForm.controls.enterAmount.value \r\n     });\r\n    }else{\r\n      this.CashInHandForm.patchValue({\r\n        NewBalance : +this.CashInHandForm.controls.currentBal.value  - +this.CashInHandForm.controls.enterAmount.value \r\n     });\r\n    }\r\n  }\r\n  cancel() {\r\n  //  this.expenseForm.reset();\r\n    // this.submitted = false;\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px;;\">\r\n      <div class=\"modal-content position-relative\">\r\n        <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n          <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"></a>\r\n        </div>\r\n        <div class=\"modal-body p-0\">\r\n          <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n            <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800\" id=\"modalExampleDemoLabel\">\r\n              Delete Bank Account?\r\n            </h2>\r\n          </div>\r\n          <h4 class=\"text-center\">Are You Sure To Delete this Bank Account?</h4>\r\n        </div>\r\n        <div class=\"modal-footer  justify-content-center\">\r\n          <a class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\">Close</a>\r\n          <a class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\" (click)=\"removeBanK()\">Delete\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container-fluid p-2 \" style=\"height: 100vh !important\">\r\n    <div class=\"row card-header bg-white\">\r\n      <div class=\"col-lg-12 navOption-btns \">\r\n        <button style=\"float: right !important\" (click)=\"openDialogCash()\" class=\"btn  m-1\"\r\n          type=\"button\">\r\n          <i class=\"fas fa-plus me-2\"> </i>Add Cash in hand\r\n        </button>\r\n        <button style=\"float: right !important\" (click)=\"openDialogBank()\"\r\n          class=\"btn m-1\" type=\"button\">\r\n          <i class=\"fas fa-plus  me-2\"> </i>Add Bank\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-1\">\r\n      <div class=\"col-lg-3 bg-light mt-2\">\r\n        <p class=\"m-3\" style=\"font-weight: bolder\">Bank Details</p>\r\n        <div>\r\n          <table class=\"table table-responsive fs--1 mb-0\">\r\n            <thead class=\"text-600\">\r\n              <tr>\r\n                <th class=\"text-nowrap\">Account</th>\r\n                <th class=\"text-nowrap\">Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"bankApiResponse\">\r\n              <tr *ngFor=\"let bankData of bankApiResponse; let i = index\">\r\n                <td style=\"vertical-align: middle;\" (click)=\"getbankdetailsById(bankData.id)\">\r\n                  <span style = \"float: left;\"><img src = \"../../../../assets/images/bank_logo.png\" /></span>\r\n                  <span style = \"float: left;padding-left: 10px;padding-top: 5px;color:#000\">{{ bankData.bankName }}</span>\r\n                </td>\r\n                <td style=\"vertical-align: middle;color:#000;\">20000</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n  \r\n        <div class=\"mb-3 mx-3\" style=\"margin-top: 100px\">\r\n          <p style=\"font-weight: bolder\">Cash In Hand</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-9\">\r\n        <div class=\"row bg-light m-2\">\r\n          <p class=\"mb-1 mt-2\"><span class=\"me-3\">Bank Name :</span>{{ singleBankName? singleBankName:\"\" }}</p>\r\n          <p class=\"mb-2 mt-1\">Account Number: {{singleBankAcc ? singleBankAcc:\"\"}}</p>\r\n          <p class=\"mb-1 mt-1\">IFSC Code: {{singleIfscCode ? singleIfscCode:\"\"}}</p>\r\n          <p class=\"mb-1 mt-1 d-flex flex-row\" style=\"justify-content: end\">\r\n            Balance: 200000.00\r\n          </p>\r\n        </div>\r\n        <div class=\"row bg-light m-2\">\r\n          <div class=\"m-3\">\r\n            <p style=\"font-weight: bolder\">Transactions</p>\r\n          </div>\r\n          <div>\r\n            <table class=\"table table-responsive fs--1 mb-0\">\r\n              <thead class=\"text-600\">\r\n                <tr>\r\n                  <th class=\"text-nowrap\">Date of Payment</th>\r\n                  <th class=\"text-nowrap\">Name</th>\r\n                  <th class=\"text-nowrap\">Type</th>\r\n                  <th class=\"text-nowrap\">Amount</th>\r\n                  <th class=\"text-nowrap\">Remarks</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">9-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishal</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">2000.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  \r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BanKDetailsComponent } from './ban-kdetails/ban-kdetails.component';\r\n\r\nconst routes: Routes = [\r\n  {   path: '',\r\n  component : BanKDetailsComponent,}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BankModuleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BankModuleRoutingModule } from './bank-module-routing.module';\r\nimport { BanKDetailsComponent } from './ban-kdetails/ban-kdetails.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddBankComponent } from './add-bank/add-bank.component';\r\nimport { AddCashComponent } from './add-cash/add-cash.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BanKDetailsComponent,\r\n    AddBankComponent,\r\n    AddCashComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BankModuleRoutingModule,\r\n    CommonModule,\r\n   \r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class BankModuleModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}