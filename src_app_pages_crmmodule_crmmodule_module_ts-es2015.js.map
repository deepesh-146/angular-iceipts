{"version":3,"file":"src_app_pages_crmmodule_crmmodule_module_ts-es2015.js","mappings":"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","sources":["./src/app/core/services/crm.service.ts","./src/app/pages/crmmodule/add-lead/add-lead.component.ts","./src/app/pages/crmmodule/add-lead/add-lead.component.html","./src/app/pages/crmmodule/crmmain/crmmain.component.ts","./src/app/pages/crmmodule/crmmain/crmmain.component.html","./src/app/pages/crmmodule/crmmodule-routing.module.ts","./src/app/pages/crmmodule/crmmodule.module.ts","./src/app/pages/crmmodule/edit-lead/edit-lead.component.ts","./src/app/pages/crmmodule/edit-lead/edit-lead.component.html","./src/app/pages/crmmodule/lead-list/lead-list.component.ts","./src/app/pages/crmmodule/lead-list/lead-list.component.html","./src/app/pages/crmmodule/view-lead/view-lead.component.ts","./src/app/pages/crmmodule/view-lead/view-lead.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { Subject } from 'rxjs';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrmService {\r\n\r\n  private leadAddedSource = new Subject<void>();\r\n  leadAdded$ = this.leadAddedSource.asObservable();\r\n\r\n  notifyLeadAdded() {\r\n    this.leadAddedSource.next();\r\n  }\r\n\r\n  constructor(public httpClient: HttpService) {\r\n    \r\n   }\r\n\r\n   //add Lead\r\n   postLead(data: {},id): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.addLead+id, 'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  //Lead list\r\n  getAllLeadList(data: {},id, size, page): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.inventory(data, UrlConstants.leadList + id + \"?size=\" + size + \"&page=\" + page, 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { CrmService } from 'src/app/core/services/crm.service';\r\nimport { RolesPermissionsService } from 'src/app/core/services/roles-permissions.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-lead',\r\n  templateUrl: './add-lead.component.html',\r\n  styleUrls: ['./add-lead.component.scss']\r\n})\r\nexport class AddLeadComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public LeadForm: any;\r\n  public submitted: boolean = false;\r\n  public profilePic: any = '';\r\n  public dragging: boolean = false;\r\n  public imageLoaded: boolean = false;\r\n  public loaded: boolean = false;\r\n  public profilePicUrl: any = '';\r\n  isProfilePicSelects: boolean = false;\r\n  public activeColor: string = 'green';\r\n  public baseColor: string = '#ccc';\r\n\r\n  public type;\r\n  pinDetails: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public dialogRef: MatDialogRef<AddLeadComponent>,\r\n    private toastService: ToastNotificationService,\r\n    public crmservice:CrmService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private router: Router,\r\n    public rolesPermissionsService: RolesPermissionsService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.LeadForm = this.formBuilder.group({\r\n      firstName: [\"\", Validators.required],\r\n      email: [\"\",[Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"),Validators.email]],\r\n      mobile: ['', [Validators.required,Validators.minLength(10), Validators.maxLength(10), Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      address: ['', Validators.required],\r\n      pincode: [null, Validators.required],\r\n      city: [null, Validators.required],\r\n      state: [null, Validators.required],\r\n      country: ['', Validators.required],\r\n      product: [\"P1\"],\r\n      status: ['', Validators.required],\r\n      contact: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      hours: ['', Validators.required],\r\n\r\n\r\n    });\r\n\r\n    this.LeadForm.get('pincode').valueChanges.pipe(debounceTime(500)).subscribe((pincode) => {\r\n      this.getPincodeDetails(pincode);\r\n    });\r\n  }\r\n\r\n  clearInput() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  get f() {\r\n    return this.LeadForm.controls;\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n  getPincodeDetails(pin) {\r\n    this.rolesPermissionsService.getEmployeePincode({}, pin).then((res) => {\r\n      this.pinDetails = res;\r\n      console.log(\"this.pinDetails\",this.pinDetails)\r\n      this.LeadForm.patchValue({\r\n        state: res.data.stateName,\r\n        city: res.data.districtName\r\n      });\r\n    });\r\n  }\r\n\r\n  onSaveLead() {\r\n    this.submitted = true;\r\n    if (this.LeadForm.invalid) {\r\n      console.log(\"this.LeadForm\",this.LeadForm)\r\n      this.toastService.openErrorSnackBar(\"Fill all required fields.\")\r\n      return false;\r\n    }\r\n    else {\r\n\r\n      let data =\r\n      {\r\n        \"userId\": this.currentUser.id,\r\n        \"name\": this.LeadForm.value.firstName,\r\n        \"email\": this.LeadForm.value.email,\r\n        \"mobile\": this.LeadForm.value.mobile,\r\n        //\"website\": \"examplewebsite.com\",\r\n        //\"fiscalInformation\": \"ABC123XYZ\",\r\n        \"projects\": this.LeadForm.value.product,\r\n        \"contactType\": this.LeadForm.value.contact,\r\n        \"status\": this.LeadForm.value.status,\r\n        \"image\": this.profilePicUrl,\r\n        \"address\": this.LeadForm.value.address,\r\n        \"country\": this.LeadForm.value.country,\r\n        \"pincode\": this.LeadForm.value.pincode,\r\n        \"city\": this.LeadForm.value.city,\r\n        \"state\": this.LeadForm.value.state,\r\n        \"type\": this.LeadForm.value.type,\r\n        \"hours\": this.LeadForm.value.hours\r\n      }\r\n\r\n      this.crmservice.postLead(data,this.currentUser.id).then((res) => {\r\n        if (res) {\r\n          this.toastService.openSnackBar(\"Lead added Successfully\");\r\n          this.router.navigate([\"/pages/crm/lead-list\"]);\r\n          this.crmservice.notifyLeadAdded();\r\n          this.dialogRef.close();\r\n        }\r\n  \r\n       }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went To Wrong\");\r\n          }\r\n        })\r\n    }\r\n\r\n}\r\n  getOfferType(event) {\r\n    this.type = event.source.value;\r\n    console.log(this.type)\r\n  }\r\n\r\n  handleDragEnter() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  handleDragLeave() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  handleDrop(e) {\r\n    e.preventDefault();\r\n    this.dragging = false;\r\n    this.handleInputChange(e);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.imageLoaded = true;\r\n  }\r\n\r\n  async handleInputChange(e) {\r\n    var pattern = /image-*/;\r\n    let formdata = new FormData();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (!file.type.match(pattern)) {\r\n      this.toastService.openErrorSnackBar(\"Invalid format. Please select an image file.\");\r\n      return;\r\n    }\r\n    const fileSizeLimit = 1 * 1024 * 1024; // 6 MB\r\n    if (file.size > fileSizeLimit) {\r\n      alert(\"File size exceeds the limit. Please select a smaller image (up to 1 MB).\");\r\n      return;\r\n    }\r\n    this.loaded = false;\r\n    if (e.target.files && e.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        this.profilePic = reader.result;\r\n      };\r\n      if (file == null) {\r\n        this.toastService.openErrorSnackBar(\"Please Select Image To Upload.\");\r\n      } else {\r\n        formdata.set(\"upload\", file);\r\n        this.rolesPermissionsService.uploadImage(formdata).then((res) => {\r\n          console.log(\"image Upload\",res);\r\n          this.profilePicUrl = res.data.location\r\n          this.isProfilePicSelects = true\r\n            this.toastService.openSnackBar(\"Image Uploaded Successfully\");\r\n          });\r\n        this.loaded = true;\r\n      }\r\n    }\r\n  }\r\n  deleteProfilePic() {\r\n\r\n    // this.profileService.deleteProfileImg({}, this.employeeId)\r\n    // .then((res) => {\r\n    //   console.log(res)\r\n    //   this.toastService.openSnackBar(\"Image deleted successfully\");\r\n    //   this.profilePic = '';\r\n    //   this.profilePicUrl = null; // Clear the profilePic value\r\n    //   this.isProfilePicSelects = false\r\n    //   this.loaded = true;\r\n    // })\r\n    // .catch((error) => {\r\n    //   console.log(error);\r\n    // });\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Lead</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"clearInput()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"onSaveLead()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"LeadForm\">\r\n        <div class=\"row\">\r\n            <div class=\"mb-3 col-lg-6\">\r\n                <div class=\"image-wrapper\">\r\n                    <label class=\"profile-pic\" ondragover=\"return false;\" [class.loaded]=\"loaded\"\r\n                        [style.outlineColor]=\"dragging ? activeColor : baseColor\" (dragenter)=\"handleDragEnter()\"\r\n                        (dragleave)=\"handleDragLeave()\" (drop)=\"handleDrop($event)\">\r\n                        <img [src]=\"profilePic ? profilePic : '/assets/images/default-profile-pic.JPG'\"\r\n                            (load)=\"handleImageLoad()\" [class.loaded]=\"imageLoaded\" class=\"shadow-sm\" />\r\n                        <input type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\">\r\n                    </label>\r\n                    <button *ngIf=\"profilePic\" class=\"delete-button\" (click)=\"deleteProfilePic()\">\r\n                        <i class=\"bi bi-x bi-sm\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 col-lg-6\">\r\n                <label class=\"form-label\">Full Name</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" matInput formControlName=\"firstName\" autocomplete=\"off\" placeholder=\"full Name\"\r\n                        [ngClass]=\"{\r\n                      'is-invalid': (f.firstName.invalid && f.firstName.touched) && submitted }\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\"\r\n                    *ngIf=\"(submitted || f.firstName.touched) && f.firstName.errors?.required\">\r\n                    Full Name is Required!\r\n                </mat-error>\r\n                <mat-error class=\"text-danger\"\r\n                    *ngIf=\"(submitted || f.firstName.touched) && f.firstName.errors?.alphabeticOnly && !f.firstName.errors?.required\">\r\n                    Only Alphabets are allowed.\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">Email</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                    <input type=\"text\" matInput formControlName=\"email\" placeholder=\"Email\" [ngClass]=\"{\r\n                          'is-invalid': (f.email.invalid && f.email.touched) && submitted }\" disabled\r\n                        autocomplete=\"off\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.email.touched) && f.email.errors?.required\">\r\n                    Email is required!\r\n                </mat-error>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.email.touched) && f.email.errors?.pattern\">\r\n                    Email must be a valid email address.\r\n                </mat-error>\r\n            </div>\r\n\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">Mobile Number</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" (keypress)=\"numberOnly($event)\" matInput formControlName=\"mobile\"\r\n                        minlength=\"10\" maxlength=\"10\" placeholder=\"Mobile Number\" [ngClass]=\"{\r\n                          'is-invalid': (f.mobile.invalid && f.mobile.touched) && submitted }\" autocomplete=\"off\">\r\n                </mat-form-field>\r\n\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.required\">\r\n                    Mobile Number is required!\r\n                </mat-error>\r\n                <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.pattern\">\r\n                    mobile must be a valid mobile number .\r\n                </mat-error> -->\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.minlength\">\r\n                    Mobile Number must be 10-digits only\r\n                </mat-error>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.mobile.touched) && f.mobile.errors?.maxlength\">\r\n                    Mobile Number must be 10-digits only\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!-- Item Description -->\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                <label class=\"form-label\">Address</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <textarea matInput rows=\"1\" placeholder=\"Enter Address\"\r\n                        formControlName=\"address\" autocomplete=\"off\"></textarea>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                    Address is required!\r\n                </mat-error>\r\n                <!-- <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.description.touched)\" >\r\n                    <mat-error *ngIf=\"f.description.errors?.required\">\r\n                        Item Description is required!\r\n                    </mat-error>\r\n                    [ngClass]=\"{\r\n                        'is-invalid': (f.itemCode.invalid && f.itemCode.touched) && submitted }\" \r\n                </mat-error> -->\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">pincode</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" matInput ngModel formControlName=\"pincode\" placeholder=\"Pincode\"\r\n                        [ngClass]=\"{'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                        autocomplete=\"off\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                    Pincode is Required!\r\n                </mat-error>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                    Pincode should be only digits\r\n                </mat-error>\r\n            </div>\r\n\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">City</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" matInput ngModel formControlName=\"city\" disabled placeholder=\"City\"\r\n                        autocomplete=\"off\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.city.touched) && f.city.errors?.required\">\r\n                    City is Required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">State</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" matInput ngModel formControlName=\"state\" disabled placeholder=\"State\"\r\n                        autocomplete=\"off\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                    State is Required!\r\n                </mat-error>\r\n            </div>\r\n\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">Country</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"text\" matInput ngModel formControlName=\"country\" placeholder=\"Country\"\r\n                        autocomplete=\"off\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                    Country is Required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                <label class=\"form-label\">Product</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select formControlName=\"product\" matNativeControl disableOptionCentering\r\n                        placeholder=\"Select Support Type\" autocomplete=\"off\">\r\n                        <mat-option value=\"P1\">P1</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                <label class=\"form-label\">Status</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select formControlName=\"status\" matNativeControl disableOptionCentering\r\n                        placeholder=\"Select Support Type\" autocomplete=\"off\">\r\n                        <mat-option value=\"FOLLOWUP\">FollowUp</mat-option>\r\n                        <mat-option value=\"REJECT\">Reject</mat-option>\r\n                        <mat-option value=\"CLOSE\">Close</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.status.touched) && f.status.errors?.required\">\r\n                    Status is Required!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                <label class=\"form-label\">Contact Type</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select formControlName=\"contact\" matNativeControl disableOptionCentering\r\n                        placeholder=\"Select Contact Type\" autocomplete=\"off\">\r\n                        <mat-option value=\"CLIENT\">Client</mat-option>\r\n                        <mat-option value=\"CUSTOMER\">Customer</mat-option>\r\n                        <mat-option value=\"LEAD\">Lead</mat-option>\r\n                    </mat-select>\r\n                   \r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.contact.touched) && f.contact.errors?.required\">\r\n                    Contact Type is Required!\r\n                </mat-error>\r\n            </div>\r\n            <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                <label class=\"form-label\">Type</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-select formControlName=\"type\" matNativeControl disableOptionCentering placeholder=\"Select Type\"\r\n                        (selectionChange)=\"getOfferType($event)\" autocomplete=\"off\">\r\n                        <mat-option value=\"HOURS\">Hours</mat-option>\r\n                        <mat-option value=\"COST\">Cost</mat-option>\r\n                    </mat-select>\r\n                   \r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.type.touched) && f.type.errors?.required\">\r\n                    Type is Required!\r\n                 </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"type == 'HOURS' || type == 'COST'\">\r\n            <div class=\"col-lg-6\">\r\n                <label class=\"form-label\">Hours</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input type=\"number\" min=\"0\" matInput ngModel formControlName=\"hours\" placeholder=\"Enter Hours\"\r\n                        autocomplete=\"off\">\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.hours.touched) && f.hours.errors?.required\">\r\n                    Hours is Required!\r\n                 </mat-error>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-crmmain',\r\n  templateUrl: './crmmain.component.html',\r\n  styleUrls: ['./crmmain.component.scss']\r\n})\r\nexport class CrmmainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-4\">\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"row mt-3 page-nav-link\">\r\n             <div class=\"links col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-4 col-xs-4\" id=\"productlistLink\">\r\n                  <a class=\"mt-3 pb-1 text-nowrap productLink\" routerLink=\"./lead-list\" routerLinkActive='active'>Lead List</a>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <hr  class = \"mt-1\" />\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CrmmainComponent } from './crmmain/crmmain.component';\r\nimport { LeadListComponent } from './lead-list/lead-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:CrmmainComponent,\r\n    children: [\r\n      {\r\n        path:'',\r\n        redirectTo: 'lead-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path:'lead-list',\r\n        component:LeadListComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CrmmoduleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CrmmoduleRoutingModule } from './crmmodule-routing.module';\r\nimport { CrmmainComponent } from './crmmain/crmmain.component';\r\nimport { AddLeadComponent } from './add-lead/add-lead.component';\r\nimport { EditLeadComponent } from './edit-lead/edit-lead.component';\r\nimport { ViewLeadComponent } from './view-lead/view-lead.component';\r\nimport { LeadListComponent } from './lead-list/lead-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CrmmainComponent,\r\n    AddLeadComponent,\r\n    EditLeadComponent,\r\n    ViewLeadComponent,\r\n    LeadListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CrmmoduleRoutingModule,\r\n     FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule\r\n  ]\r\n})\r\nexport class CrmmoduleModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-lead',\r\n  templateUrl: './edit-lead.component.html',\r\n  styleUrls: ['./edit-lead.component.scss']\r\n})\r\nexport class EditLeadComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-lead works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddLeadComponent } from '../add-lead/add-lead.component';\r\nimport { CrmService } from 'src/app/core/services/crm.service';\r\n\r\n@Component({\r\n  selector: 'app-lead-list',\r\n  templateUrl: './lead-list.component.html',\r\n  styleUrls: ['./lead-list.component.scss']\r\n})\r\nexport class LeadListComponent implements OnInit {\r\n\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public currentPageNo: number = 0;\r\n  public partyPageSize: number = 10;\r\n  public leadlistData:any;\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public crmservice:CrmService,) {\r\n    \r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getLeadList();\r\n    this.crmservice.leadAdded$.subscribe(() => {\r\n      // Fetch the updated list of users\r\n      this.getLeadList();\r\n    });\r\n  }\r\n\r\n  getLeadList(){\r\n    this.crmservice.getAllLeadList({}, this.currentUser.id,this.partyPageSize, (this.currentPageNo + 1)).then((res) => {\r\n      console.log(\"lead list data\",res);\r\n      this.leadlistData = res.data.pageData;\r\n\r\n    })\r\n  }\r\n\r\n  \r\n  openDialog(): void {\r\n    const dialogRef: MatDialogRef<AddLeadComponent> = this.dialog.open(AddLeadComponent, {\r\n      width: '700px',\r\n      height: '730px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-lead-class',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-white p-0\">\r\n\r\n  <div class=\"row d-flex flex-center mb-3\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n      <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"search\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3 mt-2\"\r\n      style=\"display:flex;justify-content: space-around !important;align-items: center;\">\r\n      <button class=\"btn text-nowrap\" type=\"button\" (click)=\"openDialog()\"><i class=\"fas fa-plus me-2\"> </i>Add Lead\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap\">\r\n        <i class=\"fas fa-upload\"></i> Import\r\n      </button>\r\n\r\n      <button class=\"btn text-nowrap\"><i class=\"fas fa-download\"></i></button>\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"my-0 py-0\" />\r\n\r\n  <div style=\"width:100% ; overflow-x: scroll;\">\r\n    <table class=\"table table-responsive table-bordered fs--1 mb-0\">\r\n      <thead class=\"text-600\">\r\n        <tr>\r\n          <th class=\"text-nowrap col-1\" style=\"vertical-align:middle;\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\">\r\n          </th>\r\n          <th class=\"text-nowrap\">Name</th>\r\n          <th class=\"text-nowrap\">Mobile No</th>\r\n          <th class=\"text-nowrap\">Email</th>\r\n          <th class=\"text-nowrap\">Product</th>\r\n          <th class=\"text-nowrap\">Status</th>\r\n          <th class=\"text-nowrap\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr class=\"btn-reveal-trigger text-left\" *ngFor=\"let item of leadlistData; let i = index\" style=\"color: #676398!important;\">\r\n          <td scope=\"row\" style=\"vertical-align:middle;\">\r\n            <input class=\"form-check-input\" type=\"checkbox\">\r\n          </td>\r\n          <td class=\"name text-nowrap\" style=\"vertical-align:middle;\">{{item.name}}</td>\r\n          <td class=\"mobile text-nowrap\" style=\"vertical-align:middle;\">{{item.mobile}}</td>\r\n          <td class=\"email text-nowrap\" style=\"vertical-align:middle;\">{{item.email}}</td>\r\n          <td class=\"product text-nowrap\" style=\"vertical-align:middle;\">{{item.projects}}</td>\r\n          <td class=\"status text-nowrap\" style=\"vertical-align:middle;\">{{item.status}}</td>\r\n          <td style=\"vertical-align:middle; width:20%!important; white-space:nowrap; \">\r\n            <div class=\"\" style=\"padding-left: 10%\">\r\n              <button class=\"btn btnp me-4\" type=\"button\">\r\n                <span class=\"bi bi-eye icon-color iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                  title=\"View\"></span>\r\n              </button>\r\n\r\n              <button class=\"btn btnp me-4\">\r\n                <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                  title=\"Edit\"></span>\r\n              </button>\r\n\r\n              <button class=\"btn btnp me-4\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                <span class=\"bi-trash icon-color iconFontSize\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                  title=\"Delete\" style=\"color: red;\"></span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-lead',\r\n  templateUrl: './view-lead.component.html',\r\n  styleUrls: ['./view-lead.component.scss']\r\n})\r\nexport class ViewLeadComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>view-lead works!</p>\r\n"],"names":[],"sourceRoot":"webpack:///"}