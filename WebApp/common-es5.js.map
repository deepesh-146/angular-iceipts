{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,eAASA,oBAAT,CAA6BC,WAA7B,EAAkDC,mBAAlD,EAA6E;AAChF,eAAO,UAACC,SAAD,EAAuB;AAC1B,cAAMC,OAAO,GAAGD,SAAS,CAACE,QAAV,CAAmBJ,WAAnB,CAAhB;AACA,cAAMK,eAAe,GAAGH,SAAS,CAACE,QAAV,CAAmBH,mBAAnB,CAAxB;;AACA,cAAII,eAAe,CAACC,MAAhB,IAA0B,CAACD,eAAe,CAACC,MAAhB,CAAuBC,kBAAtD,EAA0E;AACtE;AACH;;AACD,cAAIJ,OAAO,CAACK,KAAR,KAAkBH,eAAe,CAACG,KAAtC,EAA6C;AACzCH,2BAAe,CAACI,SAAhB,CAA0B;AAAEF,gCAAkB,EAAE;AAAtB,aAA1B;AACH,WAFD,MAEO;AACHF,2BAAe,CAACI,SAAhB,CAA0B,IAA1B;AACH;AAEJ,SAZD;AAaH;;;;","names":["ConfirmedValidators","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","confirmedValidator","value","setErrors"],"sources":["webpack:///src/app/_helpers/confirmed.validators.ts"],"sourcesContent":["import { FormGroup } from '@angular/forms';\r\n\r\nexport function ConfirmedValidators(controlName: string, matchingControlName: string){\r\n    return (formGroup:FormGroup)=>{\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n\r\n    }\r\n}"]}