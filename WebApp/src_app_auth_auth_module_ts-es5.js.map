{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA+B+GA;;AAAAA,uEAyM8V,CAzM9VA,EAyM8V,OAzM9VA,EAyM8V,CAzM9VA,EAyM8V,CAzM9VA;;AAAAA,mEAyMqW,OAzMrWA,EAyMqW;AAzMrWA,wEAyMqWC,GAzMrWD;;AAyMqW,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA,EAyMqW,OAzMrWA,EAyMqW;AAAA,8BAzMrWA,4DAyMqWC,GAzMrWD,CAyMqW;;AAAA;;AAAA,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA,EAyMqW,OAzMrWA,EAyMqW;AAzMrWA,wEAyMqWC,GAzMrWD;;AAyMqW,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA,EAyMqW,SAzMrWA,EAyMqW;AAAA,8BAzMrWA,4DAyMqWC,GAzMrWD,CAyMqW;;AAAA;;AAAA,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA;;AAAAA;;;;;;;uBAAAA;;AAAAA,+EAyM6iB,YAzM7iBA,EAyM6iBE,wBAzM7iBF,EAyM6iB,EAzM7iBA;;AAAAA,+EAyMuuB,IAzMvuBA,EAyMuuB,MAzMvuBA,EAyMuuBG,IAzMvuBH,EAyMuuB,GAzMvuBA,EAyMuuBE,mBAzMvuBF,EAyMuuB,EAzMvuBA;;AAAAA,mEAyMqY,SAzMrYA,EAyMqYE,4CAzMrYF,EAyMqY,MAzMrYA,EAyMqYE,gBAzMrYF,EAyMqY,aAzMrYA,EAyMqY,gEAzMrYA,EAyMqY,SAzMrYA,EAyMqYE,yBAzMrYF,EAyMqY,aAzMrYA,EAyMqYE,gCAzMrYF;;;;;;AAAAA,uEAyMkL,CAzMlLA,EAyMkL,KAzMlLA,EAyMkL,CAzMlLA;;AAAAA,mEAyM8V,CAzM9VA,EAyM8VI,0CAzM9VJ,EAyM8V,CAzM9VA,EAyM8V,EAzM9VA,EAyM8V,OAzM9VA,EAyM8V,CAzM9VA;;AAAAA;;AAAAA;;;;uBAAAA;;AAAAA,+EAyMuL,+BAzMvLA,EAyMuLK,4BAzMvLL,EAyMuL,EAzMvLA;;AAAAA,+EAyMwP,IAzMxPA,EAyMwP,IAzMxPA,EAyMwPK,mBAzMxPL,EAyMwP,EAzMxPA;;AAAAA,mEAyMmT,SAzMnTA,EAyMmTK,6BAzMnTL;;AAAAA,kEAyMwoB,CAzMxoBA;;AAAAA,mEAyMwoB,SAzMxoBA,4DAyMwoB,CAzMxoBA,EAyMwoB,CAzMxoBA,EAyMwoBK,uDAzMxoBL;;;;UAxBzGM;;;;;;;iBACwB,6BAACC,KAAD,EAAQ;AAC9B,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,sBAAlB,CAAP;AACH;;;iBACkB,sBAACA,KAAD,EAAQ;AACvB,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,kBAAlB,CAAP;AACH;;;iBACiB,qBAACA,KAAD,EAAQ;AACtB,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,gBAAlB,CAAP;AACH;;;iBACgB,oBAACA,KAAD,EAAQ;AACrB,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,YAAlB,CAAP,CADqB,CACmB;AAC3C;;;iBACW,eAACA,KAAD,EAAQE,IAAR,EAAc;AACtB,gBAAIC,WAAW,GAAGD,IAAI,CAACE,KAALF,CAAW,GAAXA,CAAlB;AACA,mBAAOC,WAAW,CAACE,IAAZF,CAAiBG,WAAC;AAAA,qBAAIA,CAAC,KAAKN,KAAK,CAACO,GAAhB;AAAA,aAAlBJ,CAAP;AACH;;;;;;UAGCK;;;;;;;iBACFC,mBAAUC,KAAVD,EAAiB;AACb,mBAAOE,MAAM,CAACT,IAAPS,CAAYD,KAAZC,CAAP;AACH;;;;;AAEL;;;AAAmBH,cAAQ,CAACI,IAATJ;AAAA,yBAAsGA,QAAtG;AAAA;AACnB;;;AAAmBA,cAAQ,CAACK,KAATL,kBAD4Ff,2DAC5F;AAAAqB;AAAAC,cAAoGP,QAApG;AAAAQ;AAAA,OAD4FvB,CAC5Fe;;AACnB;AAAA,2DAF+Gf,gEAEnBe,QAFmBf,EAEG,CAAC;AACvGsB,cAAI,EAAEE,+CADiG;AAEvGC,cAAI,EAAE,CAAC;AACCJ,gBAAI,EAAE;AADP,WAAD;AAFiG,SAAD,CAFHrB,EAE/G,IAF+GA,EAE/G,IAF+GA,CAE/G;AAAA;;UAOM0B;AACFC,sCAAYC,QAAZD,EAAsB;AAAA;;AAClB,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKC,MAAL,GAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd,CAFkB,CAGlB;;AACA,eAAKC,aAAL,GAAqB,IAAIC,uDAAJ,EAArB;AACA,eAAKC,aAAL,GAAqB,IAAIC,KAAJ,CAAU,KAAKL,MAAL,CAAYC,MAAtB,CAArB;AACA,eAAKK,YAAL,GAAoBC,IAAI,CAACC,MAALD,GACfE,QADeF,CACN,EADMA,EAEfG,SAFeH,CAEL,CAFKA,IAEA,IAAII,IAAJ,GAAWC,OAAX,GAAqBH,QAArB,CAA8B,EAA9B,CAFpB;AAGH;;;;eACY,eAAG;AACZ,gBAAII,EAAJ,EAAQC,EAAR;;AACA,mBAAO,CAAC,CAACD,EAAE,GAAG,KAAKb,MAAX,MAAuB,IAAvB,IAA+Ba,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACE,eAA5D,IACD,UADC,GAED,CAAC,CAACD,EAAE,GAAG,KAAKd,MAAX,MAAuB,IAAvB,IAA+Bc,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACE,gBAA5D,IACI,KADJ,GAEI,MAJV;AAKH;;;iBACDC,oBAAW;AAAA;;AACP,iBAAKC,OAAL,GAAe,IAAIC,qDAAJ,CAAc,EAAd,CAAf;;AACA,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKpB,MAAL,CAAYC,MAAxC,EAAgDmB,KAAK,EAArD,EAAyD;AACrD,mBAAKF,OAAL,CAAaG,UAAb,CAAwB,KAAKC,cAAL,CAAoBF,KAApB,CAAxB,EAAoD,IAAIG,uDAAJ,EAApD;AACH;;AACD,iBAAKL,OAAL,CAAaM,YAAb,CAA0BC,SAA1B,CAAqCC,WAAD,EAAO;AACvC,oBAAK3B,QAAL,CAAcZ,SAAd,CAAwB,MAAK+B,OAAL,CAAaS,QAArC,EAA+CC,OAA/C,CAAwD5C,WAAD,EAAO;AAC1D,oBAAI6C,GAAG,GAAG,MAAKX,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyBI,KAAnC;;AACA,oBAAIyC,GAAG,IAAIA,GAAG,CAAC5B,MAAJ4B,GAAa,CAAxB,EAA2B;AACvB,sBAAIA,GAAG,CAAC5B,MAAJ4B,IAAc,MAAK7B,MAAL,CAAYC,MAA9B,EAAsC;AAClC,0BAAK6B,QAAL,CAAcD,GAAd;AADJ,yBAGK;AACD,0BAAKE,YAAL;AACH;AACJ;AATL;AADJ;AAaH;;;iBACDC,2BAAkB;AACd,gBAAI,CAAC,KAAKhC,MAAL,CAAYiC,gBAAjB,EAAmC;AAC/B,kBAAMC,aAAa,GAAGC,QAAQ,CAACC,cAATD,aAA6B,KAAK7B,YAAlC6B,EAAtB;;AACA,kBAAID,aAAJ,EAAmB;AACf,oBAAMG,GAAG,GAAGH,aAAa,CAACI,sBAAdJ,CAAqC,WAArCA,EAAkD,CAAlDA,CAAZ;;AACA,oBAAIG,GAAG,IAAIA,GAAG,CAACE,KAAf,EAAsB;AAClBF,qBAAG,CAACE,KAAJF;AACH;AACJ;AACJ;AACJ;;;iBACDf,wBAAekB,GAAflB,EAAoB;AAChB,kCAAekB,GAAf;AACH;;;iBACDC,mBAAUC,MAAVD,EAAkBE,QAAlBF,EAA4B;AACxB,gBAAIhE,YAAY,CAACmE,UAAbnE,CAAwBiE,MAAxBjE,CAAJ,EAAqC;AACjCiE,oBAAM,CAACG,cAAPH;AACA,qBAAO,KAAP;AACH;AACJ;;;iBACDI,iBAAQJ,MAARI,EAAgB;AACZ,gBAAIC,MAAM,GAAG,KAAKC,UAAL,aAAqB,KAAKA,UAA1B,SAAuCN,MAAM,CAACO,MAAPP,CAActD,KAArD,IAA+DsD,MAAM,CAACO,MAAPP,CAActD,KAA1F;;AACA,gBAAI,KAAKY,MAAL,CAAYgB,gBAAZ,IAAgC,CAAC,KAAKkC,cAAL,CAAoBH,MAApB,CAArC,EAAkE;AAC9DL,oBAAM,CAACO,MAAPP,CAActD,KAAdsD,GAAsB,EAAtBA;AACAA,oBAAM,CAACS,eAAPT;AACAA,oBAAM,CAACG,cAAPH;AACA;AACH;AACJ;;;iBACDU,iBAAQV,MAARU,EAAgBT,QAAhBS,EAA0B;AACtB,gBAAMC,WAAW,GAAG,KAAKC,SAAL,eAAsBX,QAAQ,GAAG,CAAjC,EAApB;AACA,gBAAMY,WAAW,GAAG,KAAKD,SAAL,eAAsBX,QAAQ,GAAG,CAAjC,EAApB;;AACA,gBAAIlE,YAAY,CAAC+E,YAAb/E,CAA0BiE,MAA1BjE,CAAJ,EAAuC;AACnCiE,oBAAM,CAACG,cAAPH;AACA,mBAAKe,WAAL,CAAiBJ,WAAjB;AACA;AACH;;AACD,gBAAI5E,YAAY,CAACiF,WAAbjF,CAAyBiE,MAAzBjE,CAAJ,EAAsC;AAClCiE,oBAAM,CAACG,cAAPH;AACA,mBAAKe,WAAL,CAAiBF,WAAjB;AACA;AACH;;AACD,gBAAI9E,YAAY,CAACkF,mBAAblF,CAAiCiE,MAAjCjE,KAA4C,CAACiE,MAAM,CAACO,MAAPP,CAActD,KAA/D,EAAsE;AAClE,mBAAKqE,WAAL,CAAiBF,WAAjB;AACA,mBAAKxB,YAAL;AACA;AACH;;AACD,gBAAI,CAACW,MAAM,CAACO,MAAPP,CAActD,KAAnB,EAA0B;AACtB;AACH;;AACD,gBAAI,KAAKwE,cAAL,CAAoBlB,MAApB,CAAJ,EAAiC;AAC7B,mBAAKe,WAAL,CAAiBJ,WAAjB;AACH;;AACD,iBAAKtB,YAAL;AACH;;;iBACDmB,wBAAerB,GAAfqB,EAAoB;AAChB,mBAAOrB,GAAG,IAAI,cAAcgC,IAAd,CAAmBhC,GAAnB,CAAd;AACH;;;iBACDyB,mBAAUQ,EAAVR,EAAc;AACV,6BAAUQ,EAAV,cAAgB,KAAKxD,YAArB;AACH;;;iBACDmD,qBAAYM,KAAZN,EAAmB;AACf,iBAAKO,OAAL,CAAaD,KAAb;AACA,gBAAM1B,GAAG,GAAGF,QAAQ,CAACC,cAATD,CAAwB4B,KAAxB5B,CAAZ;;AACA,gBAAIE,GAAG,IAAIA,GAAG,CAAC4B,iBAAf,EAAkC;AAC9BC,wBAAU,CAAC,YAAM;AACb7B,mBAAG,CAAC4B,iBAAJ5B,CAAsB,CAAtBA,EAAyB,CAAzBA;AADM,iBAEP,CAFO,CAAV6B;AAGH;AACJ;;;iBACDN,wBAAelF,KAAfkF,EAAsB;AAClB,gBAAMO,GAAG,GAAGzF,KAAK,CAACO,GAAlB;AACA,gBAAMmF,QAAQ,GAAG,4BAA4BP,IAA5B,CAAiCQ,SAAS,CAACC,SAA3C,CAAjB;AACA,mBAAQF,QAAQ,IACZ,gBAAgBP,IAAhB,CAAqBM,GAArB,CADIC,IAEH,KAAKpE,MAAL,CAAYuE,aAAZ,IACG,KAAKvE,MAAL,CAAYuE,aAAZ,CAA0BC,QAA1B,CAAmC9F,KAAK,CAAC+F,OAAzC,CAHR;AAIH;;;iBACDT,iBAAQD,KAARC,EAAe;AACX,gBAAM3B,GAAG,GAAGF,QAAQ,CAACC,cAATD,CAAwB4B,KAAxB5B,CAAZ;;AACA,gBAAIE,GAAJ,EAAS;AACLA,iBAAG,CAACE,KAAJF;AACH;AAxHiB,YA0HtB;;;;iBACAP,kBAAS1C,KAAT0C,EAAgB;AAAA;;AACZ,gBAAI,KAAK9B,MAAL,CAAYgB,gBAAZ,IAAgC0D,KAAK,CAACtF,KAAD,CAAzC,EAAkD;AAC9C;AACH;;AACD,iBAAK8B,OAAL,CAAayD,KAAb;;AACA,gBAAI,CAACvF,KAAL,EAAY;AACR,mBAAK2C,YAAL;AACA;AACH;;AACD3C,iBAAK,GAAGA,KAAK,CAACqB,QAANrB,GAAiBwF,OAAjBxF,CAAyB,KAAzBA,EAAgC,EAAhCA,CAARA,CATY,CASiC;;AAC7CiB,iBAAK,CAACwE,IAANxE,CAAWjB,KAAXiB,EAAkBuB,OAAlBvB,CAA0B,UAACyE,CAAD,EAAItC,GAAJ,EAAY;AAClC,kBAAI,OAAKtB,OAAL,CAAa6D,GAAb,CAAiB,OAAKzD,cAAL,CAAoBkB,GAApB,CAAjB,CAAJ,EAAgD;AAC5C,uBAAKtB,OAAL,CAAa6D,GAAb,CAAiB,OAAKzD,cAAL,CAAoBkB,GAApB,CAAjB,EAA2CV,QAA3C,CAAoDgD,CAApD;AACH;AAHL;;AAKA,gBAAI,CAAC,KAAK9E,MAAL,CAAYiC,gBAAjB,EAAmC;AAC/B,kBAAMC,aAAa,GAAGC,QAAQ,CAACC,cAATD,aAA6B,KAAK7B,YAAlC6B,EAAtB;AACA,kBAAI6C,qBAAqB,GAAG5F,KAAK,CAACa,MAANb,GAAe,KAAKY,MAAL,CAAYC,MAA3Bb,GAAoCA,KAAK,CAACa,MAA1Cb,GAAoD,KAAKY,MAAL,CAAYC,MAAZ,GAAqB,CAArG;AACA,kBAAIoC,GAAG,GAAGH,aAAa,CAACI,sBAAdJ,CAAqC,WAArCA,EAAkD8C,qBAAlD9C,CAAV;;AACA,kBAAIG,GAAG,IAAIA,GAAG,CAACE,KAAf,EAAsB;AAClBF,mBAAG,CAACE,KAAJF;AACH;AACJ;;AACD,iBAAKN,YAAL;AACH;;;iBACDA,wBAAe;AAAA;;AACX,gBAAIlB,EAAJ;;AACA,gBAAIgB,GAAG,GAAG,EAAV;AACA,iBAAK9B,QAAL,CAAcZ,SAAd,CAAwB,KAAK+B,OAAL,CAAaS,QAArC,EAA+CC,OAA/C,CAAuD5C,WAAC,EAAI;AACxD,kBAAI,OAAKkC,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyBI,KAA7B,EAAoC;AAChC,oBAAI6F,OAAO,GAAG,OAAK/D,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyBI,KAAvC;AACA,oBAAI8F,cAAc,GAAGD,OAAO,CAAChF,MAARgF,GAAiB,CAAtC;AACA,oBAAIE,sBAAsB,GAAG,CAAC,OAAKnF,MAAL,CAAYgB,gBAAb,IAAiC,OAAKhB,MAAL,CAAYoF,UAA7C,KAA4D,OAAKpF,MAAL,CAAYoF,UAAZ,CAAuBC,iBAAvB,MAA8C,OAA9C,IAAyD,OAAKrF,MAAL,CAAYoF,UAAZ,CAAuBC,iBAAvB,MAA8C,OAAnK,CAA7B;AACAJ,uBAAO,GAAGA,OAAO,CAAC,CAAD,CAAjBA;AACA,oBAAIK,cAAc,GAAGH,sBAAsB,GAAG,OAAKnF,MAAL,CAAYoF,UAAZ,CAAuBC,iBAAvB,MAA8C,OAA9C,GAAwDJ,OAAO,CAACM,WAARN,EAAxD,GAAgFA,OAAO,CAACO,WAARP,EAAnF,GAA2GA,OAAtJ;;AACA,oBAAIE,sBAAsB,IAAIG,cAAc,IAAIL,OAAhD,EAAyD;AACrDE,wCAAsB,GAAG,KAAzBA;AADJ,uBAGK;AACDF,yBAAO,GAAGK,cAAVL;AACH;;AACDpD,mBAAG,IAAIoD,OAAPpD;;AACA,oBAAIqD,cAAc,IAAIC,sBAAtB,EAA8C;AAC1C,yBAAKjE,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyB8C,QAAzB,CAAkCmD,OAAlC;AACH;AACJ;AAjBL;;AAmBA,gBAAI,CAACpE,EAAE,GAAG,KAAK4E,QAAX,MAAyB,IAAzB,IAAiC5E,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACiB,QAAjE,EAA2E;AACvE,mBAAK2D,QAAL,CAAc3D,QAAd,CAAuBD,GAAvB;AACH;;AACD,iBAAK3B,aAAL,CAAmBwF,IAAnB,CAAwB7D,GAAxB;AACA,iBAAKmB,UAAL,GAAkBnB,GAAlB;AACH;;;iBACD8D,qBAAYC,CAAZD,EAAe;AACX;AACA,gBAAIE,aAAa,GAAGD,CAAC,CAACC,aAAFD,IAAmBE,MAAM,CAAC,eAAD,CAA7C;;AACA,gBAAID,aAAJ,EAAmB;AACf,kBAAIE,UAAU,GAAGF,aAAa,CAACG,OAAdH,CAAsB,MAAtBA,CAAjB;AAJO,cAMX;;;AACAD,aAAC,CAACzC,eAAFyC;AACAA,aAAC,CAAC/C,cAAF+C;;AACA,gBAAI,CAACG,UAAD,IAAgB,KAAK/F,MAAL,CAAYgB,gBAAZ,IAAgC,CAAC,KAAKkC,cAAL,CAAoB6C,UAApB,CAArD,EAAuF;AACnF;AACH;;AACD,iBAAKjE,QAAL,CAAciE,UAAd;AACH;;;;;AAEL;;;AAAmBlG,0BAAmB,CAACP,IAApBO;AAAA,yBAAiHA,oBAAjH,EAxM4F1B,gEAwM0De,QAxM1Df,CAwM5F;AAAA;AACnB;;;AAAmB0B,0BAAmB,CAACoG,IAApBpG,kBAzM4F1B,gEAyM5F;AAAAsB,cAAqGI,oBAArG;AAAAqG;AAAAC;AAAAnG;AAAAyF;AAAA;AAAAW;AAAAlG;AAAA;AAAAmG;AAAAC;AAAAC;AAAAC;AAAA;AAzM4FrI,qEAyMkL,CAzMlLA,EAyMkLsI,kCAzMlLtI,EAyMkL,CAzMlLA,EAyMkL,CAzMlLA,EAyMkL,KAzMlLA,EAyMkL,CAzMlLA;AAyM5F;;AAAA;AAzM4FA,qEAyMmR,MAzMnRA,EAyMmRuI,iDAzMnRvI;AAyM5F;AAAA;AAAAwI,qBAA21CC,iDAA31C,EAA46CA,oDAA56C,EAA8+CA,oDAA9+C,EAAwlDC,gEAAxlD,EAAq1DA,4DAAr1D,EAA29DA,2DAA39D,EAAgjEA,gEAAhjE;AAAAC,gBAA0tE5H,QAA1tE;AAAA6H;AAAA,OAzM4F5I,CAyM5F0B;;AACnB;AAAA,2DA1M+G1B,gEA0MnB0B,oBA1MmB1B,EA0Mc,CAAC;AAClHsB,cAAI,EAAEuH,oDAD4G;AAElHpH,cAAI,EAAE,CAAC;AACC;AACAqH,oBAAQ,EAAE,cAFX;AAGCC,uBAAW,EAAE,+BAHd;AAICC,qBAAS,EAAE,CAAC,+BAAD;AAJZ,WAAD;AAF4G,SAAD,CA1MdhJ,EAkNnF,YAAY;AAAE,iBAAO,CAAC;AAAEsB,gBAAI,EAAEP;AAAR,WAAD,CAAP;AAR1C,SA1M+Gf,EAkNrB;AAAE6B,gBAAM,EAAE,CAAC;AACrFP,gBAAI,EAAE2H;AAD+E,WAAD,CAAV;AAE1ElH,uBAAa,EAAE,CAAC;AAChBT,gBAAI,EAAE4H;AADU,WAAD,CAF2D;AAI1E5B,kBAAQ,EAAE,CAAC;AACXhG,gBAAI,EAAE2H;AADK,WAAD;AAJgE,SAlNqBjJ,CA0M/G;AAAA;;UAgBMmJ;;;AAEN;;;AAAmBA,uBAAgB,CAAChI,IAAjBgI;AAAA,yBAA8GA,iBAA9G;AAAA;AACnB;;;AAAmBA,uBAAgB,CAACC,IAAjBD,kBA7N4FnJ,+DA6N5F;AAAAsB,cAA+G6H;AAA/G,OA7N4FnJ,CA6N5FmJ;AAGnB;;AAAmBA,uBAAgB,CAACE,IAAjBF,kBAhO4FnJ,+DAgO5F;AAAAsJ,mBAA4I,CAACvI,QAAD,CAA5I;AAAAwI,kBAAkK,CACzKC,yDADyK,EAEzKC,uDAFyK,EAGzKC,+DAHyK,CAAlK;AAAA,OAhO4F1J,CAgO5FmJ;;AAKnB;AAAA,2DArO+GnJ,gEAqOnBmJ,iBArOmBnJ,EAqOW,CAAC;AAC/GsB,cAAI,EAAEqI,mDADyG;AAE/GlI,cAAI,EAAE,CAAC;AACC8H,mBAAO,EAAE,CACLC,yDADK,EAELC,uDAFK,EAGLC,+DAHK,CADV;AAMCE,wBAAY,EAAE,CAAClI,oBAAD,EAAsBX,QAAtB,CANf;AAOC8I,mBAAO,EAAE,CAACnI,oBAAD,CAPV;AAQC4H,qBAAS,EAAE,CAACvI,QAAD;AARZ,WAAD;AAFyG,SAAD,CArOXf,EAqO/G,IArO+GA,EAqO/G,IArO+GA,CAqO/G;AAAA;;UAcM8J;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClQA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,gBADR;AAEEC,iBAAS,EAAEC;AAFb,OADqB,EAMrB;AACEF,YAAI,EAAE,OADR;AAEEC,iBAAS,EAAEE;AAFb,OANqB,EAWrB;AACEH,YAAI,EAAE,QADR;AAEEC,iBAAS,EAAEG;AAFb,OAXqB,EAgBrB;AACEJ,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAEI;AAFb,OAhBqB,EAoBrB;AACEL,YAAI,EAAE,oBADR;AAEEC,iBAAS,EAAEK;AAFb,OApBqB,EAyBrB;AACEN,YAAI,EAAE,gBADR;AAEEC,iBAAS,EAAEM;AAFb,OAzBqB,EA6BrB;AACEP,YAAI,EAAE,iBADR;AAEEC,iBAAS,EAAEO;AAFb,OA7BqB,EAiCrB;AACER,YAAI,EAAC,iBADP;AAEEC,iBAAS,EAACQ;AAFZ,OAjCqB,EAqCrB;AACET,YAAI,EAAC,wBADP;AAEEC,iBAAS,EAACS;AAFZ,OArCqB,EAyCrB;AACEV,YAAI,EAAE,cADR;AAEEC,iBAAS,EAAEU;AAFb,OAzCqB,EA6CrB;AACEX,YAAI,EAAE,kBADR;AAEEC,iBAAS,EAAEW;AAFb,OA7CqB,EAiDrB;AACEZ,YAAI,EAAE,iDADR;AAEEC,iBAAS,EAAEY;AAFb,OAjDqB,EAqDrB;AACEb,YAAI,EAAE,aADR;AAEEC,iBAAS,EAAEa;AAFb,OArDqB,EAyDrB;AACEd,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAEc;AAFb,OAzDqB,EA6DrB;AACEf,YAAI,EAAE,gBADR;AAEEC,iBAAS,EAAEe;AAFb,OA7DqB,EAiErB;AACEhB,YAAI,EAAE,iBADR;AAEEC,iBAAS,EAAEgB;AAFb,OAjEqB,EAqErB;AACEjB,YAAI,EAAE,iBADR;AAEEC,iBAAS,EAAEiB;AAFb,OArEqB,EA0ErB;AAAElB,YAAI,EAAE,EAAR;AAAYmB,kBAAU,EAAE,gBAAxB;AAA0CC,iBAAS,EAAE;AAArD,OA1EqB,CAAvB;;UAiFaC;;;;;yBAAAA;AAAiB;;;cAAjBA;;;kBAHF,CAACC,oEAAsBvB,MAAtB,CAAD,GACCuB;;;;6HAECD,oBAAiB;AAAA9B;AAAAM,oBAFlByB,0DAEkB;AAAA;AAFN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChDXC;;;;;yBAAAA;AAAU;;;cAAVA;;;kBAbF,CACPC,0DADO,EAEPC,mEAFO,EAGPC,wDAHO,EAKPA,gEALO,EAMPC,mEANO,EAOPC,0DAPO,EAQPC,oEARO,EASPC,2DATO;;;;6HAaEP,aAAU;AAAA3B,yBA7BnBO,kEA6BmB,EA5BnB4B,qEA4BmB,EA3BnBf,4FA2BmB,EA1BnBgB,qEA0BmB,EAzBnBC,uFAyBmB,EAxBnBC,8GAwBmB,EAvBnBC,+FAuBmB,EAtBnBC,mFAsBmB,EArBnBnB,+FAqBmB,EApBnBC,gGAoBmB,EAnBnBmB,gGAmBmB,EAlBnBC,2GAkBmB,EAjBnB7B,+HAiBmB,EAhBnBC,oHAgBmB,EAfnBR,4GAemB;AAfGX,oBAGtBiC,0DAHsB,EAItBC,mEAJsB,EAKtBC,wDALsB,EAOtBA,gEAPsB,EAQtBC,mEARsB,EAStBC,0DATsB,EAUtBC,oEAVsB,EAWtBC,2DAXsB;AAeH;AAJH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+BoCS;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AANJA;;AACIA;;AAGAA;;AAGJA;;;;;;AANgBA;;AAAAA;;AAGAA;;AAAAA;;;;;;AASRA;;AACIA;;AACJA;;;;;;AAHJA;;AACIA;;AAGJA;;;;;;AAHgBA;;AAAAA;;;;;;AASRA;;AACIA;;AACJA;;;;;;AAHJA;;AACIA;;AAGJA;;;;;;AAHgBA;;AAAAA;;;;;;;;;;UC5F/DC;AAIX,gDAAoBC,WAApB,EAAsDC,YAAtD,EAAoGC,YAApG,EAAuIC,MAAvI,EAAgKC,aAAhK,EAA4L;AAAA;;AAAxK;AAAkC;AAA8C;AAAmC;AAAyB;AAAiC;;;;iBAEjM,oBAAQ;AACN,iBAAKC,qBAAL,GAA6B,KAAKL,WAAL,CAAiBM,KAAjB,CAAuB;AACrDC,wBAAU,EAAE,CAAC,EAAD,EAAI,CAACC,+DAAD,GAAsBA,4DAAtB,CAAJ,CADyC;AAElDC,iBAAG,EAAC,CAAC,EAAD,EAAI,CAACD,+DAAD,CAAJ,CAF8C;AAGlDE,yBAAW,EAAC,CAAC,EAAD,EAAI,CAACF,+DAAD,CAAJ;AAHsC,aAAvB,CAA7B;AAKD;;;eACD,eAAK;AACH,mBAAO,KAAKH,qBAAL,CAA2BtJ,QAAlC;AACD;;;iBACD,8BAAkB;AAAA;;AAChB,iBAAK4J,SAAL,GAAe,IAAf;;AACA,gBAAG,KAAKN,qBAAL,CAA2BO,OAA9B,EAAsC;AACpC,qBAAO,KAAP;AACD,aAFD,MAGI;AACF,kBAAIC,IAAI,GAAC;AACP,yBAAU,KAAKR,qBAAL,CAA2BtJ,QAA3B,CAAoCwJ,UAApC,CAA+C/L,KADlD;AAEP,uBAAQ,KAAK6L,qBAAL,CAA2BtJ,QAA3B,CAAoC0J,GAApC,CAAwCjM,KAFzC;AAGP,+BAAe,KAAK6L,qBAAL,CAA2BtJ,QAA3B,CAAoC2J,WAApC,CAAgDlM;AAHxD,eAAT;AAMA,mBAAK0L,YAAL,CAAkBY,oBAAlB,CAAuCD,IAAvC,EAA6CE,IAA7C,CAAkD,UAACC,GAAD,EAAO;AACvD,sBAAI,CAACf,YAAL,CAAkBgB,YAAlB,CAA+B,+BAA/B;;AACA,sBAAI,CAACd,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD,eAHD,EAIA,UAACC,GAAD,EAAQ;AAEN,oBAAGA,GAAG,CAACC,KAAJ,CAAUC,MAAb,EAAoB;AAClB,wBAAI,CAACpB,YAAL,CAAkBqB,iBAAlB,CAAoC,MAAI,CAAClB,aAAL,CAAmB7L,SAAnB,CAA6B4M,GAAG,CAACC,KAAJ,CAAUG,aAAvC,CAApC;AACD,iBAFD,MAGI;AACF,wBAAI,CAACtB,YAAL,CAAkBqB,iBAAlB,CAAoC,uBAApC;AACD;AAEF,eAbD;AAgBD;AAGF;;;iBACD,oBAAWxN,KAAX,EAAgB;AACd,gBAAM0N,QAAQ,GAAI1N,KAAK,CAAC2N,KAAP,GAAgB3N,KAAK,CAAC2N,KAAtB,GAA8B3N,KAAK,CAAC+F,OAArD;;AACA,gBAAI2H,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,CAAJ,EAAuD;AACrD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AAED;;;;;;;yBAvDUzB,gCAA6BD;AAAA;;;cAA7BC;AAA6BzE;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADZ1CkE;;AACIA;;AACIA;;AACIA;;AAAuDA;;AAAqHA;;AACxKA;;AACIA;;AACIA;;AAEIA;;AAQIA;;AACIA;;AAEIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AACtBA;;AAAIA;;AACpCA;;AAEAA;;AAAwCA;;AAAWA;;AACvDA;;AACJA;;AAkCJA;;AAIAA;;AACIA;;AACIA;;AACIA;;AAA4BA;;AAA2BA;;AACvDA;;AAAgBA;;AAAiDA;;AACrEA;;AACAA;;AACIA;;AACIA;;AACIA;;AAGIA;;AASAA;;AAA6FA;AAAA,qBAAYhE,sBAAZ;AAA8B,aAA9B;;AAA7FgE;;AAGIA;;AAMAA;;AAGIA;;AAKZA;;AAA+EA;AAAA,qBAAShE,wBAAT;AAA6B,aAA7B;;AAA4DgE;;AAAUA;;AACzJA;;AAAOA;;AAAmDA;;AAC7CA;;AAAkCA;;AAAMA;;AAAOA;;AAChEA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AA3CkDA;;AAAAA;;AAEFA;;AAAAA;;AAEoCA;;AAAAA;;AAUhCA;;AAAAA;;AAEoCA;;AAAAA;;AAOhCA;;AAAAA;;AAEoCA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBxC4B;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAPJA;;AAEIA;;AAGAA;;AAGJA;;;;;;AANgBA;;AAAAA;;AAGAA;;AAAAA;;;;;;;;;;;;;;AAZpBA;;AAGIA;;AAIAA;;AAaAA;;AACkBA;AAAAA;;AAAA;;AAAA;AAAA;;AACdA;;AACJA;;AACJA;;;;;;AAxB0BA;;AAKlBA;;AAAAA;;AAGCA;;AAAAA;;;;;;AAoCDA;;AAEIA;;AACJA;;;;;;AALJA;;AAEIA;;AAIJA;;;;;;AAHSA;;AAAAA;;;;;;AAWLA;;AAEIA;;AACJA;;;;;;AACAA;;AAEIA;;AACJA;;;;;;AATJA;;AAEIA;;AAIAA;;AAIJA;;;;;;AAPSA;;AAAAA;;AAIAA;;AAAAA;;;;;;;;AAnCbA;;AACIA;;AAEAA;;AAAiBA;;AAASA;;AAC1BA;;AAAcA;AAAAA;;AAAA;;AAAA;AAAA;;AACdA;;AAOAA;;AAIAA;;AAQAA;;AAIAA;;AAYAA;;AACkBA;AAAAA;;AAAA;;AAAA;AAAA;;AACdA;;AACJA;;AACJA;;;;;;AA5CyBA;;AAI+BA;;AAAAA;;AAUhDA;;AAAAA;;AAGCA;;AAAAA;;AASDA;;AAAAA;;AAGCA;;AAAAA;;;;UClHxCC;AAiBX,0CACU3B,WADV,EAEUC,YAFV,EAGUC,YAHV,EAIUC,MAJV,EAKUC,aALV,EAKsC;AAAA;;AAJ5B;AACA;AACA;AACA;AACA;AAlBV,4BAAsB,KAAtB;AACA,wBAAS;AACPhK,4BAAgB,EAAE,IADX;AAEPf,kBAAM,EAAE,CAFD;AAGPc,2BAAe,EAAE,KAHV;AAIPkB,4BAAgB,EAAE,KAJX;AAKPuK,uBAAW,EAAE,EALN;AAMPC,uBAAW,EAAE;AACXC,mBAAK,EAAE,MADI;AAEXC,oBAAM,EAAE,MAFG;AAGX,2BAAa;AAHF;AANN,WAAT;AAkBI;;;;iBAEJ,oBAAQ;AACN,iBAAKC,cAAL,GAAsB,KAAKhC,WAAL,CAAiBM,KAAjB,CAAuB;AAC3CC,wBAAU,EAAE,CAAC,EAAD,EAAK,CAAC0B,+DAAD,EAAsBA,4DAAtB,CAAL;AAD+B,aAAvB,CAAtB;AAGA,iBAAKC,kBAAL,GAA0B,KAAKlC,WAAL,CAAiBM,KAAjB,CACxB;AACE6B,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACF,+DAAD,EAAsBA,4DAAtB,CAAL,CADT;AAEExB,iBAAG,EAAE,CAAC,IAAD,EAAO,CAACwB,+DAAD,EAAsBA,iEAAqB,CAArB,CAAtB,CAAP,CAFP;AAGEvB,yBAAW,EAAE,CAAC,EAAD,EAAK,CAACuB,+DAAD,CAAL,CAHf;AAIEG,6BAAe,EAAE,CAAC,EAAD,EAAK,CAACH,+DAAD,CAAL;AAJnB,aADwB,EAQxB;AACEI,uBAAS,EAAE,2FAAoB,aAApB,EAAmC,iBAAnC;AADb,aARwB,CAA1B;AAYD;;;eACD,eAAK;AACH,mBAAO,KAAKL,cAAL,CAAoBjL,QAA3B;AACD;;;eACD,eAA6B;AAC3B,mBAAO,KAAKmL,kBAAL,CAAwBnL,QAA/B;AACD;;;iBACD,qBAAYuL,CAAZ,EAAa;AACXC,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,CAA3B;AACA,iBAAKJ,kBAAL,CAAwB/H,GAAxB,CAA4B,KAA5B,EAAmCsI,UAAnC,CAA8CH,CAA9C;AACD;;;iBACD,8BAAkB;AAAA;;AAChB,iBAAK3B,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKqB,cAAL,CAAoBpB,OAAxB,EAAiC;AAC/B2B,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK7B,SAAvC;AACA,qBAAO,KAAP;AACD,aAHD,MAGO;AACL,kBAAIE,IAAI,GAAG;AACTsB,qBAAK,EAAE,KAAKH,cAAL,CAAoBjL,QAApB,CAA6BwJ,UAA7B,CAAwC/L;AADtC,eAAX;AAGA,mBAAK0N,kBAAL,CAAwB/H,GAAxB,CAA4B,OAA5B,EAAqCsI,UAArC,CAAgD5B,IAAI,CAACsB,KAArD;AACA,mBAAKjC,YAAL,CAAkBwC,cAAlB,CAAiC7B,IAAjC,EAAuCE,IAAvC,CACE,UAACC,GAAD,EAAQ;AACN,sBAAI,CAACf,YAAL,CAAkBgB,YAAlB,CACE,sDADF;;AAGA,sBAAI,CAAC0B,UAAL,GAAkB,IAAlB,CAJM,CAKN;AACD,eAPH,EAQE,UAACxB,GAAD,EAAQ;AACN,oBAAIA,GAAG,CAACC,KAAJ,CAAUC,MAAd,EAAsB;AACpB,wBAAI,CAACpB,YAAL,CAAkBqB,iBAAlB,CACE,MAAI,CAAClB,aAAL,CAAmB7L,SAAnB,CAA6B4M,GAAG,CAACC,KAAJ,CAAUG,aAAvC,CADF;AAGD,iBAJD,MAIO;AACL,wBAAI,CAACtB,YAAL,CAAkBqB,iBAAlB,CAAoC,uBAApC;AACD;AACF,eAhBH;AAkBD;AACF;;;iBACD,8BAAkB;AAAA;;AAChBiB,mBAAO,CAACC,GAAR,CACE,kDADF,EAEE,KAAKI,yBAAL,CAA+BR,eAA/B,CAA+CS,MAFjD;;AAIA,gBAAI,KAAKX,kBAAL,CAAwBtB,OAA5B,EAAqC;AACnC2B,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,qBAAO,KAAP;AACD,aAHD,MAGO;AACL,mBAAKtC,YAAL,CACGY,oBADH,CACwB,KAAKoB,kBAAL,CAAwB1N,KADhD,EAEGuM,IAFH,CAGI,UAACC,GAAD,EAAQ;AACN,sBAAI,CAACf,YAAL,CAAkBgB,YAAlB,CAA+B,+BAA/B;;AACA,sBAAI,CAACd,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD,eANL,EAOI,UAACC,GAAD,EAAQ;AACN,oBAAIA,GAAG,CAACC,KAAJ,CAAUC,MAAd,EAAsB;AACpB,wBAAI,CAACpB,YAAL,CAAkBqB,iBAAlB,CACE,MAAI,CAAClB,aAAL,CAAmB7L,SAAnB,CAA6B4M,GAAG,CAACC,KAAJ,CAAUG,aAAvC,CADF;AAGD,iBAJD,MAIO;AACL,wBAAI,CAACtB,YAAL,CAAkBqB,iBAAlB,CAAoC,uBAApC;AACD;AACF,eAfL;AAiBD;AACF;;;;;;;yBA7GUK,0BAAuBD;AAAA;;;cAAvBC;AAAuBrG;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADbpC8F;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAEIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AACtBA;;AAAIA;;AACpCA;;AAEAA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACRA;;AACJA;;AACJA;;AACJA;;AA+BJA;;AACAA;;AAAAA;;AACIA;;AACIA;;AACIA;;AAA2BA;;AAAqBA;;AAChDA;;AACIA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AA0BAA;;AA6CAA;;AAAmDA;;AAAkBA;;AACjCA;;AAAMA;;AAAOA;;AACrDA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AAnFmDA;;AAAAA;;AA0BAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEmCCoB;;;;;;;;AA7DpBA;;AACIA;;AAAgDA;AAAAA;;AAAA;;AAAA;AAAA;;AAC5CA;;AACFA;;AACFA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAGA;;AAAoBA;;AAAIA;;AACnCA;;AACAA;;AACIA;;AAEIA;;AACJA;;AACAA;;AACIA;;AAA2BA;AAAAA;;AAAA;;AAAA;AAAA;;AACvBA;;AAAGA;;AAAcA;;AACrBA;;AAIJA;;AACAA;;AACJA;;AACJA;;AACAA;;AACIA;;AAA2CA;;AAAeA;;AAC1DA;;AAEJA;;AACAA;;AACIA;;AACIA;;AAA8CA;;AAAUA;;AAC5DA;;AACAA;;AAGAA;;AAAoCA;AAAAA;;AAAA;;AAAA;AAAA;;AAChCA;;AAEJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AAEAA;;AACwBA;;AAAWA;;AACvCA;;AACJA;;AACAA;;AACIA;;AAAuFA;;AAC1EA;;AACjBA;;AACJA;;AACAA;;AACIA;;AAC4BA;AAAAA;;AAAA;;AAAA;AAAA;;AACxBA;;AAEAA;;AACJA;;AAKJA;;AAEAA;;AACIA;;AACAA;;AAA2CA;;AAAEA;;AAC7CA;;AACFA;;AAEFA;;AACIA;;AAEIA;;AACAA;;AACJA;;AAEJA;;AACJA;;AACJA;;AACJA;;;;;;AAvF8BA;;AAIpBA;;AAAAA;;AAgCaA;;AAAAA;;AAKCA;;AAAAA;;AAmBJA;;AAAAA;;AACgDA;;AAAAA;;;;;;AAmExCA;;;;;;AAUJA;;;;;;;;AAtBZA;;AACIA;;AACIA;;AAAyCA;;AAAGA;;AAChDA;;AACAA;;AAAuBA;AAAAA;;AAAA;;AAAA;AAAA;;AAAvBA;;AAEAA;;AACIA;;AACAA;;AACIA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AAEAA;;AAGAA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AAC4BA;AAAAA;;AAAA;;AAAA;AAAA;;AACxBA;;AAEAA;;AACJA;;AACJA;;AACJA;;;;;;AAlB+CA;;AAAAA,kGAAuB,UAAvB,EAAuBC,qBAAvB;;AAI1BD;;AAAAA;;AAQTA;;AAAAA;;AAEKA;;AAAAA;;;;;;AA0BTA;;;;;;;;AAFJA;;AACgDA;AAAAA;;AAAA;;AAAA;AAAA;;AAC5CA;;AAEAA;;AACJA;;;;;;AAJIA;;AACgDA;;AAAAA;;;;;;;;AA7EpEA;;AACYA;;AAAgDA;AAAAA;;AAAA;;AAAA;AAAA;;AAC5CA;;AACFA;;AACVA;;AACIA;;AACIA;;AACIA;;AACIA;;AACEA;;AAAsBA;;AAC5BA;;AACAA;;AACIA;;AACIA;;AACJA;;AACAA;;AACIA;;AAA2BA;AAAAA;;AAAA;;AAAA;AAAA;;AACvBA;;AAAGA;;AAAcA;;AACrBA;;AACJA;;AACAA;;AACJA;;AACJA;;AACAA;;AACIA;;AAA2CA;;AAAYA;;AACvDA;;AAEJA;;AACAA;;AA4BAA;;AACIA;;AACIA;;AACIA;;AAEAA;;AACwBA;;AAAWA;;AACvCA;;AACJA;;AACAA;;AACIA;;AAAuFA;;AAC1EA;;AACjBA;;AACJA;;AACAA;;AAKIA;;AAUJA;;AACJA;;AACJA;;AACJA;;;;;;AAxF6BA;;AAInBA;;AAAAA;;AAwBgCA;;AAAAA;;AAgDGA;;AAAAA;;;;;;AAerCA;;AAAsEA;;AACdA;;;;;;AAa5CA;;;;;;;;AAhBpBA;;AACIA;;AACIA;;AAEAA;;AAAIA;;AAAwBA;;AAC5BA;;AACIA;;AACIA;;AACIA;;AAA2CA;;AAAeA;;AAC1DA;;AAA4BA;AAAAA;;AAAA;;AAAA;AAAA;;AAA5BA;;AAEJA;;AACJA;;AACAA;;AACIA;;AAC4BA;AAAAA;;AAAA;;AAAA;AAAA;;AACxBA;;AAEAA;;AACJA;;AACAA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AACAA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;AAzB+CA;;AAAAA;;AAEnCA;;AAAAA;;AACEA;;AAAAA;;AAUMA;;AAAAA;;AACgDA;;AAAAA;;;;UCtPvFE;AA0CX,iCACU7C,MADV,EAEU8C,EAFV,EAGUC,WAHV,EAIUhD,YAJV,EAKSiD,SALT,EAMUC,IANV,EAOSC,iBAPT,EAQUpD,YARV,EASUqD,OATV,EAUUlD,aAVV,EAWUmD,KAXV,EAW+B;AAAA;;AAVrB;AACA;AACA;AACA;AACD;AACC;AACD;AACC;AACA;AACA;AACA;AApDH,yBAAmB,KAAnB;AACA,4BAAsB,IAAtB;AAGA,sBAAgB,IAAhB;AACA,0BAAmB,QAAnB;AACA,4BAAsB,KAAtB;AACA,6BAAuB,KAAvB;AACA,4BAAsB,KAAtB;AACA,iCAA2B,KAA3B;AAGA,4BAAsB,KAAtB;AACP,iCAA2B,KAA3B;AACO,4BAAwB,KAAKN,EAAL,CAAQ3C,KAAR,CAAc;AAC3CkD,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAACC,+DAAD,EAAsBA,4DAAtB,CAAL,CADiC;AAE3CC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAACD,+DAAD,CAAL;AAFiC,WAAd,CAAxB;AAIA,0BAAsB,KAAKR,EAAL,CAAQ3C,KAAR,CAAc;AACzCkD,oBAAQ,EAAE,CAAC,EAAD,EAAI,CACZC,+DADY,EAEZA,iEAAqB,EAArB,CAFY,EAGZA,iEAAqB,EAArB,CAHY,CAAJ,CAD+B;AAQzC;AACAE,qBAAS,EAAE,CACT,EADS,EAET,CACEF,+DADF,EAEEA,iEAAqB,CAArB,CAFF,EAGEA,iEAAqB,CAArB,CAHF,EAIEA,+DAAmB,WAAnB,CAJF,CAFS;AAT8B,WAAd,CAAtB;AAmBA,+BAA2B,KAAKR,EAAL,CAAQ3C,KAAR,CAAc;AAC9CsD,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAACH,+DAAD,EAAsBA,+DAAmB,WAAnB,CAAtB,CAAL;AADoC,WAAd,CAA3B;AAgBH;;;;iBAEJ,oBAAQ;AAAA;;AACN,iBAAKF,KAAL,CAAWM,WAAX,CAAuBhN,SAAvB,CAAiC,gBAAM,EAAG;AACxC,oBAAI,CAACiN,eAAL,GAAuBC,MAAM,CAAC,iBAAD,CAAN,KAA8B,MAArD;AACD,aAFD;AAGA,iBAAKb,WAAL,CAAiBc,MAAjB;AACD;;;iBAED,gCAAoB;AAClB,iBAAK7D,MAAL,CAAYe,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD,YAED;;;;iBACA,2BAAe;AACb,iBAAKf,MAAL,CAAYe,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAAE2C,yBAAW,EAAE;AAAEI,0BAAU,EAAE;AAAd;AAAf,aAAzC;AACD;;;iBAED,2BAAe;AACb,iBAAK9D,MAAL,CAAYe,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAAE2C,yBAAW,EAAE;AAAEI,0BAAU,EAAE;AAAd;AAAf,aAAzC;AACD,YAED;;;;iBACA,sBAAU;AACR,iBAAKC,OAAL,GAAe,CAAC,KAAKA,OAArB;AACA,iBAAKC,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;iBACD,cAAKjL,EAAL,EAAO;AACL,gBAAIA,EAAE,KAAK,CAAX,EAAc;AACZ,mBAAKkL,IAAL,GAAY,CAAZ;AACA,mBAAKN,eAAL,GAAuB,KAAvB;AACA,mBAAKO,QAAL,GAAgB,QAAhB;AACD,aAJD,MAIO,IAAInL,EAAE,KAAK,CAAX,EAAc;AACnB,mBAAKkL,IAAL,GAAY,CAAZ;AACA,mBAAKN,eAAL,GAAuB,IAAvB;AACA,mBAAKO,QAAL,GAAgB,UAAhB;AACD;AACF;;;iBACD,+BAAmB;AACjB,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKR,eAAL,GAAuB,KAAvB;AACD;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA,uBAAW;AAAA;;AACT,gBAAIS,IAAI,GAAG;AACTpC,mBAAK,EAAE,KAAKqC,UAAL,CAAgBzN,QAAhB,CAAyByM,QAAzB,CAAkChP,KADhC;AAETkP,sBAAQ,EAAE,KAAKc,UAAL,CAAgBzN,QAAhB,CAAyB2M,QAAzB,CAAkClP;AAFnC,aAAX;AAIA,iBAAKiQ,UAAL,GAAkB,IAAlB;AACA,iBAAKvB,WAAL,CAAiBwB,KAAjB,CAAuBH,IAAvB,EAA6B1N,SAA7B,CACE,UAACmK,GAAD,EAAQ;AACN,oBAAI,CAACyD,UAAL,GAAkB,KAAlB;AACA,kBAAIE,cAAc,GAAG,IAAI5O,IAAJ,CAASiL,GAAG,CAACuD,IAAJ,CAASH,IAAT,CAAcQ,aAAvB,CAArB;AACA,kBAAIC,oBAAoB,GAAG,IAAI9O,IAAJ,CAAS4O,cAAT,CAA3B;AACA,kBAAIG,UAAU,GAAG,IAAI/O,IAAJ,EAAjB;AACAwM,qBAAO,CAACC,GAAR,CAAYmC,cAAZ;AACApC,qBAAO,CAACC,GAAR,CAAYxB,GAAG,CAACuD,IAAJ,CAASH,IAAT,CAAcQ,aAA1B;AACAC,kCAAoB,CAACE,OAArB,CAA6BF,oBAAoB,CAACG,OAArB,KAAiC,CAA9D;AACAzC,qBAAO,CAACC,GAAR,CAAYqC,oBAAZ;AACA,kBAAII,QAAQ,GACVN,cAAc,CAACK,OAAf,KAA2BH,oBAAoB,CAACG,OAArB,EAD7B,CATM,CAWN;AACA;AACA;AACA;;AACA,oBAAI,CAACE,eAAL,GAAuBlE,GAAG,CAACuD,IAAJ,CAASY,IAAhC;;AACA,kBAAI,CAACnE,GAAG,CAACuD,IAAJ,CAASH,IAAT,CAAcgB,YAAnB,EAAiC;AAC/B,sBAAI,CAACjF,MAAL,CAAYe,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD,eAFD,CAGA;AAHA,mBAIK;AACH,sBAAI,CAACoC,OAAL,CAAa+B,IAAb;;AACA9C,uBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,MAAI,CAAC0C,eAA9B;;AACA,oBAAI,MAAI,CAACA,eAAT,EAA0B;AACxB,wBAAI,CAAC/E,MAAL,CAAYe,QAAZ,CAAqB,CAAC,kBAAD,CAArB;;AACA,wBAAI,CAACjB,YAAL,CAAkBgB,YAAlB,CAA+B,oBAA/B;AACD,iBAHD,MAGO;AACL,wBAAI,CAAChB,YAAL,CAAkBgB,YAAlB,CAA+B,0BAA/B;;AACA,wBAAI,CAACd,MAAL,CAAYe,QAAZ,CAAqB,CAAC,yBAAD,CAArB;AACD;AACF;AACF,aAhCH,EAiCE,UAACC,GAAD,EAAQ;AACNoB,qBAAO,CAACC,GAAR,CAAYrB,GAAZ;;AACA,kBAAIA,GAAG,CAACC,KAAJ,CAAUkE,MAAV,KAAqB,GAAzB,EAA8B;AAC5B,sBAAI,CAACrF,YAAL,CAAkBqB,iBAAlB,CAAoC,oBAApC;;AACA,sBAAI,CAACiE,UAAL,GAAkB,IAAlB;AACA,sBAAI,CAACd,UAAL,GAAkB,KAAlB;AACA,oBAAIF,KAAI,GAAG;AACTpC,uBAAK,EAAE,MAAI,CAACqC,UAAL,CAAgBzN,QAAhB,CAAyByM,QAAzB,CAAkChP;AADhC,iBAAX;AAGA,sBAAI,CAAC8P,WAAL,GAAmB,IAAnB;;AACA,sBAAI,CAACjB,iBAAL,CAAuBmC,gBAAvB,CAAwCjB,KAAxC,EAA8CxD,IAA9C,CAAmD,UAACwD,IAAD,EAAS,CAAG,CAA/D;AACD,eATD,MASO,IAAIpD,GAAG,CAACC,KAAJ,CAAUkE,MAAV,IAAoB,GAAxB,EAA6B;AAClC,sBAAI,CAACb,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAACxE,YAAL,CAAkBqB,iBAAlB,CACE,4CADF;AAGD,eALM,MAKA,IAAIH,GAAG,CAACC,KAAJ,CAAUkE,MAAV,IAAoB,GAAxB,EAA6B;AAClC,sBAAI,CAACb,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAACxE,YAAL,CAAkBqB,iBAAlB,CAAoC,sBAApC;AACD,eAHM,MAGA,IAAIH,GAAG,CAACC,KAAJ,CAAUkE,MAAV,IAAoB,GAAxB,EAA6B;AAClC,sBAAI,CAACb,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAACxE,YAAL,CAAkBqB,iBAAlB,CACE,MAAI,CAAClB,aAAL,CAAmB7L,SAAnB,CAA6B4M,GAAG,CAACC,KAAJ,CAAUG,aAAvC,CADF;AAGD,eALM,MAKA,IAAIJ,GAAG,CAACC,KAAJ,CAAUkE,MAAV,IAAoB,GAAxB,EAA6B;AAClC,sBAAI,CAACb,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAACxE,YAAL,CAAkBqB,iBAAlB,CACE,MAAI,CAAClB,aAAL,CAAmB7L,SAAnB,CAA6B4M,GAAG,CAACC,KAAJ,CAAUG,aAAvC,CADF;AAGD,eALM,MAKA;AACL,sBAAI,CAACkD,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAACxE,YAAL,CAAkBqB,iBAAlB,CACE,mCADF;AAGD;AACF,aApEH;AAsED;AAGD;;;;;;iBAGA,mBAAO;AAAA;;AACL;AACA,gBAAIiD,IAAI,GAAG;AACTkB,oBAAM,EAAE,KAAKC,QAAL,CAAc3O,QAAd,CAAuByM,QAAvB,CAAgChP;AAD/B,aAAX;AAGA,iBAAKiQ,UAAL,GAAkB,IAAlB;AACA,iBAAKrB,IAAL,CACGuC,IADH,CACQC,+EAAqB,uBAD7B,EACsDrB,IADtD,EAEG1N,SAFH,CAGI,UAACmK,GAAD,EAAQ;AACN;AACA,oBAAI,CAACyD,UAAL,GAAkB,KAAlB;AACA,oBAAI,CAACoB,UAAL,GAAkB,IAAlB;AACD,aAPL,EAQI,UAAC1E,GAAD,EAAQ;AACN;AACA,oBAAI,CAACsD,UAAL,GAAkB,KAAlB;;AACA,oBAAI,CAACxE,YAAL,CAAkBqB,iBAAlB,CACE,yCADF;AAGD,aAdL;AAgBD;AAED;;;;;;iBAGA,qBAAS;AAAA;;AACP;AACA,iBAAKmD,UAAL,GAAkB,IAAlB;AACA,gBAAIF,IAAI,GAAG;AACTkB,oBAAM,EAAE,KAAKC,QAAL,CAAc3O,QAAd,CAAuByM,QAAvB,CAAgChP,KAD/B;AAETK,kBAAI,EAAE,GAFG;AAGTiR,uBAAS,EAAE,KAAKJ,QAAL,CAAc3O,QAAd,CAAuB4M,SAAvB,CAAiCnP;AAHnC,aAAX,CAHO,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAK0O,WAAL,CAAiB6C,SAAjB,CAA2BxB,IAA3B,EAAiC1N,SAAjC,CAA2C,UAACmK,GAAD,EAAQ;AACjD,kBAAI,OAAI,CAACkE,eAAT,EAA0B;AACxB,uBAAI,CAAC/E,MAAL,CAAYe,QAAZ,CAAqB,CAAC,mCAAD,CAArB;;AACA,uBAAI,CAACjB,YAAL,CAAkBgB,YAAlB,CAA+B,oBAA/B;AACD,eAHD,MAGO;AACL,uBAAI,CAAChB,YAAL,CAAkBgB,YAAlB,CAA+B,2BAA/B;;AACA,uBAAI,CAACd,MAAL,CAAYe,QAAZ,CAAqB,CAAC,yCAAD,CAArB;AACD;AACF,aARD,EAjBO,CA0BP;AACA;AACA;AACA;AACA;AACA;AACD;AAED;;;;;;iBAGA,2BAAe;AAAA;;AACb;AACA,iBAAKuD,UAAL,GAAkB,IAAlB;AACA,gBAAMF,IAAI,GAAG;AACXpC,mBAAK,EAAE,KAAKqC,UAAL,CAAgBzN,QAAhB,CAAyByM,QAAzB,CAAkChP,KAD9B;AAEXoP,sBAAQ,EAAE,KAAKoC,aAAL,CAAmBjP,QAAnB,CAA4B6M,QAA5B,CAAqCpP;AAFpC,aAAb;AAIA,iBAAK2O,SAAL,CAAe8C,eAAf,CAA+B1B,IAA/B,EAAqCxD,IAArC,CACE,YAAK;AACH,qBAAI,CAAC0D,UAAL,GAAkB,KAAlB,CADG,CAEH;;AACA,qBAAI,CAACH,WAAL,GAAmB,KAAnB;AACD,aALH,EAME,UAACnD,GAAD,EAAQ;AACN,qBAAI,CAACsD,UAAL,GAAkB,KAAlB;AACD,aARH;AAUD;AACD;;;;;;iBAGA,kCAAsB;AAAA;;AACpB;AACA,iBAAKA,UAAL,GAAkB,IAAlB;AACA,gBAAIyB,CAAC,GAAG;AACNT,oBAAM,EAAE,KAAKC,QAAL,CAAc3O,QAAd,CAAuByM,QAAvB,CAAgChP;AADlC,aAAR;AAGA,iBAAK0L,YAAL,CAAkBiG,WAAlB,CAA8BD,CAA9B,EAAiCnF,IAAjC,CACE,UAACC,GAAD,EAAQ;AACN;AACA,qBAAI,CAACyD,UAAL,GAAkB,KAAlB;AACA,qBAAI,CAAC2B,MAAL,GAAcpF,GAAd;AACD,aALH,EAME,UAACG,GAAD,EAAQ;AACN,qBAAI,CAACsD,UAAL,GAAkB,KAAlB;AACD,aARH;AAUA,iBAAK4B,cAAL,GAAsB,IAAtB;AACA/M,sBAAU,CAAC,YAAK;AACd;AACA,qBAAI,CAAC+M,cAAL,GAAsB,KAAtB;AACD,aAHS,EAGP,MAHO,CAAV;AAID;;;iBACD,aAAC;AACC9D,mBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKkD,QAAL,CAAc3O,QAApD;AACA,mBAAO,KAAK2O,QAAL,CAAc3O,QAArB;AACD;;;iBACD,oBAAWjD,KAAX,EAAgB;AACd,gBAAM0N,QAAQ,GAAG1N,KAAK,CAAC2N,KAAN,GAAc3N,KAAK,CAAC2N,KAApB,GAA4B3N,KAAK,CAAC+F,OAAnD;;AACA,gBAAI2H,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,CAAJ,EAAuD;AACrD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;;;;;yBAxXUwB,iBAAcF;AAAA;;;cAAdE;AAAc1H;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADhB3BkH;;AAEIA;;AAA2BA;;AAASA;;AACxCA;;AACAA;;AACIA;;AACIA;;AACIA;;AAGIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAMIA;;AAMIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AAAgDA;;AAAIA;;AAC1GA;;AAEAA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACRA;;AACJA;;AAEJA;;AACJA;;AAsBJA;;AACAA;;AAAAA;;AACIA;;AAwFAA;;AAyFAA;;AA4BJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AApNsCA;;AAAAA;;AAwFAA;;AAAAA;;AAyFAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UElPzBwD;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAe;;;cAAfA;AAAehL;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACP5B2K;;AACIA;;AACIA;;AACIA;;AAGIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAKIA;;AAEIA;;AAAiCA;;AAAsBA;;AAC3DA;;AACJA;;AACAA;;AACIA;;AAAsEA;;AAASA;;AAAgDA;;AAAKA;;AAAKA;;AAAIA;;AAAgDA;;AAAWA;;AAAIA;;AAChNA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAyBA;;AACrBA;;AAAIA;;AAAcA;;AAClBA;;AAAGA;;AAAkCA;;AAAMA;;AAA4BA;;AAAIA;;AAA2DA;;AAAkFA;;AAAeA;;AAC3OA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC/BaC;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAsB;;;cAAtBA;AAAsBlL;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACPnC2K;;AACIA;;AACIA;;AACIA;;AAAuDA;;AAAqHA;;AACxKA;;AACIA;;AACIA;;AACIA;;AAQMA;;AACIA;;AAEIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AACtBA;;AAAIA;;AACpCA;;AAEAA;;AAAwCA;;AAAWA;;AACvDA;;AACJA;;AAaNA;;AACAA;;AACIA;;AACIA;;AAA6BA;;AAAGA;;AAAcA;;AAAIA;;AAClDA;;AACIA;;AACIA;;AAAoDA;;AAAYA;;AAChEA;;AACJA;;AACAA;;AACIA;;AAA4DA;;AAChDA;;AACZA;;AACJA;;AACAA;;AAA4GA;;AAAYA;;AAC5HA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3DaE;AAEX,0CAAmBC,uBAAnB,EACSvG,MADT,EACsB;AAAA;;AADH;AACV;AAAkB;;;;iBAE3B,oBAAQ;AAEN,iBAAKwG,UAAL;AACJ,iBAAKC,WAAL;AACG;;;iBACD,sBAAU;AAAA;;AACR,iBAAKF,uBAAL,CAA6BG,iBAA7B,CAA+C,EAA/C,EAAmD9F,IAAnD,CAAwD,UAACC,GAAD,EAAO;AACjE,qBAAI,CAACb,MAAL,CAAYe,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACG,aAFD;AAKD;;;iBACD,uBAAW;AAAA;;AACT,iBAAKwF,uBAAL,CAA6BI,kBAA7B,CAAgD,EAAhD,EAAoD/F,IAApD,CAAyD,UAACC,GAAD,EAAO;AAClE,qBAAI,CAACb,MAAL,CAAYe,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACG,aAFD;AAID;;;;;;;yBAtBUuF,0BAAuBM;AAAA;;;cAAvBN;AAAuBnL;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACTpCmL;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAmBA;;AAA6DA;;AACpFA;;AACAA;;AAEIA;;AAAKA;;AAA4BA;;AACjCA;;AAAGA;;AAAkBA;;AACrBA;;AAAmCA;;AAAUA;;AACjDA;;AAEJA;;AAEJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACW4BC;;AACIA;;AACIA;;AAAgBA;;AAAOA;;AACvBA;;AAAIA;;;;AAAiCA;;AACrCA;;AAAIA;;AAAiBA;;AAEzBA;;AAGJA;;;;;;;AAPwBA;;AAAAA;;AACZA;;AAAAA;;AACAA;;AAAAA;;;;;;;;AAqERA;;AAEIA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAEAA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAAA;;AAAA;;AAAA;AAAA,WAAnB;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAAA;;AAAA;;AAAA;AAAA,WAAnB;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAAA;;AAAA;;AAAA;AAAA,WAAnB;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAAA;;AAAA;;AAAA;AAAA,WAAnB;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAAA;;AAAA;;AAAA;AAAA,WAAnB;;AAAxCA;;AAEAA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAEAA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAAA;;AAAA;;AAAA;AAAA,WAAnB;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA;;AAAxCA;;AAEAA;;AAAwCA;AAAAA;;AAAA;;AAAA;AAAA;;AAAxCA;;AAEAA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAGAA;;AACJA;;;;;;AA7BQA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AACoCA;;AAAAA;;AAEAA;;AAAAA;;AAEAA;;AAAAA;;AAGpCA;;AAAAA;;;;UCtH3BC;AAqBX,+CAAmBC,cAAnB,EACSC,UADT,EAESC,mBAFT,EAGS7D,KAHT,EAISpD,MAJT,EAKUF,YALV,EAKgD;AAAA;;AAL7B;AACV;AACA;AACA;AACA;AACC;AAjBH,qBAAMoH,mEAAN,CAiByC,CAjBpB;AAkBvB;;;;iBAEL,oBAAQ;AAAA;;AAEN,iBAAK9D,KAAL,CAAW+D,QAAX,CAAoBzQ,SAApB,CAA8B,UAACkN,MAAD,EAAqB;AACjD,qBAAI,CAACwD,OAAL,GAAe,CAACxD,MAAM,CAAC5J,GAAP,CAAW,IAAX,CAAhB;AACA,qBAAI,CAACqN,qBAAL,GAA6B,CAACzD,MAAM,CAAC5J,GAAP,CAAW,WAAX,CAA9B;AACA,qBAAI,CAACsN,kBAAL,GAA0B,CAAC1D,MAAM,CAAC5J,GAAP,CAAW,YAAX,CAA3B;AACD,aAJD;AAKA,iBAAKuN,uBAAL,CAA6B,KAAKH,OAAlC;AACA,iBAAKI,WAAL,GAAmBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACD;AACD;;;;;;;;iBAKM,4BAAmBC,QAAnB,EAAmCC,WAAnC,EAAoD;;;;;;;AACpDC,4BAAM;AACR7T,2BAAG,EAAE,QADG;AAER8T,6BAAK,EAAEC,8CAFC;AAGRC,mCAAW,EAAEL,QAHL;AAIRM,8BAAM,EAAEL,WAJA;AAKRM,4BAAI,EAAEC,+EAAqB,kBALnB;AAMRC,4BAAI,EAAED,+EAAqB,kBANnB;AAORE,6BAAK,EAAE,YAPC;AAQRC,4BAAI,EAAE,EARE;AASRC,4BAAI,EAAEC,MAAM,CAAC,KAAKlB,WAAL,CAAiBzO,EAAlB,CATJ;AAUR4P,4BAAI,EAAED,MAAM,CAAC,KAAKpB,kBAAN,CAVJ;AAWRsB,4BAAI,EAAEF,MAAM,CAAC,KAAKrB,qBAAN,CAXJ;AAYRwB,4BAAI,EAAE,EAZE;AAaRC,4BAAI,EAAE,EAbE;AAcR9G,6BAAK,EAAE,KAAKwF,WAAL,CAAiBxF,KAdhB;AAeR+G,iCAAS,EAAE,KAAKvB,WAAL,CAAiBuB,SAfpB;AAgBRC,gCAAQ,EAAE,KAAKxB,WAAL,CAAiBwB;AAhBnB;AAmBV,2BAAKC,SAAL,GAAiBlB,GAAjB;AACA3F,6BAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAK4G,SAA9B;;AACA,6BAAM,KAAKC,OAAL,EAAN;;;;;;;;;AACD;AAED;;;;;;iBAGA,mBAAO;AAAA;;AACL,iBAAKjC,mBAAL,CAAyBkC,cAAzB,CAAwC,KAAKF,SAA7C,EAAwD,EAAxD,EAA4DrI,IAA5D,CAAiE,UAACC,GAAD,EAAQ;AACvE,qBAAI,CAACoI,SAAL,CAAeT,IAAf,GAAsB3H,GAAtB;AACD,aAFD,EADK,CAKL;AACD;;;iBACD,sBAAU;AAAA;;AACR,iBAAKkG,cAAL,CAAoBL,iBAApB,CAAsC,EAAtC,EAA0C9F,IAA1C,CAA+C,UAACC,GAAD,EAAQ;AACrD,qBAAI,CAACb,MAAL,CAAYe,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD,aAFD;AAGD,YACD;;;;iBACA,iCAAwBqG,OAAxB,EAA+B;AAAA;;AAC7B,iBAAKS,QAAL;AACA,iBAAKZ,mBAAL,CAAyBmC,YAAzB,CAAsC,EAAtC,EAA0ChC,OAA1C,EAAmDxG,IAAnD,CAAwD,UAACC,GAAD,EAAQ;AAE9D,qBAAI,CAACuD,IAAL,GAAYvD,GAAZ;AACA,qBAAI,CAACwI,SAAL,GAAiBxI,GAAG,CAACuD,IAArB;AACA,qBAAI,CAACkF,WAAL,GAAmBzI,GAAG,CAACuD,IAAJ,CAASkF,WAA5B;AACA,qBAAI,CAACzB,QAAL,GAAgBhH,GAAG,CAACuD,IAAJ,CAASyD,QAAzB;AACA,qBAAI,CAACC,WAAL,GAAmBjH,GAAG,CAACuD,IAAJ,CAASmF,YAA5B;AACA,qBAAI,CAACC,QAAL,GAAgB3I,GAAG,CAACuD,IAAJ,CAASoF,QAAzB;AACA,qBAAI,CAACC,QAAL,GAAgB5I,GAAG,CAACuD,IAAJ,CAASqF,QAAzB;;AACA,qBAAI,CAACC,kBAAL,CAAwB,OAAI,CAAC7B,QAA7B,EAAuC,OAAI,CAACC,WAA5C;AACD,aAVD;AAWD;;;iBACD,eAAG;AACD,iBAAK9H,MAAL,CAAYe,QAAZ,CAAsB,QAAtB;AACD;;;iBACD,0BAAiB4I,QAAjB,EAAyB;AACvB,iBAAK7J,YAAL,CAAkBgB,YAAlB,CAA+B,oBAAoB,GAApB,GAA0B6I,QAAzD;;AACA,gBAAIA,QAAQ,CAACC,GAAb,EAAkB;AAChB;AACA7O,oBAAM,CAAC8O,QAAP,CAAgBC,IAAhB,GAAuBH,QAAQ,CAACC,GAAhC;AACD;AACF;;;iBAED,0BAAiB3I,KAAjB,EAAsB;AACpB,iBAAKnB,YAAL,CAAkBgB,YAAlB,CAA+B,oBAAoB,GAApB,GAA0BG,KAAzD;AACD;;;;;;;yBAhHU6F,+BAA4BD;AAAA;;;cAA5BC;AAA4B3L;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADjBzCoL;;AACIA;;AAEIA;;AACIA;;AAKAA;;AACIA;;AACIA;;AACIA;;AAAkBA;;AAAeA;;AAEjCA;;AACIA;;AACIA;;AAAsBA;;AAA2BA;;AACrDA;;AACAA;;AACIA;;AAAsBA;;AAAuBA;;AACjDA;;AACJA;;AACAA;;AAAsBA;;AAA6BA;;AACnDA;;AACIA;;AACIA;;AACIA;;AAAgBA;;AAACA;;AACjBA;;AAAgBA;;AAAOA;;AAEvBA;;AAAgBA;;AAAKA;;AAEzBA;;AACJA;;AACAA;;AAUJA;;AAIAA;;AAAuBA;;AAA6BA;;AA6CxDA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAiBA;;AAAYA;;AACjCA;;AAEAA;;AACIA;;AACIA;;AAiCJA;;AACJA;;AACJA;;AACJA;;AAEJA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAiBA;;AAAOA;;AAC5BA;;AACAA;;AACIA;;AACIA;;AAAoBA;;AAAYA;;AAChCA;;AAAkBA;;AAAWA;;AACjCA;;AACAA;;AACIA;;AAAgBA;;AAAcA;;AAAIA;;AAAMA;;AAAOA;;AACnDA;;AACAA;;AACIA;;AAAgBA;;AAAaA;;AAAIA;;AAAMA;;AAASA;;AACpDA;;AACAA;;AACAA;;AAA2CA;;AAAMA;;AAASA;;AAAOA;;AAAMA;;AAAKA;;AAAOA;;AACnFA;;AAA0BA;;AACgDA;;AAC1EA;;AAA4DA;;AACrBA;;AAAgBA;;AACvDA;;AAA8BA;;AAA8BA;;AACrCA;;AAAaA;;AAAKA;;AAAKA;;AAC1CA;;AAAQA;;AAChBA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAiBA;;AAA0BA;;AAC/CA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAiBA;;AAA+BA;;AAChDA;;AACIA;;AAKJA;;AACAA;;AAAiBA;;AAAoCA;;AACrDA;;AACIA;;AAGJA;;AACAA;;AACIA;;AACJA;;AACAA;;AACIA;;AAEJA;;AACAA;;AAAiBA;;AAAqBA;;AACtCA;;AACIA;;AAOJA;;AACJA;;AACAA;;AACIA;;AAAiBA;;AAA4BA;;AAC7CA;;AACIA;;AAEJA;;AACAA;;AAAiBA;;AAAuBA;;AACxCA;;AACIA;;AAEJA;;AACAA;;AAAiBA;;AAA8BA;;AAC/CA;;AACIA;;AACJA;;AACAA;;AAAiBA;;AAAyCA;;AAC1DA;;AACIA;;AAGJA;;AACAA;;AAAiBA;;AAA2BA;;AAC5CA;;AACIA;;AAOJA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA2BA;;AAAoBA;;AAC/CA;;AACmCA;;AAAeA;;AACtDA;;AACAA;;AAEIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACJA;;AACAA;;AAEJA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAkBA;;AAAIA;;AACtBA;;AACJA;;AACAA;;AACIA;;AAAwBA;;AAAKA;;AAC7BA;;AACJA;;AACAA;;AACIA;;AAAsBA;;AAAQA;;AAC9BA;;AACJA;;AACJA;;AACAA;;AACIA;;AACOA;;AACXA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AAlRsDA;;AAAAA;;AAGAA;;AAAAA;;AAGRA;;AAAAA;;AAWSA;;AAAAA;;AAcRA;;AAAAA;;AA0DJA;;AAAAA;;AACLA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjDtBD;;AACIA;;AAC0CA;;AAAeA;;AAC7DA;;;;;;AACAA;;AACIA;;AAC0CA;;AAAiBA;;AAC/DA;;;;UCvDHmD;AAGX,0CAAmBxD,uBAAnB,EACOvG,MADP,EACqB;AAAA;;AADF;AACZ;AAHA,6BAAcyH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAd;AAIA,oCAAqB,KAAKJ,WAA1B;AADmB;;;;iBAG1B,oBAAQ,CACP;;;iBAGD,+BAAmB;AACjB;AACAzM,kBAAM,CAACiP,IAAP,CAAY,uBAAZ;AACD;;;;;;;yBAdUD,0BAAuBnD;AAAA;;;cAAvBmD;AAAuB5O;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADTpCmL;;AACIA;;AACIA;;AAEAA;;AACIA;;AAEJA;;AAwCAA;;AACIA;;AACIA;;AACIA;;AAAqBA;;AAACA;;AAC1BA;;AACAA;;AAAIA;;AAAOA;;AACXA;;AAAGA;;AAAyBA;;AAAOA;;AAAWA;;AAC9CA;;AACIA;;AAA0CA;AAAA,qBAASjL,yBAAT;AAA8B,aAA9B;;AAAgCiL;;AAAaA;;AAC3FA;;AACAA;;AAIAA;;AAIJA;;AAEJA;;AAEAA;;AACJA;;AACJA;;;;AAd8CA;;AAAAA;;AAIAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEtDjCqD;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;iBACD,mBAAO;AACL,gBAAMC,aAAa,GAAG9S,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiC8S,SAAvD;AACA,gBAAMC,gBAAgB,GAAGhT,QAAQ,CAACsJ,IAAT,CAAcyJ,SAAvC,CAFK,CAGL;;AACApP,kBAAM,CAACsP,KAAP,GAJK,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;;;;yBApBUJ;AAAqB;;;cAArBA;AAAqB9O;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACPlC2K;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAAyBA;;AAAcA;;AACzCA;;AACAA;;AACEA;;AAA8EA;;AACnCA;;AAAeA;;AAC1DA;;AAA8EA;AAAA,qBAASzK,aAAT;AAAkB,aAAlB;;AAAoByK;;AAC5DA;;AAAKA;;AAC3CA;;AAAyEA;;AAC9BA;;AAAeA;;AAC5DA;;AACFA;;AACFA;;AACFA;;AAEAA;;AACEA;;AACEA;;AAEEA;;AACEA;;AAAiBA;;AAAWA;;AAC5BA;;AAAIA;;AAAoBA;;AACxBA;;AAAsBA;;AAA2BA;;AAAMA;;AAAmBA;;AAC5EA;;AACAA;;AAGFA;;AACAA;;AACEA;;AACIA;;AAAuCA;;AAAQA;;AACjDA;;AACEA;;AAKFA;;AACFA;;AACAA;;AACEA;;AAAuCA;;AAAQA;;AACjDA;;AACEA;;AAGFA;;AACFA;;AACEA;;AACEA;;AAAuCA;;AAAeA;;AACtDA;;AACEA;;AAIFA;;AACFA;;AACFA;;AAsCAA;;AACEA;;AACEA;;AACEA;;AACEA;;AAAqBA;;AAAQA;;AAC7BA;;AAAiCA;;AAAQA;;AACzCA;;AAA8BA;;AAAIA;;AAClCA;;AAA8BA;;AAAMA;;AACtCA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AAA6BA;;AAA4BA;;AACzDA;;AAAgBA;;AAAmBA;;AACrCA;;AACAA;;AAAqCA;;AAACA;;AACtCA;;AAAkCA;;AAAMA;;AACxCA;;AAAkCA;;AAAOA;;AAC3CA;;AACAA;;AACEA;;AACEA;;AAA6BA;;AAAqBA;;AAClDA;;AAAgBA;;AAAkDA;;AACpEA;;AACAA;;AAAqCA;;AAACA;;AACtCA;;AAAkCA;;AAASA;;AAC3CA;;AAAkCA;;AAASA;;AAC7CA;;AACAA;;AACEA;;AACEA;;AAA6BA;;AAAsBA;;AACnDA;;AAAgBA;;AAA8BA;;AAChDA;;AACAA;;AAAqCA;;AAACA;;AACtCA;;AAAkCA;;AAAQA;;AAC1CA;;AAAkCA;;AAASA;;AAC7CA;;AACAA;;AACEA;;AACEA;;AAA6BA;;AAAmBA;;AAChDA;;AAAgBA;;AAAkBA;;AACpCA;;AACAA;;AAAqCA;;AAACA;;AACtCA;;AAAkCA;;AAASA;;AAC3CA;;AAAkCA;;AAAUA;;AAC9CA;;AACFA;;AACFA;;AACFA;;AAwBAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAAqBA;;AAAQA;;AAC7BA;;AAAiCA;;AAAcA;;AAC/CA;;AAA8BA;;AAAIA;;AAClCA;;AAA8BA;;AAAUA;;AAC1CA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAyBA;;AAAIA;;AAC7BA;;AAAqCA;;AAAMA;;AAC3CA;;AAAkCA;;AAAIA;;AACtCA;;AAAkCA;;AAAOA;;AAC3CA;;AACAA;;AACEA;;AAAyBA;;AAAIA;;AAC7BA;;AAAqCA;;AAAMA;;AAC3CA;;AAAkCA;;AAAIA;;AACtCA;;AAAkCA;;AAAOA;;AAC3CA;;AACAA;;AACAA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAQA;;AACZA;;AAAGA;;AAAIA;;AACTA;;AACAA;;AACEA;;AAAIA;;AAAKA;;AACTA;;AAAGA;;AAAIA;;AACTA;;AACAA;;AACEA;;AAAIA;;AAAQA;;AACZA;;AAAGA;;AAAIA;;AACTA;;AACAA;;AACEA;;AAAIA;;AAAOA;;AACXA;;AAAGA;;AAAIA;;AACTA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AAAsBA;;AAAQA;;AAAOA;;AAASA;;AAErBA;;AAC3BA;;AACFA;;AACFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCnNakE;AACX;AAEA,yCAAoBtK,MAApB,EACU8C,EADV,EAEUC,WAFV,EAGUhD,YAHV,EAISiD,SAJT,EAKUC,IALV,EAMSC,iBANT,EAOUC,OAPV,EAQUlD,aARV,EAQsC;AAAA;;AARlB;AACV;AACA;AACA;AACD;AACC;AACD;AACC;AACA;AAAiC;;;;iBAE3C,oBAAQ,CACP;;;iBAED,2BAAe;AACb,iBAAKD,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAE2C,yBAAW,EAAE;AAAEC,+BAAe,EAAE;AAAnB;AAAf,aAAtC;AACD;;;iBAED,2BAAe;AACb,iBAAK3D,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAE2C,yBAAW,EAAE;AAAEC,+BAAe,EAAE;AAAnB;AAAf,aAAtC;AACD;;;;;;;yBAtBU2G,yBAAsBC;AAAA;;;cAAtBD;AAAsBnP;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACjBnC8O;;AAEIA;;AAA2BA;;AAASA;;AACxCA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAEIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AACtBA;;AAAIA;;AACpCA;;AACAA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACRA;;AACJA;;AACJA;;AACJA;;AAEJA;;AACAA;;AAAAA;;AAEIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAGA;;AAAQA;;AACfA;;AACJA;;AACAA;;AACIA;;AACIA;;AACJA;;AAEJA;;AACJA;;AAEAA;;AAAwCA;AAAA,qBAAS5O,qBAAT;AAA0B,aAA1B;;AACpC4O;;AACIA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACAA;;AACJA;;AACJA;;AACAA;;AAAAA;;AACIA;;AAAuBA;;AAAQA;;AAAOA;;AACtCA;;AACIA;;AACJA;;AACJA;;AAEAA;;AACIA;;AAAUA;;AAAeA;;AAC7BA;;AACJA;;AACJA;;AACJA;;AAEAA;;AAAwCA;AAAA,qBAAS5O,qBAAT;AAA0B,aAA1B;;AACpC4O;;AACIA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACAA;;AACAA;;AAERA;;AACAA;;AAAAA;;AACIA;;AAAuBA;;AAAQA;;AAAOA;;AACtCA;;AACIA;;AACJA;;AACJA;;AAEAA;;AACIA;;AAAUA;;AAAeA;;AAC7BA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACAA;;AACAA;;AAERA;;AACAA;;AAAAA;;AACIA;;AAAuBA;;AAAUA;;AAAOA;;AACxCA;;AACIA;;AACJA;;AACJA;;AAEAA;;AACIA;;AAAUA;;AAAeA;;AAC7BA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CwC5K;;AACIA;;AACJA;;;;;;AAagBA;;AACIA;;AACJA;;;;;;AAJJA;;AAEIA;;AAGJA;;;;;;AAHUA;;AAAAA;;;;;;AAiBNA;;AACIA;;AACJA;;;;;;AAJJA;;AAEIA;;AAGJA;;;;;;AAHUA;;AAAAA;;;;;;AAyBNA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAPJA;;AAEIA;;AAGAA;;AAGJA;;;;;;AANUA;;AAAAA;;AAGAA;;AAAAA;;;;;;;;;;UC9IjD6K;AAYX,sCAAmB1H,EAAnB,EACSI,iBADT,EAESlD,MAFT,EAGSoD,KAHT,EAG6B;AAAA;;AAHV;AACV;AACA;AACA;AAbF,+BAAsB,KAAtB;AAEA,0BAASqE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAT;AAEP,4BAAoB,KAApB;AAIO,sBAAc,IAAd;AACA,uBAAe,IAAf;AAI2B;;;;iBAElC,oBAAQ;AAAA;;AACN;AACA;AACA;AAEA,iBAAKxE,KAAL,CAAWM,WAAX,CAAuBhN,SAAvB,CAAiC,gBAAM,EAAG;AACxC,qBAAI,CAACsL,KAAL,GAAY4B,MAAM,CAAC,OAAD,CAAlB;AACD,aAFD;AAGA,iBAAK6G,oBAAL;AACA,iBAAKC,cAAL,GAAoB,KAAK5H,EAAL,CAAQ3C,KAAR,CAAc;AAEhC4I,uBAAS,EAAG,CAAE,EAAF,EAAK,CAAC1I,+DAAD,EAAsBA,+DAAmB,cAAnB,CAAtB,CAAL,CAFoB;AAGhC2I,sBAAQ,EAAC,CAAC,EAAD,EAAI,CAAC3I,+DAAD,EAAqBA,+DAAmB,cAAnB,CAArB,CAAJ,CAHuB;AAIhC2B,mBAAK,EAAC,CAAC,EAAD,EAAI,CAAC3B,+DAAD,EAAqBA,+DAAmB,mCAAnB,CAArB,CAAJ,CAJ0B;AAKhCgD,sBAAQ,EAAC,CAAC,EAAD,EAAI,CAAChD,+DAAD,EAAqBA,+DAAmB,WAAnB,CAArB,CAAJ,CALuB;AAMhCsK,yBAAW,EAAE,CAAC,EAAD,EAAK,CAACtK,+DAAD,CAAL;AANmB,aAAd,CAApB;AAWA,iBAAKuK,WAAL,GAAiB,KAAK9H,EAAL,CAAQ3C,KAAR,CAAc;AAC9BsD,sBAAQ,EAAG,CAAE,EAAF,EAAK,CAACpD,+DAAD,EAAqBA,+DAAmB,UAAnB,CAArB,CAAL,CADmB;AAE9BkD,sBAAQ,EAAC,CAAC,EAAD,EAAI,CAAClD,+DAAD,CAAJ,CAFqB;AAG9BwK,6BAAe,EAAC,CAAC,EAAD,EAAI,CAACxK,+DAAD,CAAJ;AAHc,aAAd,EAIf;AACA6B,uBAAS,EAAE,2FAAoB,UAApB,EAAgC,iBAAhC;AADX,aAJe,CAAjB;AAUD;;;eACD,eAAO;AACP,mBAAO,KAAK0I,WAAL,CAAiBhU,QAAxB;AACC;;;eACD,eAAK;AACH,mBAAO,KAAK8T,cAAL,CAAoB9T,QAA3B;AACD;;;iBAED,gCAAoB;AAAA;;AAClB,iBAAKsM,iBAAL,CAAuB4H,yBAAvB,CAAiD,EAAjD,EAAoD,KAAK9I,KAAzD,EAAgEpB,IAAhE,CAAsE,aAAG,EAAE;AACzE,qBAAI,CAACwD,IAAL,GAAUvD,GAAG,CAACuD,IAAd;;AACA,qBAAI,CAACsG,cAAL,CAAoBpI,UAApB,CAA+B;AAC7ByG,yBAAS,EAAClI,GAAG,CAACuD,IAAJ,CAAS2E,SADU;AAE7BC,wBAAQ,EAACnI,GAAG,CAACuD,IAAJ,CAAS4E,QAFW;AAG7BhH,qBAAK,EAACnB,GAAG,CAACuD,IAAJ,CAASpC,KAHc;AAI7BqB,wBAAQ,EAACxC,GAAG,CAACuD,IAAJ,CAASkB;AAJW,eAA/B;AAOD,aATD;AAUD;;;iBACD,uBAAW;AACV;AACC,gBAAG,KAAKoF,cAAL,CAAoBjK,OAAvB,EAA+B;AAC7B,qBAAO,KAAP;AACD;;AACD,iBAAKyC,iBAAL,CAAuBmC,gBAAvB,CAAwC,KAAKqF,cAAL,CAAoBrW,KAA5D,EAAmEuM,IAAnE,CAAwE,UAACwD,IAAD,EAAQ,CAE/E,CAFD;AAGA,iBAAK2G,aAAL,GAAmB,IAAnB;AACA,iBAAK3F,UAAL,GAAgB,IAAhB;AACD;;;iBACD,sBAAU;AACN,iBAAKF,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACH;;;iBACD,uBAAW;AACT,iBAAK8F,KAAL,GAAW,CAAC,KAAKA,KAAjB;AACD;;;iBACD,sBAAU;AAAA;;AACR,iBAAKxK,SAAL,GAAe,IAAf;;AACA,gBAAG,KAAKoK,WAAL,CAAiBnK,OAApB,EAA4B;AAC1B,qBAAO,KAAP;AACD;;AACD,gBAAI2D,IAAI;AACN,uBAAQ,KAAKpC;AADP,eAEH,KAAK4I,WAAL,CAAiBvW,KAFd,CAAR;AAKC,iBAAK6O,iBAAL,CAAuB+H,eAAvB,CAAuC7G,IAAvC,EAA6CxD,IAA7C,CAAkD,aAAG,EAAE;AACvD,qBAAI,CAACZ,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACA,aAFA;AAGF;;;iBACD,oBAAWpN,KAAX,EAAgB;AACd,gBAAM0N,QAAQ,GAAI1N,KAAK,CAAC2N,KAAP,GAAgB3N,KAAK,CAAC2N,KAAtB,GAA8B3N,KAAK,CAAC+F,OAArD;;AACA,gBAAI2H,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,CAAJ,EAAuD;AACrD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AAED;;;;;;;yBAzGUmJ,sBAAmB7K;AAAA;;;cAAnB6K;AAAmBrP;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADXhCkE;;AACIA;;AACIA;;AACIA;;AAGIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAQIA;;AACIA;;AAEIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AACtBA;;AAAIA;;AACpCA;;AAEAA;;AAAwCA;;AAAWA;;AACvDA;;AACJA;;AAiCRA;;AACAA;;AAwBQA;;AACIA;;AAGAA;;AAAIA;;AAAMA;;AACVA;;AAAgCA;AAAA,qBAAYhE,gBAAZ;AAAwB,aAAxB;;AAE5BgE;;AACIA;;AACIA;;AAA2CA;;AAASA;;AACpDA;;AAA4BA;AAAA,qBAAYhE,sBAAZ;AAA8B,aAA9B;;AAA5BgE;;AAIAA;;AAMJA;;AAEJA;;AAEIA;;AACIA;;AAA8CA;;AAAQA;;AACtDA;;AAKAA;;AAMAA;;AAAoCA;AAAA,qBAAShE,gBAAT;AAAqB,aAArB;;AAChCgE;;AAMJA;;AACJA;;AACAA;;AACIA;;AAAsDA;;AAC1CA;;AACZA;;AAOAA;;AASAA;;AAAoCA;AAAA,qBAAShE,iBAAT;AAAsB,aAAtB;;AAChCgE;;AAMJA;;AACJA;;AAGJA;;AACIA;;AAEIA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AA3F+EA;;AAAAA;;AAIjCA;;AAAAA;;AAM0BA;;AAAAA;;AAGdA;;AAAAA;;AAaFA;;AAAAA,6GAAmC,SAAnC,EAAmCA,iHAAnC;;AAIEA;;AAAAA;;AAOCA;;AAAAA;;AAYHA;;AAAAA,8GAAoC,SAApC,EAAoCA,wHAApC;;AAMEA;;AAAAA;;AAUCA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEvJ9CuL;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAkC;;;cAAlCA;AAAkC/P;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACP/C2K;;AACIA;;AACIA;;AACIA;;AAAkBA;;AAAgBA;;AAGtCA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAkCA;;AAACA;;AACnCA;;AAAkCA;;AAAQA;;AAC1CA;;AAAkCA;;AAAMA;;AACxCA;;AAAkCA;;AAAKA;;AAC3CA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAIA;;AAACA;;AACLA;;AAAIA;;AAAWA;;AACfA;;AACIA;;AACIA;;AAEJA;;AACJA;;AACAA;;AAAIA;;AAAGA;;AAAKA;;AAChBA;;AAOJA;;AAEAA;;AACIA;;AACIA;;AAGAA;;AACAA;;AAAsCA;;AAAKA;;AAC3CA;;AAAsCA;;AACtCA;;AACJA;;AACJA;;AACJA;;AACJA;;AAEJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBwC+E;;AAEIA;;AAAuCA;;AAC0BA;;AACjEA;;AAAuBA;;AACAA;;AACvBA;;AAEJA;;;;;;AAJ2BA;;AAAAA;;;;;;AA2DfA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AARJA;;AAGIA;;AAGAA;;AAGJA;;;;;;AANUA;;AAAAA;;AAGAA;;AAAAA;;;;;;AAgBFA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAPJA;;AAEIA;;AAGAA;;AAGJA;;;;;;AANUA;;AAAAA;;AAGAA;;AAAAA;;;;;;;;AAcEA;;AAA2DA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEvDA;;AAEJA;;;;;;AAHmCA;;AAA/BA;;AACAA;;AAAAA;;;;;;AAKJA;;AACIA;;AACJA;;;;;;AAHJA;;AACIA;;AAGJA;;;;;;AAHUA;;AAAAA;;;;;;AAaVA;;AACIA;;AACJA;;;;;;AAEAA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAbJA;;AACIA;;AAIAA;;AAGAA;;AAGAA;;AAIJA;;;;;;AAdUA;;AAAAA;;AAIAA;;AAAAA;;AAGAA;;AAAAA;;AAGAA;;AAAAA;;;;;;AAuBVA;;AACIA;;AACJA;;;;;;AALJA;;AAGIA;;AAGJA;;;;;;AAHUA;;AAAAA;;;;;;AA4DdA;;AAEIA;;AACJA;;;;;;;;;;;;;;AA5NhBA;;AACIA;;AAAgDA;AAAAA;;AAAA;;AAAA;AAAA;;AAC5CA;;AACFA;;AACFA;;AACIA;;AASAA;;AAAkDA;;AAAGA;;AAAsBA;;AAAIA;;AAC/EA;;AAAqDA;;AAC7CA;;AAA0BA;;AAC1BA;;AAAMA;;AACFA;AAAAA;;AAAA;;AAAA;AAAA;;AAA4BA;;AAAGA;;AAAIA;;AAAMA;;AAAIA;;AAAIA;;AAAIA;;AACrDA;;AACZA;;AACAA;;AAAiCA;AAAAA;;AAAA;;AAAA;AAAA;;AAsC7BA;;AACIA;;AAA+CA;;AAASA;;AACxDA;;AAIAA;;AAUJA;;AAIIA;;AACIA;;AAA2CA;;AAAaA;;AACxDA;;AAIAA;;AASJA;;AACAA;;AACIA;;AAA4CA;;AAAYA;;AACxDA;;AACIA;;AACIA;;AAA4CA;AAAAA;;AAAA;;AAAA;AAAA;;AAA5CA;;AAIAA;;AACIA;;;;AAKJA;;AACAA;;AAKJA;;AACJA;;AAEAA;;AAEIA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAGAA;;AAgBJA;;AAEJA;;AAEAA;;AACIA;;AAA8CA;;AAAeA;;AAC7DA;;AAKAA;;AAAoCA;AAAAA;;AAAA;;AAAA;AAAA;;AAChCA;;AAEJA;;AACAA;;AAQJA;;AA+CJA;;AACIA;;AAIAA;;AAAuDA;;AACnDA;;AAAyCA;;AAAIA;;AACzCA;;AAAIA;;AAAKA;;AACjBA;;AAIJA;;AACAA;;AACIA;;AAEIA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACAA;;AAA2CA;;AAAEA;;AAC7CA;;AACFA;;AAEFA;;AACIA;;AAEIA;;AACAA;;AACJA;;AAEJA;;AACJA;;AAGJA;;AACJA;;;;;;;;AAvPyBA;;AAMZA;;AAAAA;;AAeCA;;AAAAA;;AAyC8CA;;AAAAA;;AAIvCA;;AAAAA;;AAgBGA;;AAAAA;;AAICA;;AAAAA;;AAcmCA;;AAAAA,2FAAwB,SAAxB,EAAwBA,sHAAxB;;AAGUA;;AAAAA;;AACPA;;AAAAA;;AAMCA;;AAAAA;;AAYpCA;;AAAAA;;AACgCA;;AAAAA;;AAuBpCA;;AAAAA,8GAAmC,SAAnC,EAAmCA,qHAAnC;;AAMIA;;AAAAA;;AAGHA;;AAAAA;;AAwDqDA;;AAAAA;;AAOzDA;;AAAAA;;;;;;AAsCbA;;AAEIA;;AAAuCA;;AAC0BA;;AACjEA;;AAAuBA;;AAAuBA;;AAC9CA;;AAEJA;;;;;;AAwDYA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAPJA;;AAEIA;;AAGAA;;AAGJA;;;;;;AANUA;;AAAAA;;AAGAA;;AAAAA;;;;;;;;AAeEA;;AAA2DA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEvDA;;AACJA;;;;;;AAFiCA;;AAA7BA;;AACAA;;AAAAA;;;;;;AAIJA;;AACIA;;AACJA;;;;;;AAHJA;;AACIA;;AAGJA;;;;;;AAHUA;;AAAAA;;;;;;AAaVA;;AACIA;;AACJA;;;;;;AAEAA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAbJA;;AACIA;;AAIAA;;AAGAA;;AAGAA;;AAIJA;;;;;;AAdUA;;AAAAA;;AAIAA;;AAAAA;;AAGAA;;AAAAA;;AAGAA;;AAAAA;;;;;;AAkBdA;;AACIA;;AACJA;;;;;;;;AAxIhBA;;AACIA;;AAAgDA;AAAAA;;AAAA;;AAAA;AAAA;;AAC5CA;;AACFA;;AAEFA;;AACIA;;AAQAA;;AAA6CA;;AAAsBA;;AAEnEA;;AACIA;;AACIA;;AACJA;;AACAA;;AAAMA;;AAA2BA;AAAAA;;AAAA;;AAAA;AAAA;;AAC7BA;;AAAGA;;AAAMA;;AAAIA;;AACbA;;AACAA;;AACRA;;AACAA;;AAAyCA;AAAAA;;AAAA;;AAAA;AAAA;;AAoCrCA;;AACIA;;AAA+CA;;AAASA;;AACxDA;;AAIAA;;AASJA;;AAEAA;;AACIA;;AAA4CA;;AAAYA;;AACxDA;;AACIA;;AACIA;;AAA4CA;AAAAA;;AAAA;;AAAA;AAAA;;AAA5CA;;AAIAA;;AACIA;;;;AAIJA;;AACAA;;AAKJA;;AACJA;;AAEAA;;AAEIA;;AACIA;AAAAA;;AAAA;;AAAA;AAAA;;AADJA;;AAGAA;;AAgBJA;;AAEJA;;AAEAA;;AACIA;;AAIAA;;AAAuDA;;AACnDA;;AAAyCA;;AAAIA;;AACzCA;;AAAIA;;AACZA;;AACAA;;AAGJA;;AACAA;;AAGAA;;AACIA;;AAEIA;;AACJA;;AACJA;;AACJA;;AAEJA;;AACJA;;;;;;;;AAtJwBA;;AAOXA;;AAAAA;;AAkBCA;;AAAAA;;AAuC8CA;;AAAAA;;AAGtCA;;AAAAA;;AAgBkCA;;AAAAA,4FAAwB,SAAxB,EAAwBA,sHAAxB;;AAGUA;;AAAAA;;AACPA;;AAAAA;;AAKCA;;AAAAA;;AAYpCA;;AAAAA;;AACgCA;;AAAAA;;AAsBsBA;;AAAAA;;AAOxDA;;AAAAA;;;;;;AAoBdA;;AAAsEA;;AACdA;;;;;;AAoCxDA;;AAAsEA;;AAC3BA;;;;;;AAYnCA;;AAA+CA;;AAAYA;;;;UC1f9FC;AAiCX,kCAAmBtI,EAAnB,EACSI,iBADT,EAESmI,aAFT,EAGStL,YAHT,EAIUD,YAJV,EAKSE,MALT,EAMSoD,KANT,EAOSJ,SAPT,EAOoC;AAAA;;AAPjB;AACV;AACA;AACA;AACC;AACD;AACA;AACA;AAvCA,+BAAyB,KAAzB;AAGF,0BAAmB,QAAnB;AAKA,sBAAe,CAAf;AACA,+BAAyB,KAAzB;AACA,iCAA2B,KAA3B;AACA,2BAAqB,KAArB;AACA,4BAAsB,KAAtB;AAIA,sBAAgB,IAAhB;AACA,uBAAiB,IAAjB;AAIP,iCAA2B,KAA3B;AAIO,2BAAiB,KAAjB;AAEA,6BAAc,EAAd;AACA,8BAAwB,KAAxB;AAWkC;;;;iBAGzC,oBAAQ;AAAA;;AACN,iBAAKI,KAAL,CAAWM,WAAX,CAAuBhN,SAAvB,CAAiC,gBAAM,EAAG;AACxC,qBAAI,CAACoN,UAAL,GAAkBF,MAAM,CAAC,YAAD,CAAN,KAAyB,MAA3C;AACD,aAFD,EADM,CAKN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAK0H,aAAL,GAnBM,CAoBN;;AACA,iBAAKC,YAAL,GAAoB,KAAKzI,EAAL,CAAQ3C,KAAR,CAAc;AAChC4I,uBAAS,EAAE,CAAC,EAAD,EAAK,CAACyC,+DAAD,EAAsBA,+DAAmB,cAAnB,CAAtB,CAAL,CADqB;AAEhC;AACAxJ,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACwJ,+DAAD,EAAsBA,+DAAmB,mCAAnB,CAAtB,CAAL,CAHyB;AAIhClG,oBAAM,EAAE,CAAC,EAAD,EAAK,CAACkG,+DAAmB,WAAnB,CAAD,CAAL,CAJwB;AAKhCjI,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAACiI,+DAAD,CAAL,CALsB;AAMhC;AACAb,yBAAW,EAAE,CAAC,EAAD,EAAK,CAACa,+DAAD,CAAL,CAPmB;AAQhCC,uBAAS,EAAC,CAAC,KAAD,EAAO,CAACD,+DAAD,CAAP;AARsB,aAAd,EASjB;AACDtJ,uBAAS,EAAE,oFAAoB,UAApB,EAAgC,UAAhC;AADV,aATiB,CAApB,CArBM,CAiCN;;AACA,iBAAKwJ,oBAAL,GAA4B,KAAK5I,EAAL,CAAQ3C,KAAR,CAAc;AAExC4I,uBAAS,EAAE,CAAC,EAAD,EAAK,CAACyC,+DAAD,EAAsBA,+DAAmB,cAAnB,CAAtB,CAAL,CAF6B;AAGxC;AACA;AACAlG,oBAAM,EAAE,CAAC,EAAD,EAAK,CAACkG,+DAAD,EAAsBA,+DAAmB,WAAnB,CAAtB,CAAL,CALgC;AAMxCC,uBAAS,EAAC,CAAC,KAAD,EAAO,CAACD,+DAAD,CAAP,CAN8B;AAQxCb,yBAAW,EAAE,CAAC,EAAD,EAAK,CAACa,+DAAD,CAAL;AAR2B,aAAd,CAA5B,CAlCM,CA6CN;;AAEA,iBAAK3F,aAAL,GAAqB,KAAK/C,EAAL,CAAQ3C,KAAR,CAAc;AACjCsD,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC+H,+DAAD,EAAsBA,4DAAtB,CAAL,CADuB,CAEjC;;AAFiC,aAAd,CAArB;AAKA,iBAAKG,eAAL,GAAuB,KAAK7I,EAAL,CAAQ3C,KAAR,CAAc;AACnC;AACAwF,uBAAS,EAAE,CAAC,EAAD,EAAK,CAAC6F,+DAAD,EAAsBA,+DAAmB,WAAnB,CAAtB,CAAL;AAFwB,aAAd,CAAvB;AAKA,iBAAKI,eAAL,GAAuB,KAAKL,YAAL,CAAkBvR,GAAlB,CAAsB,WAAtB,EAAmCvD,YAAnC,CAAgDoV,IAAhD,CACrB,2DAAU,EAAV,CADqB,EAErB,sDAAI,eAAK,EAAG;AACV,kBAAG,OAAI,CAACC,WAAR,EAAqB;AACnB,oBAAMrX,IAAI,GAAG,OAAOJ,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAjD;AACA,uBAAOI,IAAI,GAAG,OAAI,CAACsX,OAAL,CAAatX,IAAb,CAAH,GAAwB,OAAI,CAACqX,WAAL,CAAiBE,KAAjB,EAAnC;AACD;AACJ,aALC,CAFqB,CAAvB;AASD;;;iBAED,2BAAe;AACb,iBAAKhM,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAE2C,yBAAW,EAAE;AAAEC,+BAAe,EAAE;AAAnB;AAAf,aAAtC;AACD;;;iBAED,2BAAe;AACb,iBAAK3D,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAE2C,yBAAW,EAAE;AAAEC,+BAAe,EAAE;AAAnB;AAAf,aAAtC;AACD;;;iBAED,mBAAUM,IAAV,EAAoB;AAClB,mBAAOA,IAAI,GAAGA,IAAH,GAAU,EAArB;AACD;;;iBACO,iBAAQxP,IAAR,EAAoB;AAC1B,gBAAMwX,WAAW,GAAGxX,IAAI,CAACgG,WAAL,EAApB;AACA,mBAAO,KAAKqR,WAAL,CAAiBI,MAAjB,CAAwB,gBAAM;AAAA,qBAAIC,MAAM,CAACC,WAAP,CAAmB3R,WAAnB,GAAiChB,QAAjC,CAA0CwS,WAA1C,CAAJ;AAAA,aAA9B,CAAP;AACD;;;iBACD,yBAAa;AAAA;;AACX,iBAAKZ,aAAL,CAAmBgB,mBAAnB,CAAuC,EAAvC,EAA2CzL,IAA3C,CAAgD,UAACC,GAAD,EAAQ;AACtD,qBAAI,CAACyL,UAAL,GAAgBzL,GAAhB;AACA,qBAAI,CAACiL,WAAL,GAAkB,OAAI,CAACQ,UAAL,CAAgBlI,IAAlC;AACD,aAHD;AAID;;;iBACM,oCAAwB;AAC7B,iBAAKmI,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACD,YACD;;;;iBACA,sBAAU;AACT,iBAAKrH,IAAL,GAAY,CAAC,KAAKA,IAAlB,CADS,CAER;AACD;;;iBACD,uBAAW;AACT,iBAAK8F,KAAL,GAAa,CAAC,KAAKA,KAAnB,CADS,CAER;AACD,YACF;;;;eACA,eAAK;AACH,mBAAO,KAAKO,YAAL,CAAkB3U,QAAzB;AACD,YACD;;;;eACA,eAAK;AACH,mBAAO,KAAK8U,oBAAL,CAA0B9U,QAAjC;AACD,YACD;;;;iBACA,cAAKmC,EAAL,EAAO;AACL,gBAAIA,EAAE,KAAK,CAAX,EAAc;AACZ,mBAAKkL,IAAL,GAAYiD,2EAAZ;AACA,mBAAKpD,UAAL,GAAkB,KAAlB;AACA,mBAAK0I,SAAL,GAAiB,KAAjB;AACA,mBAAKjB,YAAL,CAAkBkB,eAAlB,GAJY,CAKZ;;AACA,mBAAKvI,QAAL,GAAgB,QAAhB;AACD,aAPD,MAQK,IAAInL,EAAE,KAAK,CAAX,EAAc;AACjB,mBAAKkL,IAAL,GAAYiD,6EAAZ;AACA,mBAAKpD,UAAL,GAAkB,IAAlB;AACA,mBAAKI,QAAL,GAAgB,UAAhB;AACA,mBAAKsI,SAAL,GAAiB,KAAjB;AACA,mBAAKd,oBAAL,CAA0Be,eAA1B;AACD;AACF,YACD;;;;iBACA,0BAAc;AAAA;;AACZrK,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKkJ,YAAL,CAAkBlX,KAArD;AACA,iBAAKmM,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK+K,YAAL,CAAkB9K,OAAtB,EAA+B;AAC7B;AACD;;AAED,gBAAIiM,GAAG,GAAG;AACV,uBAAQ,KAAKnB,YAAL,CAAkB3U,QAAlB,CAA2BoL,KAA3B,CAAiC3N,KAD/B;AAEV,0BAAW,KAAKkX,YAAL,CAAkB3U,QAAlB,CAA2B2M,QAA3B,CAAoClP,KAFrC;AAGV,2BAAY,KAAKsY,SAHP;AAIV,2BAAc,KAAKpB,YAAL,CAAkB3U,QAAlB,CAA2BmS,SAA3B,CAAqC1U,KAJzC;AAKV,wBAAW,KAAKkX,YAAL,CAAkB3U,QAAlB,CAA2B0O,MAA3B,CAAkCjR,KALnC,CAMV;;AANU,aAAV;AASA,iBAAKgX,aAAL,CAAmBuB,mBAAnB,CAAuCF,GAAvC,EAA4C9L,IAA5C,CAAiD,UAACwD,IAAD,EAAS;AACxD,qBAAI,CAAC2G,aAAL,GAAqB,IAArB;AACA,qBAAI,CAAC3F,UAAL,GAAkB,IAAlB;AACD,aAHD,EAIA,UAACnE,KAAD,EAAS;AACP,qBAAI,CAAC4L,WAAL,GAAmB5L,KAAK,CAACA,KAAN,CAAYG,aAA/B;AACA,qBAAI,CAACoL,SAAL,GAAiB,IAAjB;AACD,aAPD,WAQO,eAAK,EAAG;AACb,qBAAI,CAACA,SAAL,GAAiB,IAAjB;AACApK,qBAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4C,OAAI,CAACmK,SAAjD;AACD,aAXD;AAYD,YACD;;;;iBACA,4BAAgB;AAAA;;AACdpK,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKqJ,oBAAL,CAA0BrX,KAA3D;AACA,iBAAKmM,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKkL,oBAAL,CAA0BjL,OAA9B,EAAuC;AACrC;AACD;;AACD,iBAAK4K,aAAL,CAAmByB,qBAAnB,CAAyC,KAAKpB,oBAAL,CAA0BrX,KAAnE,EAA0EuM,IAA1E,CAA+E,UAACwD,IAAD,EAAS;AACtF,kBAAIA,IAAJ,EAAU;AACR,oBAAI2B,CAAC,GAAG;AACNT,wBAAM,EAAE,OAAI,CAACoG,oBAAL,CAA0B9U,QAA1B,CAAmC0O,MAAnC,CAA0CjR;AAD5C,iBAAR,CADQ,CAIR;;AACA,uBAAI,CAAC+Q,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAAC2H,eAAL,GAAuB,IAAvB;AACA,uBAAI,CAACC,aAAL,GAAqB,IAArB;AACD;AACF,aAVD,EAWA,UAAC/L,KAAD,EAAS;AACP,qBAAI,CAAC4L,WAAL,GAAmB5L,KAAK,CAACA,KAAN,CAAYG,aAA/B;AACA,qBAAI,CAACoL,SAAL,GAAiB,IAAjB;AACD,aAdD,WAcS,eAAK,EAAG;AACf,qBAAI,CAACK,WAAL,GAAmB5L,KAAK,CAACA,KAAN,CAAYG,aAA/B;AACA,qBAAI,CAACoL,SAAL,GAAiB,IAAjB;AACD,aAjBD;AAkBD,YACD;;;;iBACA,2BAAe;AAAA;;AACb,gBAAMpI,IAAI,GAAG;AACXpC,mBAAK,EAAE,KAAKuJ,YAAL,CAAkB3U,QAAlB,CAA2BoL,KAA3B,CAAiC3N,KAD7B;AAEXoP,sBAAQ,EAAE,KAAKoC,aAAL,CAAmBjP,QAAnB,CAA4B6M,QAA5B,CAAqCpP,KAFpC,CAGX;AACA;;AAJW,aAAb;AAOA,iBAAK2O,SAAL,CAAe8C,eAAf,CAA+B1B,IAA/B,EAAqCxD,IAArC,CAA0C,UAACwD,IAAD,EAAS;AACnD,qBAAI,CAACpE,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACC,aAFD,EAEG,UAACC,GAAD,EAAQ;AACT,qBAAI,CAAClB,YAAL,CAAkBqB,iBAAlB,CAAoC,iBAApC;AACD,aAJD;AAKD;;;iBACD,6BAAiB;AAAA;;AACf,gBAAI4E,CAAC,GAAG;AACNT,oBAAM,EAAE,KAAKoG,oBAAL,CAA0B9U,QAA1B,CAAmC0O,MAAnC,CAA0CjR;AAD5C,aAAR;AAGA,iBAAK0L,YAAL,CAAkBiG,WAAlB,CAA8BD,CAA9B,EAAiCnF,IAAjC,CAAsC,UAACC,GAAD,EAAQ;AAC5C,qBAAI,CAACoF,MAAL,GAAcpF,GAAd;AACD,aAFD;AAGA,iBAAKqF,cAAL,GAAsB,IAAtB;AACA/M,sBAAU,CAAC,YAAK;AACd,qBAAI,CAAC+M,cAAL,GAAsB,KAAtB;AACD,aAFS,EAEP,MAFO,CAAV;AAGD;;;iBACD,2BAAe;AAAA;;AACb,gBAAIH,CAAC,GAAG;AACN/D,mBAAK,EAAE,KAAKuJ,YAAL,CAAkB3U,QAAlB,CAA2BoL,KAA3B,CAAiC3N;AADlC,aAAR;AAGA,iBAAK6O,iBAAL,CAAuBmC,gBAAvB,CAAwCU,CAAxC,EAA2CnF,IAA3C,CAAgD,UAACC,GAAD,EAAQ;AACtD,qBAAI,CAACoF,MAAL,GAAcpF,GAAd;AACD,aAFD;AAGA,iBAAKqF,cAAL,GAAsB,IAAtB;AACA/M,sBAAU,CAAC,YAAK;AACd,qBAAI,CAAC+M,cAAL,GAAsB,KAAtB;AACD,aAFS,EAEP,KAFO,CAAV;AAGD,YACD;;;;iBACA,6BAAiB;AACf,iBAAK6G,eAAL,GAAuB,IAAvB;AACA,gBAAIhH,CAAC,GAAG;AACNT,oBAAM,EAAE,KAAKoG,oBAAL,CAA0B9U,QAA1B,CAAmC0O,MAAnC,CAA0CjR,KAD5C;AAEN;AACAsR,uBAAS,EAAE,KAAKgG,eAAL,CAAqB/U,QAArB,CAA8B+O,SAA9B,CAAwCtR;AAH7C,aAAR;AAKA,iBAAK2L,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAPe,CAQf;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;iBACD,oBAAWpN,KAAX,EAAgB;AACd,gBAAM0N,QAAQ,GAAI1N,KAAK,CAAC2N,KAAP,GAAgB3N,KAAK,CAAC2N,KAAtB,GAA8B3N,KAAK,CAAC+F,OAArD;;AACA,gBAAI2H,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,CAAJ,EAAuD;AACrD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AAED;;;iBACD,sBAAa8K,MAAb,EAAmB;AACjB/J,mBAAO,CAACC,GAAR,CAAY8J,MAAZ;AACA,gBAAIc,QAAQ,GAACd,MAAM,CAACpT,EAApB;AACA,iBAAK4T,SAAL,GAAeM,QAAQ,CAACvX,QAAT,EAAf;AACD;;;iBACD,0BAAiBmF,CAAjB,EAAkB;AAAA;;AAChB,gBAAIqS,SAAS,GAAGrS,CAAC,CAAC3C,MAAF,CAAS7D,KAAzB;AACA+N,mBAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C6K,SAA7C;;AACA,gBAAGA,SAAS,IAAE,CAAd,EAAgB;AACd,mBAAK7B,aAAL,CAAmB8B,qBAAnB,CAAyC,EAAzC,EAA4CD,SAA5C,EAAuDtM,IAAvD,CAA4D,UAACC,GAAD,EAAO;AACjE,uBAAI,CAACyL,UAAL,GAAgBzL,GAAhB;AACA,uBAAI,CAACiL,WAAL,GAAkB,OAAI,CAACQ,UAAL,CAAgBlI,IAAlC;AACD,eAHD;AAID;AACF;AAED;;;;;;iBAGA,kCAAsB;AAAA;;AACpB;AACA;AACA,gBAAI2B,CAAC,GAAG;AACNT,oBAAM,EAAE,KAAKoG,oBAAL,CAA0B9U,QAA1B,CAAmC0O,MAAnC,CAA0CjR;AAD5C,aAAR;AAGA,iBAAK0L,YAAL,CAAkBiG,WAAlB,CAA8BD,CAA9B,EAAiCnF,IAAjC,CAAsC,UAACC,GAAD,EAAQ;AAC5C;AACA;AACA,qBAAI,CAACoF,MAAL,GAAcpF,GAAd;AACD,aAJD,EAIE,UAACG,GAAD,EAAO,CACP;AACD,aAND;AAOA,iBAAKkF,cAAL,GAAsB,IAAtB;AACA/M,sBAAU,CAAC,YAAK;AACd,qBAAI,CAAC+M,cAAL,GAAsB,KAAtB;AACD,aAFS,EAEP,MAFO,CAAV;AAGD;;;;;;;yBAtUUkF,kBAAeD;AAAA;;;cAAfC;AAAejQ;AAAAC;AAAA4R;AAAA;AAAA1R;AAAAC;AAAAC;AAAAC;AAAA;ADnB5B0P;;AACIA;;AAEIA;;AAEIA;;AAIIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAKIA;;AAMIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AAAgDA;;AAAIA;;AAC1GA;;AAEAA;;AACIA;;AACIA;;AAAAA;;AACIA;;AACAA;;AACRA;;AACJA;;AAEJA;;AAoBJA;;AAOJA;;AACAA;;AAAAA;;AACIA;;AA0PAA;;AAwJAA;;AACIA;;AACIA;;AAEAA;;AAAIA;;AAAwBA;;AAC5BA;;AAAkCA;AAAA,qBAAYxP,qBAAZ;AAA6B,aAA7B;;AAE9BwP;;AACIA;;AACIA;;AAA2CA;;AAAeA;;AAC1DA;;AAA4BA;AAAA,qBAAYxP,sBAAZ;AAA8B,aAA9B;;AAA5BwP;;AAEJA;;AACJA;;AACAA;;AACIA;;AACAA;;AACIA;;AAAmCA;AAAA,qBAASxP,qBAAT;AAA0B,aAA1B;;AAE/BwP;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AAEIA;;AACJA;;AAEJA;;AACJA;;AAEJA;;AACJA;;AAEAA;;AACIA;;AAGIA;;AAEAA;;AAAIA;;AAAwBA;;AAC5BA;;AAAoCA;AAAA,qBAAYxP,uBAAZ;AAA+B,aAA/B;;AAEhCwP;;AAEIA;;AACIA;;AAA4CA;;AAAgBA;;AAC5DA;;AAAOA;AAAA,qBAAYxP,sBAAZ;AAA8B,aAA9B;;AAAPwP;;AAGJA;;AACAA;;AACJA;;AAGAA;;AACIA;;AACAA;;AACIA;;AACIA;AAAA,qBAASxP,4BAAT;AAAiC,aAAjC;;AAEAwP;;AACJA;;AAEJA;;AACJA;;AAGAA;;AACIA;;AAEIA;;AACJA;;AAGJA;;AACJA;;AAEJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AA1esCA;;AAAAA;;AA0PAA;;AAAAA;;AAwJDA;;AAAAA;;AAE0CA;;AAAAA;;AAEnCA;;AAAAA;;AACEA;;AAAAA;;AAawBA;;AAAAA;;AAiBjCA;;AAAAA;;AAI0CA;;AAAAA;;AAEnCA;;AAAAA;;AACEA;;AAAAA;;AAU0BA;;AAAAA;;AAQmBA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UE9gB9EiC;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAuB;;;cAAvBA;AAAuBjS;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACPpC2K;;AACIA;;AACAA;;AACIA;;AACIA;;AACJA;;AACAA;;AACIA;;AAAIA;;AACAA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACJA;;AACJA;;AACJA;;AACAA;;AACJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACY4BQ;;;;;;AAIAA;;AACIA;;AACAA;;;;AAEJA;;;;;;AAFIA;;AAAAA;;;;;;AAHRA;;AACIA;;AAKJA;;;;;;AALuDA;;AAAAA;;;;;;AA8E/CA;;;;;;AAGAA;;AAEIA;;AACAA;;;;AACJA;;;;;;AADIA;;AAAAA;;;;;;AATRA;;AACIA;;AAEAA;;AAEIA;;AACJA;;AAKJA;;;;;;AARmDA;;AAAAA;;AAI1BA;;AAAAA;;;;;;AAOrBA;;;;;;AAGAA;;AAEIA;;AACAA;;;;AACJA;;;;;;AADIA;;AAAAA;;;;;;AARRA;;AACIA;;AACAA;;AAEIA;;AACJA;;AAKJA;;;;;;AARmDA;;AAAAA;;AAI1BA;;AAAAA;;;;;;AAOrBA;;;;;;AAGAA;;AAEIA;;AACAA;;;;AACJA;;;;;;AADIA;;AAAAA;;;;;;AARRA;;AACIA;;AACAA;;AAEIA;;AACJA;;AAKJA;;;;;;AARmDA;;AAAAA;;AAI1BA;;AAAAA;;;;;;AAkCzBA;;;;;;AAGAA;;AACIA;;AACAA;;;;AACJA;;;;;;AADIA;;AAAAA;;;;;;;;AAwFIA;;AAIIA;;AAA8CA;;AAAWA;;AAEzDA;;AACIA;;AACJA;;AAEAA;;AACIA;;AACJA;;AACAA;;AACIA;;AAEIA;;AAEIA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAFJA;;AAGJA;;AACJA;;AACJA;;;;;;AAlBdA;;AACgEA;;AAAAA;;AAaIA;;AAAAA;;;;UC9Q7EyG;AA6CX,wCACSpG,mBADT,EAESnE,EAFT,EAGS9C,MAHT,EAISoD,KAJT,EAKSkK,SALT,EAK4B;AAAA;;AAJnB;AACA;AACA;AACA;AACA;AA/CF,6BAAc7F,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAd;AAKA,uBAAQ,CAAR;AACA,0BAAW,KAAX;AACA,0BAAW,EAAX;AACA,6BAAc,EAAd;AAIA,gCAA0B,KAA1B;AAWA,uBAAQ,EAAR;AAOA,uBAAQ,KAAR;AACA,yBAAU,KAAV;AACA,wBAAS,KAAT;AACA,wBAAS,KAAT;AACA,uBAAQ,KAAR;AACA,yBAAU,KAAV;AACA,2BAAY,KAAZ;AAEA,yBAAmB,IAAnB;AAEA,4BAAsB,IAAtB;AAQF;;;;iBAEL,oBAAQ;AACN,iBAAKL,uBAAL;AACA,iBAAKgG,0BAAL,GAFM,CAGN;AACA;AAGA;;AACA,iBAAKC,gBAAL,GAAwB,KAAK1K,EAAL,CAAQ3C,KAAR,CAAc;AACpC;AACAsN,kBAAI,EAAE,KAAK3K,EAAL,CAAQ4K,KAAR,CAAc,EAAd;AAF8B,aAAd,CAAxB;AAIA,iBAAKC,qBAAL,GAA6B,KAAK7K,EAAL,CAAQ3C,KAAR,CAAc;AACzCyN,yBAAW,EAAE,KAD4B;AAEzCC,0BAAY,EAAE,KAF2B;AAGzCC,0BAAY,EAAE;AAH2B,aAAd,CAA7B;AAKD;AAED;;;;;;eAGA,eAAa;AACX,mBAAO,KAAKN,gBAAL,CAAsBxT,GAAtB,CAA0B,MAA1B,CAAP;AACD;;;iBAED,qBAAS;AACP,gBAAM+T,OAAO,GAAG,KAAKP,gBAAL,CAAsBxT,GAAtB,CAA0B,MAA1B,CAAhB;AACA+T,mBAAO,CAACC,IAAR,CAAa,KAAKC,QAAL,EAAb;AACD;;;iBAED,oBAAQ;AACN,mBAAO,IAAIC,qDAAJ,CAAc;AACnBC,yBAAW,EAAE,IAAID,uDAAJ,EADM;AAEnBE,mBAAK,EAAE,IAAIF,uDAAJ,EAFY;AAGnBG,uBAAS,EAAE,IAAIH,uDAAJ,EAHQ;AAInBI,oBAAM,EAAE,IAAIJ,uDAAJ;AAJW,aAAd,CAAP;AAMD;AAED;;;;;;iBAGA,sCAA0B;AAAA;;AACxB,iBAAKK,QAAL,GAAgB,IAAhB;AACA,iBAAKtH,mBAAL,CAAyBuH,WAAzB,CAAqC,EAArC,EAAyC5N,IAAzC,CAA8C,UAACC,GAAD,EAAQ;AACpD,qBAAI,CAAC4N,aAAL,GAAqB5N,GAAG,CAACuD,IAAzB,CADoD,CAEpD;;AACA,kBAAIvD,GAAG,CAACuD,IAAJ,IAAY,IAAhB,EAAsB;AACpB,oBAAIvD,GAAG,CAACuD,IAAJ,CAASlP,MAAT,GAAkB,CAAtB,EAAyB;AACvB2L,qBAAG,CAACuD,IAAJ,CAASvN,OAAT,CAAiB,UAAC6X,OAAD,EAAUrY,KAAV,EAAmB;AAClC,2BAAI,CAACsY,SAAL;;AACA,2BAAI,CAACC,SAAL,CAAehY,QAAf,CAAwBP,KAAxB,EAA+BiM,UAA/B,CAA0C;AACxC6L,iCAAW,EACTO,OAAO,CAACG,WAAR,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BtU,WAA9B,KACAkU,OAAO,CAACG,WAAR,CAAoBE,MAApB,CAA2B,CAA3B,EAA8BtU,WAA9B,EAHsC;AAIxC2T,2BAAK,EAAEM,OAAO,CAACN,KAJyB;AAKxCC,+BAAS,EAAEK,OAAO,CAAC3V;AALqB,qBAA1C;AAOD,mBATD;AAUD;AACF;AACF,aAjBD;AAkBD;AAED;;;;;;iBAGA,mCAAuB;AAAA;;AACrB,iBAAKkO,mBAAL,CAAyB+H,QAAzB,CAAkC,EAAlC,EAAsCpO,IAAtC,CAA2C,UAACC,GAAD,EAAQ;AACjD,qBAAI,CAACoO,WAAL,GAAmB,CAACpO,GAAG,CAACuD,IAAJ,CACjB8H,MADiB,CACV,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADU,EAEjB8Y,GAFiB,CAEb,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFa,EAGjBqW,IAHiB,EAApB;AAIA,qBAAI,CAACC,cAAL,GAAsB,CAACxO,GAAG,CAACuD,IAAJ,CACpB8H,MADoB,CACb,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADa,EAEpB8Y,GAFoB,CAEhB,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFgB,EAGpBqW,IAHoB,EAAvB;AAIA,qBAAI,CAACE,gBAAL,GAAwB,CAACzO,GAAG,CAACuD,IAAJ,CACtB8H,MADsB,CACf,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADe,EAEtB8Y,GAFsB,CAElB,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFkB,EAGtBqW,IAHsB,EAAzB;AAIA,qBAAI,CAACG,eAAL,GAAuB,CAAC1O,GAAG,CAACuD,IAAJ,CACrB8H,MADqB,CACd,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADc,EAErB8Y,GAFqB,CAEjB,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFiB,EAGrBqW,IAHqB,EAAxB;AAIA,qBAAI,CAACI,iBAAL,GAAyB,CAAC3O,GAAG,CAACuD,IAAJ,CACvB8H,MADuB,CAChB,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADgB,EAEvB8Y,GAFuB,CAEnB,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFmB,EAGvBqW,IAHuB,EAA1B;AAIA,qBAAI,CAACK,gBAAL,GAAwB,CAAC5O,GAAG,CAACuD,IAAJ,CACtB8H,MADsB,CACf,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADe,EAEtB8Y,GAFsB,CAElB,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFkB,EAGtBqW,IAHsB,EAAzB;AAIA,qBAAI,CAACM,kBAAL,GAA0B,CAAC7O,GAAG,CAACuD,IAAJ,CACxB8H,MADwB,CACjB,UAACgD,CAAD,EAAI7Y,KAAJ;AAAA,uBAAcA,KAAK,IAAI,CAAvB;AAAA,eADiB,EAExB8Y,GAFwB,CAEpB,UAACD,CAAD;AAAA,uBAAOA,CAAC,CAACnW,EAAT;AAAA,eAFoB,EAGxBqW,IAHwB,EAA3B;;AAIA,qBAAI,CAACO,mBAAL,CAAyB,OAAI,CAACV,WAA9B;;AACA,qBAAI,CAACW,wBAAL,CAA8B,OAAI,CAACP,cAAnC;;AACA,qBAAI,CAACQ,0BAAL,CAAgC,OAAI,CAACP,gBAArC;;AACA,qBAAI,CAACQ,yBAAL,CAA+B,OAAI,CAACP,eAApC;;AACA,qBAAI,CAACQ,2BAAL,CAAiC,OAAI,CAACP,iBAAtC;;AACA,qBAAI,CAACQ,0BAAL,CAAgC,OAAI,CAACP,gBAArC;;AACA,qBAAI,CAACQ,4BAAL,CAAkC,OAAI,CAACP,kBAAvC,EAnCiD,CAoCjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,aA5CD;AA6CD;AAED;;;;;;;iBAIA,6BAAoBT,WAApB,EAA+B;AAAA;;AAC7B,iBAAKhI,mBAAL,CAAyBiJ,cAAzB,CAAwC,EAAxC,EAA4CjB,WAA5C,EAAyDrO,IAAzD,CAA8D,UAACC,GAAD,EAAQ;AACpE,qBAAI,CAACsP,UAAL,GAAkB,KAAlB;AACA,qBAAI,CAACC,SAAL,GAAiBvP,GAAG,CAACuD,IAArB;AACD,aAHD;AAID;AAED;;;;;;;iBAIA,kCAAyBiL,cAAzB,EAAuC;AAAA;;AACrC,iBAAKgB,OAAL,GAAe,KAAf;AACA,iBAAKC,MAAL,GAAc,KAAd;AACA,iBAAKC,KAAL,GAAa,IAAb;AAEA,iBAAKtJ,mBAAL,CAAyBiJ,cAAzB,CAAwC,EAAxC,EAA4Cb,cAA5C,EAA4DzO,IAA5D,CAAiE,UAACC,GAAD,EAAQ;AACvE,qBAAI,CAACsP,UAAL,GAAkB,KAAlB;AACA,qBAAI,CAACK,iBAAL,GAAyB3P,GAAG,CAACuD,IAA7B;AACD,aAHD,EALqC,CASrC;AACD;AACD;;;;;;;iBAIA,oCAA2BkL,gBAA3B,EAA2C;AAAA;;AACzC,iBAAKiB,KAAL,GAAa,KAAb;AACA,iBAAKD,MAAL,GAAc,KAAd;AACA,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAKpJ,mBAAL,CACGiJ,cADH,CACkB,EADlB,EACsBZ,gBADtB,EAEG1O,IAFH,CAEQ,UAACC,GAAD,EAAQ;AACZ,qBAAI,CAACsP,UAAL,GAAkB,KAAlB;AACA,qBAAI,CAACM,mBAAL,GAA2B5P,GAAG,CAACuD,IAA/B;AACD,aALH,EAJyC,CAUvC;AACH;AACD;;;;;;;iBAIA,mCAA0BmL,eAA1B,EAAyC;AAAA;;AACvC,iBAAKc,OAAL,GAAe,KAAf;AACA,iBAAKE,KAAL,GAAa,KAAb;AACA,iBAAKD,MAAL,GAAc,IAAd;AAEA,iBAAKrJ,mBAAL,CAAyBiJ,cAAzB,CAAwC,EAAxC,EAA4CX,eAA5C,EAA6D3O,IAA7D,CAAkE,UAACC,GAAD,EAAQ;AACxE,qBAAI,CAACsP,UAAL,GAAkB,KAAlB;AACA,qBAAI,CAACO,kBAAL,GAA0B7P,GAAG,CAACuD,IAA9B;AACD,aAHD,EALuC,CASvC;AACD;AACD;;;;;;;iBAIA,qCAA4BoL,iBAA5B,EAA6C;AAAA;;AAC3C,iBAAKmB,KAAL,GAAa,KAAb;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA,iBAAKC,MAAL,GAAc,IAAd;AAEA,iBAAK5J,mBAAL,CACGiJ,cADH,CACkB,EADlB,EACsBV,iBADtB,EAEG5O,IAFH,CAEQ,UAACC,GAAD,EAAQ;AACZ,qBAAI,CAACsP,UAAL,GAAkB,KAAlB;AACA,qBAAI,CAACW,oBAAL,GAA4BjQ,GAAG,CAACuD,IAAhC;AACD,aALH;AAMD;AACD;;;;;;;iBAIA,oCAA2BqL,gBAA3B,EAA2C;AAAA;;AACzC,iBAAKkB,KAAL,GAAa,IAAb;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA,iBAAKC,MAAL,GAAc,KAAd;AAEA,iBAAK5J,mBAAL,CACGiJ,cADH,CACkB,EADlB,EACsBT,gBADtB,EAEG7O,IAFH,CAEQ,UAACC,GAAD,EAAQ;AACZ,qBAAI,CAACkQ,mBAAL,GAA2BlQ,GAAG,CAACuD,IAA/B;AACD,aAJH;AAKD;AAED;;;;;;;iBAIA,sCAA6BsL,kBAA7B,EAA+C;AAAA;;AAC7C,iBAAKiB,KAAL,GAAa,KAAb;AACA,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKC,MAAL,GAAc,KAAd;AAEA,iBAAK5J,mBAAL,CACGiJ,cADH,CACkB,EADlB,EACsBR,kBADtB,EAEG9O,IAFH,CAEQ,UAACC,GAAD,EAAQ;AACZ,qBAAI,CAACmQ,qBAAL,GAA6BnQ,GAAG,CAACuD,IAAjC;AACD,aAJH;AAKD;AAED;;;;;;iBAGA,iCAAqB;AAAA;;AACnB,gBAAIA,IAAI,GAAG;AACT,oCAAsB,KAAKgD,OADlB;AAET,wBAAU,KAAKI,WAAL,CAAiBzO;AAFlB,aAAX,CADmB,CAKnB;AACA;;AACA,iBAAKkO,mBAAL,CAAyBgK,gBAAzB,CAA0C7M,IAA1C,EAAgDxD,IAAhD,CAAqD,UAACC,GAAD,EAAQ;AAC3D,qBAAI,CAACb,MAAL,CAAYe,QAAZ,CAAqB,qCAA8B,OAAI,CAACqG,OAAnC,cAA8CvG,GAAG,CAACuD,IAAJ,CAASiD,qBAAvD,cAAgFxG,GAAG,CAACuD,IAAJ,CAASkD,kBAAzF,EAArB;AACD,aAFD;AAKD;AACD;;;;;;;iBAIA,4BAAmB4J,IAAnB,EAAuB;AACrB,iBAAKC,SAAL,GAAiBD,IAAjB;;AACA,gBAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,mBAAKE,UAAL,GAAkB,CAAlB;AACA,mBAAKC,QAAL,GAAgB,QAAhB;AACA,mBAAKD,UAAL,GAAkB,IAAI,KAAKE,KAA3B;AACD,aAJD,MAKK,IAAIJ,IAAI,IAAI,CAAZ,EAAe;AAClB,mBAAKE,UAAL,GAAkB,CAAlB;AACA,mBAAKC,QAAL,GAAgB,SAAhB;AACA,mBAAKD,UAAL,GAAkB,IAAI,KAAKE,KAA3B;AACD,aAJI,MAKA,IAAIJ,IAAI,IAAI,CAAZ,EAAe;AAClB,mBAAKE,UAAL,GAAkB,CAAlB;AACA,mBAAKC,QAAL,GAAgB,SAAhB;AACA,mBAAKD,UAAL,GAAkB,CAAC,MAAM,EAAN,GAAW,KAAKE,KAAjB,EAAwBC,OAAxB,CAAgC,CAAhC,CAAlB;AACD;AACF;AAED;;;;;;;;;iBAMA,uBAAcC,IAAd,EAAoB7d,KAApB,EAAoC8d,CAApC,EAAqC;AACnC,gBAAI9d,KAAJ,EAAW;AACT,kBAAI0C,KAAK,GAAG,KAAKqb,WAAL,CAAiBC,OAAjB,CAAyBH,IAAI,CAACnD,SAA9B,CAAZ;;AACA,kBAAIhY,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf,qBAAKqb,WAAL,CAAiB1D,IAAjB,CAAsBwD,IAAI,CAACnD,SAA3B;AACD;;AACD,kBAAI,KAAK8C,SAAL,IAAkB,CAAtB,EAAyB;AACvB,qBAAKG,KAAL,IAAcE,IAAI,CAACpD,KAAnB,CADuB,CAEvB;;AACA,qBAAKgD,UAAL,GAAkB,IAAI,KAAKE,KAA3B;AACD,eAJD,MAKK,IAAI,KAAKH,SAAL,IAAkB,CAAtB,EAAyB;AAC5B,qBAAKG,KAAL,IAAcE,IAAI,CAACpD,KAAnB;AACA,qBAAKgD,UAAL,GAAkB,CAAlB;AACA,qBAAKC,QAAL,GAAgB,SAAhB;AACA,qBAAKD,UAAL,GAAkB,IAAI,KAAKE,KAA3B;AACD,eALI,MAMA,IAAI,KAAKH,SAAL,IAAkB,CAAtB,EAAyB;AAC5B,qBAAKG,KAAL,IAAcE,IAAI,CAACpD,KAAnB;AACA,qBAAKgD,UAAL,GAAkB,CAAlB;AACA,qBAAKC,QAAL,GAAgB,SAAhB;AACA,qBAAKD,UAAL,GAAkB,CAAC,MAAM,EAAN,GAAW,KAAKE,KAAjB,EAAwBC,OAAxB,CAAgC,CAAhC,CAAlB;AACD,eALI,MAKE;AACL,qBAAKD,KAAL,IAAcE,IAAI,CAACpD,KAAnB;AACD;AACF,aAxBD,MAyBK,IAAI,CAACza,KAAL,EAAY;AACf,kBAAI0C,KAAK,GAAG,KAAKqb,WAAL,CAAiBC,OAAjB,CAAyBH,IAAI,CAACnD,SAA9B,CAAZ;;AACA,kBAAIhY,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,qBAAKqb,WAAL,CAAiBE,MAAjB,CAAwBvb,KAAxB,EAA+B,CAA/B;AACD;;AACD,kBAAI,KAAK8a,SAAL,IAAkB,CAAtB,EAAyB;AACvB,qBAAKG,KAAL,IAAcE,IAAI,CAACpD,KAAnB,CADuB,CAEvB;;AACA,qBAAKgD,UAAL,GAAkB,IAAI,KAAKE,KAA3B;AACD,eAJD,MAKK,IAAI,KAAKH,SAAL,IAAkB,CAAtB,EAAyB;AAC5B,qBAAKG,KAAL,IAAcE,IAAI,CAACpD,KAAnB;AACA,qBAAKgD,UAAL,GAAkB,CAAlB;AACA,qBAAKC,QAAL,GAAgB,SAAhB;AACA,qBAAKD,UAAL,GAAkB,IAAI,KAAKE,KAA3B;AACD,eALI,MAMA,IAAI,KAAKH,SAAL,IAAkB,CAAtB,EAAyB;AAC5B,qBAAKG,KAAL,IAAcE,IAAI,CAACpD,KAAnB;AACA,qBAAKgD,UAAL,GAAkB,CAAlB;AACA,qBAAKC,QAAL,GAAgB,SAAhB;AACA,qBAAKD,UAAL,GAAkB,CAAC,MAAM,EAAN,GAAW,KAAKE,KAAjB,EAAwBC,OAAxB,CAAgC,CAAhC,CAAlB;AACD,eALI,MAKE;AACL,qBAAKD,KAAL,IAAcE,IAAI,CAACpD,KAAnB;AACD;AACF;AAEF;AAED;;;;;;iBAGA,mCAAuB;AAAA;;AACrB,gBAAIhK,IAAI,GAAG;AACT,oCAAsB,KAAK+M,SADlB;AAET,wBAAU,KAAK3J,WAAL,CAAiBzO,EAFlB;AAGT,2BAAa,KAAK2Y,WAHT;AAIT,wBAAU,KAAKN;AAJN,aAAX,CADqB,CAOrB;;AACA,iBAAKnK,mBAAL,CAAyB4K,mBAAzB,CAA6CzN,IAA7C,EAAmDxD,IAAnD,CAAwD,UAACC,GAAD,EAAQ;AAC9D,qBAAI,CAACiR,WAAL,CAAiBC,aAAjB,CAA+BC,KAA/B,GAD8D,CAE9D;;;AACA,qBAAI,CAAChS,MAAL,CAAYe,QAAZ,CAAqB,qCAA8B,OAAI,CAACoQ,SAAnC,cAAgDtQ,GAAG,CAACuD,IAAJ,CAASiD,qBAAzD,cAAkFxG,GAAG,CAACuD,IAAJ,CAASkD,kBAA3F,EAArB;AACD,aAJD;AAKD;;;iBACD,oBAAQ;AACN,iBAAKgG,SAAL,CAAe2E,IAAf;AAED;;;;;;;yBAzYU5E,wBAAqBzG;AAAA;;;cAArByG;AAAqBlS;AAAA+W;AAAA;;;;;;;;;;;;;;;ADblCtL;;AACIA;;AAGIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAA2BA;;AAAeA;;AAC9CA;;AACAA;;AACIA;;AAAiEA;AAAA,qBAASjL,cAAT;AAAmB,aAAnB;;AAAqBiL;;AAAIA;;AAC3FA;;AACPA;;AACJA;;AAGAA;;AACIA;;AACIA;;AACIA;;AAAyCA;;AAAMA;;AAC/CA;;AAAgBA;;AAA4DA;;AAC5EA;;AACIA;;AAAQA;;AAA8BA;;AAAMA;;AAChDA;;AACAA;;AAAgEA;;AAAgBA;;AACpFA;;AACAA;;AACAA;;AACIA;;AAA2BA;;AAA8BA;;AACzDA;;AACIA;;AAEJA;;AACAA;;AAQJA;;AACJA;;AACJA;;AAGAA;;AAEIA;;AACIA;;AACIA;;AAAyCA;;AAAQA;;AACjDA;;AAAgBA;;AAAoEA;;AACpFA;;AACIA;;AAEIA;;AACIA;;AACIA;;AAC6BA;AAAA;AAAA;;AAD7BA;;AAEAA;;AACIA;;AAAgBA;AAAA,qBAASjL,6BAAyB,CAAzB,CAAT;AAAoC,aAApC;;AACZiL;;AAAmCA;;AAAUA;;AAAOA;;AACpDA;;AACIA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAC6BA;AAAA;AAAA;;AAD7BA;;AAEAA;;AACIA;;AAAgBA;AAAA,qBAASjL,+BAA2B,CAA3B,CAAT;AAAsC,aAAtC;;AACZiL;;AACmDA;;AAAKA;;AAAOA;;AAAMA;;AAAIA;;AAAOA;;AAChFA;;AAA2DA;;AACjDA;;AACdA;;AACJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAC6BA;AAAA;AAAA;;AAD7BA;;AAEAA;;AACIA;;AAAgBA;AAAA,qBAASjL,8BAA0B,CAA1B,CAAT;AAAqC,aAArC;;AACZiL;;AACmDA;;AAAKA;;AAAOA;;AAAMA;;AAAIA;;AAAOA;;AAChFA;;AAA0DA;;AAClDA;;AACZA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACAA;;AAAgCA;AAAA,qBAASjL,2BAAT;AAAgC,aAAhC;;AAAkCiL;;AAASA;;AAC/EA;;AAEAA;;AAEAA;;AACIA;;AAA2BA;;AAA0BA;;AACrDA;;AACIA;;AAYAA;;AAWAA;;AAWJA;;AAEJA;;AAEJA;;AACJA;;AAGAA;;AACIA;;AACIA;;AACIA;;AAAyCA;;AAAOA;;AAChDA;;AACIA;;AACJA;;AACAA;;AACIA;;AAEIA;;AAA2BA;;AAAWA;;AAA8BA;;AAAMA;;AAAQA;;AACtFA;;AACJA;;AACAA;;AAC8CA;;AAASA;;AAC3DA;;AACAA;;AACAA;;AACIA;;AAA2BA;;AAA4BA;;AACvDA;;AACIA;;AACAA;;AAEAA;;AACAA;;AAIJA;;AAEJA;;AACJA;;AACJA;;AAMJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAEJA;;AACAA;;AACIA;;AACIA;;AAGIA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqCA;AAAA,qBAASjL,uBAAmB,CAAnB,CAAT;AAA8B,aAA9B;;AACjCiL;;AAAoBA;;AAAIA;;AACxBA;;AAAOA;;AAAkDA;;AAAGA;;AAAOA;;AAE/DA;;AACAA;;AAAQA;;AAChBA;;AACJA;;AACAA;;AACIA;;AAAqCA;AAAA,qBAASjL,uBAAmB,CAAnB,CAAT;AAA8B,aAA9B;;AACjCiL;;AAAoBA;;AAAIA;;AACxBA;;AAAOA;;AAAkDA;;AAAGA;;AAAOA;;AAE/DA;;AACAA;;AAASA;;AACjBA;;AACJA;;AACAA;;AACIA;;AAAqCA;AAAA,qBAASjL,uBAAmB,CAAnB,CAAT;AAA8B,aAA9B;;AACjCiL;;AAAoBA;;AAAIA;;AACxBA;;AAAOA;;AAAkDA;;AAAGA;;AAAOA;;AAE/DA;;AACAA;;AAASA;;AACjBA;;AACJA;;AACJA;;AAeAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAmCA;;AAACA;;AACpCA;;AAAmCA;;AAAQA;;AAE3CA;;AAAoCA;;AAAKA;;AACzCA;;AAAoCA;;AAAMA;;AAC9CA;;AACJA;;AACAA;;AACIA;;AAsBJA;;AACAA;;AACIA;;AACIA;;AACAA;;AACAA;;AAAwCA;;AAAKA;;AAC7CA;;AACIA;;AACJA;;AACJA;;AACAA;;AACIA;;AAAuCA;;AAAYA;;AACnDA;;AACIA;;AACJA;;AACAA;;AAAuCA;;AAAWA;;AAClDA;;AACIA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACJA;;AACAA;;AAA4DA;AAAA,qBAASjL,6BAAT;AAAkC,aAAlC;;AACvBiL;;AAAGA;;AAC5CA;;AACJA;;AACJA;;AACJA;;;;AApS2EA;;AAAAA;;AAGnBA;;AAAAA;;AAyBaA;;AAAAA;;AAeAA;;AAAAA;;AAeAA;;AAAAA;;AAqBnCA;;AAAAA;;AAYAA;;AAAAA;;AAWAA;;AAAAA;;AAwCyCA;;AAAAA;;AAGIA;;AAAAA;;AA6ErDA;;AAAAA;;AAc+BA;;AAAAA;;AA4BbA;;AAAAA;;AAMAA;;AAAAA;;AAIAA;;AAAAA;;AAcxBA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UExTPuL;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAA0B;;;cAA1BA;AAA0BhX;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ACPvC2K;;AACIA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACJA;;AACJA;;AACAA;;AACIA;;AAEJA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAGA;;AAC8DA;;AACrEA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAOA;;AAC5DA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAKuFA;;AAC9FA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAkCA;;AACvFA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAEwFA;;AAC/FA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAmCA;;AACxFA;;AACJA;;AACAA;;AACIA;;AAAGA;;AACgFA;;AACvFA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAuBA;;AAC5EA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAYmCA;;AAC1CA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAqDA;;AAAyBA;;AAC9EA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAUwCA;;AAC/CA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAqDA;;AAAcA;;AACnEA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAMMA;;AACbA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAWA;;AAChEA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAAOA;;AAC1FA;;AACAA;;AACIA;;AAAGA;;AAAsEA;;AAC7EA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAASA;;AAC5FA;;AACAA;;AACIA;;AAAIA;;AAI8CA;;AACtDA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAAQA;;AAC3FA;;AACAA;;AACIA;;AAAGA;;AAC6CA;;AACpDA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAASA;;AAC5FA;;AACAA;;AACIA;;AAAGA;;AAEoCA;;AAC3CA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAAIA;;AACvFA;;AACAA;;AACIA;;AAAIA;;AAGkCA;;AAC1CA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AACtEA;;AACbA;;AACAA;;AACIA;;AAAIA;;AAK0EA;;AAClFA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAASA;;AAC5FA;;AACAA;;AACIA;;AAAIA;;AAC0CA;;AAClDA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAAKA;;AACxFA;;AACAA;;AACIA;;AAAGA;;AACoDA;;AAC3DA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAAUA;;AAC7FA;;AACAA;;AACIA;;AAAGA;;AAG8DA;;AACrEA;;AACJA;;AACAA;;AACIA;;AACIA;;AAA+EA;;AAASA;;AAC5FA;;AACAA;;AACIA;;AAAIA;;AAA4EA;;AACpFA;;AACJA;;AAEJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAkBA;;AACvEA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAqBA;;AAC1EA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAAiDA;;AACpDA;;AAAGA;;AACyBA;;AAC5BA;;AAAGA;;AACsBA;;AAC7BA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAA6BA;;AAClFA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAEUA;;AACbA;;AAAGA;;AAK2EA;;AAElFA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AACzBA;;AAC5BA;;AACJA;;AACAA;;AACIA;;AACIA;;AAWJA;;AACAA;;AACIA;;AAMJA;;AAGJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAoCA;;AACzFA;;AACJA;;AACAA;;AACIA;;AACIA;;AAIJA;;AAEJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAoBA;;AACzEA;;AACJA;;AACAA;;AACIA;;AACIA;;AAEJA;;AAEJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAOA;;AAC5DA;;AACJA;;AACAA;;AACIA;;AACIA;;AAIJA;;AAEJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAqDA;;AAAMA;;AAC3DA;;AACJA;;AACAA;;AACIA;;AACIA;;AAGJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAA4CA;;AACjGA;;AACJA;;AACAA;;AACIA;;AACIA;;AASJA;;AACAA;;AACIA;;AAUJA;;AACAA;;AACIA;;AAGJA;;AACJA;;AACJA;;AAEAA;;AACIA;;AACIA;;AAAqDA;;AAAuBA;;AAC5EA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAOHA;;AACAA;;AACIA;;AAMJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AACzCA;;AACZA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAEHA;;AACAA;;AAAGA;;AAEHA;;AACAA;;AAAGA;;AAEHA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAA2BA;;AAChFA;;AACJA;;AACAA;;AACIA;;AAAGA;;AAEHA;;AACAA;;AAAGA;;AAA4DA;;AAC/DA;;AAAGA;;AAAsFA;;AAC7FA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAqDA;;AAAuBA;;AAC5EA;;AACJA;;AACAA;;AACIA;;AAAGA;;AACkBA;;AACzBA;;AACJA;;AACJA;;AACJA;;AAEJA;;AACAA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnXoDzG;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AAPJA;;AAEIA;;AAGAA;;AAGJA;;;;;;AANgBA;;AAAAA;;AAGAA;;AAAAA;;;;;;AAWZA;;AACIA;;AACJA;;;;;;AAJJA;;AAEIA;;AAGJA;;;;;;AAHgBA;;AAAAA;;;;;;;;;;UCpFnDyS;AAIX,mDAAoBvS,WAApB,EAAsDC,YAAtD,EAAoGC,YAApG,EAAuIC,MAAvI,EACUC,aADV,EACsC;AAAA;;AADlB;AAAkC;AAA8C;AAAmC;AAC7H;AAAiC;;;;iBAE3C,oBAAQ;AACN,iBAAKoS,aAAL,GAAqB,KAAKxS,WAAL,CAAiBM,KAAjB,CAAuB;AAC7CC,wBAAU,EAAE,CAAC,EAAD,EAAI,CAACC,+DAAD,EAAqBA,4DAArB,CAAJ,CADiC;AAE1CC,iBAAG,EAAC,CAAC,EAAD,EAAI,CAACD,+DAAD,CAAJ;AAFsC,aAAvB,CAArB;AAID;;;eACD,eAAK;AACH,mBAAO,KAAKgS,aAAL,CAAmBzb,QAA1B;AACD;;;iBACD,8BAAkB;AAAA;;AAChB,iBAAK4J,SAAL,GAAe,IAAf;;AACA,gBAAG,KAAK6R,aAAL,CAAmB5R,OAAtB,EAA8B;AAC5B,qBAAO,KAAP;AACD,aAFD,MAGI;AACF,kBAAIC,IAAI,GAAC;AACP,yBAAU,KAAK2R,aAAL,CAAmBzb,QAAnB,CAA4BwJ,UAA5B,CAAuC/L,KAD1C;AAEP,uBAAQ,KAAKge,aAAL,CAAmBzb,QAAnB,CAA4B0J,GAA5B,CAAgCjM;AAFjC,eAAT;AAKA,mBAAK0L,YAAL,CAAkBuS,eAAlB,CAAkC5R,IAAlC,EAAwCE,IAAxC,CAA6C,UAACC,GAAD,EAAO;AAClD,uBAAI,CAACf,YAAL,CAAkBgB,YAAlB,CAA+B,2BAA/B;;AACA,uBAAI,CAACd,MAAL,CAAYe,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD,eAHD,EAIA,UAACC,GAAD,EAAQ;AAEN,oBAAGA,GAAG,CAACC,KAAJ,CAAUC,MAAb,EAAoB;AAClB,yBAAI,CAACpB,YAAL,CAAkBqB,iBAAlB,CAAoC,OAAI,CAAClB,aAAL,CAAmB7L,SAAnB,CAA6B4M,GAAG,CAACC,KAAJ,CAAUG,aAAvC,CAApC;AACD,iBAFD,MAGI;AACF,yBAAI,CAACtB,YAAL,CAAkBqB,iBAAlB,CAAoC,uBAApC;AACD;AAEF,eAbD;AAeD;AAEF;;;iBACD,oBAAWxN,KAAX,EAAgB;AACd,gBAAM0N,QAAQ,GAAI1N,KAAK,CAAC2N,KAAP,GAAgB3N,KAAK,CAAC2N,KAAtB,GAA8B3N,KAAK,CAAC+F,OAArD;;AACA,gBAAI2H,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,CAAJ,EAAuD;AACrD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AAED;;;;;;;yBApDU+Q,mCAAgCzS;AAAA;;;cAAhCyS;AAAgCjX;AAAAG;AAAAC;AAAAC;AAAAC;AAAA;ADZ7CkE;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAQIA;;AACIA;;AAEIA;;AACIA;;AAEJA;;AACAA;;AACAA;;AAAIA;;AACJA;;AACIA;;AAA8CA;;AAAIA;;AACtBA;;AAAIA;;AACpCA;;AAEAA;;AAAwCA;;AAAWA;;AACvDA;;AACJA;;AAmCJA;;AACAA;;AACIA;;AACIA;;AACIA;;AAA2BA;;AAAeA;;AAC1CA;;AAAiBA;;AAAiDA;;AACtEA;;AACAA;;AACIA;;AACIA;;AACIA;;AAIAA;;AAUAA;;AAAiCA;AAAA,qBAAYhE,sBAAZ;AAA8B,aAA9B;;AAAjCgE;;AAIAA;;AASAA;;AACkBA;AAAA,qBAAShE,wBAAT;AAA6B,aAA7B;;AAA+BgE;;AAAUA;;AAC/DA;;AAAOA;;AAAmDA;;AAC7CA;;AAAkCA;;AAAMA;;AAAOA;;AAChEA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AA1CkDA;;AAAAA;;AAGEA;;AAAAA;;AAGCA;;AAAAA;;AAWDA;;AAAAA;;AAGCA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UExFxC4S;AAEX,+BAAmBvL,UAAnB,EAAyC;AAAA;;AAAtB;AAA2B;;;;iBAE9C,qBAAY5C,IAAZ,EAAoB;AAAA;;AAClB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,uFAA3B,EAA2D,MAA3D,EAAmElc,SAAnE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD,YACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA,wBAAeoD,IAAf,EAAsB;AAAA;;AACpB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,sFAA3B,EAAwD,MAAxD,EAAgElc,SAAhE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAOD;;;iBACD,yBAAgBoD,IAAhB,EAAuB;AAAA;;AACrB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,uFAA3B,EAAyD,MAAzD,EAAiElc,SAAjE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;iBACD,8BAAqBoD,IAArB,EAA4B;AAAA;;AAC1B,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,8FAA3B,EAAgE,MAAhE,EAAwElc,SAAxE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;;;;;yBA5CUuR,eAAY5S;AAAA;;;eAAZ4S;AAAYM,iBAAZN,aAAY;AAAAO,oBAFX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGDC;AAET,mCAAmB/L,UAAnB,EAAyC;AAAA;;AAAtB;AAA2B;;;;iBAC9C,yBAAgB5C,IAAhB,EAAwB;AAAA;;AACtB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,qFAA3B,EAAyD,MAAzD,EAAiElc,SAAjE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;;;;;yBAVQ+R,mBAAgBpT;AAAA;;;eAAhBoT;AAAgBF,iBAAhBE,iBAAgB;AAAAD,oBAHf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEDE;AAEX,oCAAmBhM,UAAnB,EAAyC;AAAA;;AAAtB;AAA2B;;;;iBAE9C,0BAAiB5C,IAAjB,EAAyB;AAAA;;AACvB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2B6O,gFAA3B,EAA2D,MAA3D,EAAmEvc,SAAnE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;iBACD,yBAAgBoD,IAAhB,EAAwB;AAAA;;AACtB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2B6O,+EAA3B,EAAyD,MAAzD,EAAiEvc,SAAjE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;iBACD,mCAA0BoD,IAA1B,EAAmC8O,OAAnC,EAA0C;AAAA;;AACxC,mBAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2B6O,oFAAgCC,OAA3D,EAAoE,KAApE,EAA2Exc,SAA3E,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;;;;;yBA3BUgS,oBAAiBrT;AAAA;;;eAAjBqT;AAAiBH,iBAAjBG,kBAAiB;AAAAF,oBAFhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEDK;AAEX,gCAAmBnM,UAAnB,EAAyC;AAAA;;AAAtB;AAA2B;;;;iBAC9C,6BAAoB5C,IAApB,EAA4B;AAAA;;AAC1B,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,sFAA3B,EAA0D,MAA1D,EAAkElc,SAAlE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;iBACD,+BAAsBoD,IAAtB,EAA8B;AAAA;;AAC5B,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,wFAA3B,EAA4D,MAA5D,EAAoElc,SAApE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;iBAED,6BAAoBoD,IAApB,EAA2B;AAAA;;AACzB,mBAAO,IAAIoO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,2FAA3B,EAA8D,KAA9D,EAAqElc,SAArE,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;iBAED,+BAAsBoD,IAAtB,EAA8B3P,IAA9B,EAAyC;AAAA;;AACvC,mBAAO,IAAI+d,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,qBAAI,CAAC1L,UAAL,CAAgB2L,IAAhB,CAAqBvO,IAArB,EAA2BwO,gGAAqC,UAArC,GAAkDne,IAA7E,EAAoF,KAApF,EAA2FiC,SAA3F,CACE,UAACmK,GAAD;AAAA,uBAAS4R,OAAO,CAAC5R,GAAD,CAAhB;AAAA,eADF,EAEE,UAACG,GAAD;AAAA,uBAAS0R,MAAM,CAAC1R,GAAD,CAAf;AAAA,eAFF;AAID,aALM,CAAP;AAMD;;;;;;;yBApCUmS,gBAAaxT;AAAA;;;eAAbwT;AAAaN,iBAAbM,cAAa;AAAAL,oBAFZ;;;;","names":["i0","_r6","ctx_r1","i_r3","NgOtpInputComponent_div_0_input_1_Template","ctx_r0","KeyboardUtil","event","ifKey","keys","keysToCheck","split","some","k","key","KeysPipe","transform","value","Object","ɵfac","ɵpipe","name","type","pure","Pipe","args","NgOtpInputComponent","constructor","keysPipe","config","length","onInputChange","EventEmitter","inputControls","Array","componentKey","Math","random","toString","substring","Date","getTime","_a","_b","isPasswordInput","allowNumbersOnly","ngOnInit","otpForm","FormGroup","index","addControl","getControlName","FormControl","valueChanges","subscribe","v","controls","forEach","val","setValue","rebuildValue","ngAfterViewInit","disableAutoFocus","containerItem","document","getElementById","ele","getElementsByClassName","focus","idx","onKeyDown","$event","inputIdx","ifSpacebar","preventDefault","onInput","newVal","currentVal","target","validateNumber","stopPropagation","onKeyUp","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","ifBackspaceOrDelete","ifValidKeyCode","test","id","eleId","focusTo","setSelectionRange","setTimeout","inp","isMobile","navigator","userAgent","allowKeyCodes","includes","keyCode","isNaN","reset","replace","from","c","get","indexOfElementToFocus","ctrlVal","isLengthExceed","isCaseTransformEnabled","letterCase","toLocaleLowerCase","transformedVal","toUpperCase","toLowerCase","formCtrl","emit","handlePaste","e","clipboardData","window","pastedData","getData","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","NgOtpInputComponent_div_0_Template","ctx","directives","i2","i3","pipes","styles","Component","selector","templateUrl","styleUrls","Input","Output","NgOtpInputModule","ɵmod","ɵinj","providers","imports","CommonModule","FormsModule","ReactiveFormsModule","NgModule","declarations","exports","Config","routes","path","component","_role_selection_role_selection_role_selection_component__WEBPACK_IMPORTED_MODULE_16__","_login_login_component__WEBPACK_IMPORTED_MODULE_1__","_logout_logout_component__WEBPACK_IMPORTED_MODULE_2__","_signup_signup_component__WEBPACK_IMPORTED_MODULE_7__","_term_condition_page_term_condition_page_component__WEBPACK_IMPORTED_MODULE_13__","_select_feature_subscription_select_feature_subscription_component__WEBPACK_IMPORTED_MODULE_6__","_forgot_password_forgot_password_component__WEBPACK_IMPORTED_MODULE_0__","_verify_otp_forgot_password_verify_otp_forgot_password_component__WEBPACK_IMPORTED_MODULE_14__","_change_forgot_password_change_forgot_password_component__WEBPACK_IMPORTED_MODULE_15__","_subscription_subscription_component__WEBPACK_IMPORTED_MODULE_8__","_subcription_end_subcription_end_component__WEBPACK_IMPORTED_MODULE_12__","_payment_subscription_payment_subscription_component__WEBPACK_IMPORTED_MODULE_4__","_role_signup_role_signup_component__WEBPACK_IMPORTED_MODULE_5__","_print_receipt_print_receipt_component__WEBPACK_IMPORTED_MODULE_11__","_password_reset_password_reset_component__WEBPACK_IMPORTED_MODULE_3__","_payment_success_payment_success_component__WEBPACK_IMPORTED_MODULE_9__","_payment_failure_payment_failure_component__WEBPACK_IMPORTED_MODULE_10__","redirectTo","pathMatch","AuthRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_18__","AuthModule","_angular_common__WEBPACK_IMPORTED_MODULE_18__","_auth_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_19__","_angular_common_http__WEBPACK_IMPORTED_MODULE_20__","ngx_spinner__WEBPACK_IMPORTED_MODULE_21__","_material_module__WEBPACK_IMPORTED_MODULE_13__","ng_otp_input__WEBPACK_IMPORTED_MODULE_22__","_signup_signup_component__WEBPACK_IMPORTED_MODULE_2__","_logout_logout_component__WEBPACK_IMPORTED_MODULE_4__","_subscription_subscription_component__WEBPACK_IMPORTED_MODULE_7__","_payment_subscription_payment_subscription_component__WEBPACK_IMPORTED_MODULE_8__","_forgot_password_forgot_password_component__WEBPACK_IMPORTED_MODULE_5__","_role_signup_role_signup_component__WEBPACK_IMPORTED_MODULE_6__","_subcription_end_subcription_end_component__WEBPACK_IMPORTED_MODULE_11__","_term_condition_page_term_condition_page_component__WEBPACK_IMPORTED_MODULE_12__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ChangeForgotPasswordComponent","formBuilder","toastService","loginService","router","titleCasePipe","ChangeOTPPasswordForm","group","forgetpass","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","otp","newPassword","submitted","invalid","body","changeForgetPassword","then","res","openSnackBar","navigate","err","error","expose","openErrorSnackBar","error_message","charCode","which","_angular_core__WEBPACK_IMPORTED_MODULE_3__","ForgotPasswordComponent","placeholder","inputStyles","width","height","forgetPassForm","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","verifyPasswordFrom","email","confirmPassword","validator","a","console","log","patchValue","forgotpassword","verifyShow","verifyPasswordFromControl","errors","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ctx_r9","LoginComponent","fb","authService","otpVerify","http","roleSignupService","spinner","route","username","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","password","mobileOtp","emailotp","queryParams","CustLogintoggle","params","logout","Custtoggle","visible","changeType","user","userName","isVerifyOtp","data","clientForm","isLoginBtn","login","planExpiryDate","planExpiresOn","showSubscriptionPage","todaysDate","setDate","getDate","dateDiff","UserDatacomplte","flag","isSubscribed","hide","status","successful","sendRoleUsersOtp","mobile","custForm","post","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","isOtpField","mobileotp","custLogin","otpClientData","verifyCLientOtp","d","postSendOtp","resend","messageSuccess","LogoutComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","PasswordResetComponent","PaymentFailureComponent","payumoneyPaymentService","getPayment","postPayment","getPaymentSuccess","postPaymentSuccess","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","PaymentSubscriptionComponent","paymentService","httpClient","subscriptionService","src_app_helpers_constant__WEBPACK_IMPORTED_MODULE_0__","paramMap","basicId","subscriptionPaymentId","userSubscriptionId","getAllSubscriptionPlans","currentUser","JSON","parse","localStorage","getItem","planName","totalAmount","obj","txnId","uuid__WEBPACK_IMPORTED_MODULE_7__","productinfo","amount","surl","src_environments_environment__WEBPACK_IMPORTED_MODULE_1__","furl","phone","hash","udf1","String","udf2","udf3","udf4","udf5","firstName","lastName","submitObj","setHash","getPaymentHash","getPlansById","planArray","description","total_amount","validity","features","setPaymentFormData","response","url","location","href","PaymentSuccessComponent","open","PrintReceiptComponent","printContents","innerHTML","originalContents","print","RoleSelectionComponent","_angular_core__WEBPACK_IMPORTED_MODULE_4__","RoleSignupComponent","getRoleUserByEmailId","roleVerifyForm","acceptTerms","roleOtpData","ConfirmPassword","getUserBasedRoleByEmailId","showClientOtp","hide2","verifyRoleUsers","SelectFeatureSubscriptionComponent","_angular_core__WEBPACK_IMPORTED_MODULE_7__","SignupComponent","signupService","getAllCountry","registerForm","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","countryId","customerRegisterForm","otpCustomerData","filteredOptions","pipe","CountryList","_filter","slice","filterValue","filter","option","countryName","getAllCountryClient","AllCountry","showPassword","showAlert","clearValidators","req","countryID","registerClientUsers","errorMesage","registerCustomerUsers","showCustomerOtp","afterRegister","optionid","serachkey","SearchCountryByNameId","SubcriptionEndComponent","SubscriptionComponent","_location","getAllSubscriptionFeatures","subscriptionForm","Rows","array","basicSubscriptionForm","basic90days","basic180days","basic365days","content","push","initRows","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","featureName","price","featureId","active","isActive","getFeatures","featuresArray","element","addNewRow","formArray","displayName","charAt","substr","getPlans","trialPlanId","x","map","join","basicPlanIdTwo","basicPlanIdThree","basicPlanIdFour","premiumPlanIdFive","premiumPlanIdSix","premiumPlanIdSeven","getTrialPlanFetaure","getBasicPlanFetaureIdTwo","getBasicPlanFetaureIdThree","getBasicPlanFetaureIdFour","getPremiumPlanFetaureIdFive","getPremiumPlanFetaureIdSix","getPremiumPlanFetaureIdSeven","getFetaureById","isShowPlan","trailPlan","idThree","idFour","idTwo","BasicPlanArrayTwo","BasicPlanArrayThree","BasicPlanArrayFour","idSix","idSeven","idFive","premiumPlanArrayFive","premiumPlanArraySix","premiumPlanArraySeven","basicSubsription","days","premiumId","grandTotal","planDays","total","toFixed","item","i","pseudoArray","indexOf","splice","premiumSubscription","closebutton","nativeElement","click","back","viewQuery","TermConditionPageComponent","VerifyOtpForgotPasswordComponent","VerifyOTPForm","verifyforgetOtp","LoginService","Promise","resolve","reject","call","src_app_helpers_url_constants__WEBPACK_IMPORTED_MODULE_0__","factory","providedIn","OtpVerifyService","RoleSignupService","_helpers_url_constants__WEBPACK_IMPORTED_MODULE_0__","emailId","SignupService"],"sources":["webpack:///node_modules/ng-otp-input/fesm2015/ng-otp-input.js","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/change-forgot-password/change-forgot-password.component.html","webpack:///src/app/auth/change-forgot-password/change-forgot-password.component.ts","webpack:///src/app/auth/forgot-password/forgot-password.component.html","webpack:///src/app/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/logout/logout.component.ts","webpack:///src/app/auth/logout/logout.component.html","webpack:///src/app/auth/password-reset/password-reset.component.ts","webpack:///src/app/auth/password-reset/password-reset.component.html","webpack:///src/app/auth/payment-failure/payment-failure.component.ts","webpack:///src/app/auth/payment-failure/payment-failure.component.html","webpack:///src/app/auth/payment-subscription/payment-subscription.component.html","webpack:///src/app/auth/payment-subscription/payment-subscription.component.ts","webpack:///src/app/auth/payment-success/payment-success.component.html","webpack:///src/app/auth/payment-success/payment-success.component.ts","webpack:///src/app/auth/print-receipt/print-receipt.component.ts","webpack:///src/app/auth/print-receipt/print-receipt.component.html","webpack:///src/app/auth/role-selection/role-selection/role-selection.component.ts","webpack:///src/app/auth/role-selection/role-selection/role-selection.component.html","webpack:///src/app/auth/role-signup/role-signup.component.html","webpack:///src/app/auth/role-signup/role-signup.component.ts","webpack:///src/app/auth/select-feature-subscription/select-feature-subscription.component.ts","webpack:///src/app/auth/select-feature-subscription/select-feature-subscription.component.html","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/subcription-end/subcription-end.component.ts","webpack:///src/app/auth/subcription-end/subcription-end.component.html","webpack:///src/app/auth/subscription/subscription.component.html","webpack:///src/app/auth/subscription/subscription.component.ts","webpack:///src/app/auth/term-condition-page/term-condition-page.component.ts","webpack:///src/app/auth/term-condition-page/term-condition-page.component.html","webpack:///src/app/auth/verify-otp-forgot-password/verify-otp-forgot-password.component.html","webpack:///src/app/auth/verify-otp-forgot-password/verify-otp-forgot-password.component.ts","webpack:///src/app/core/services/login.service.ts","webpack:///src/app/core/services/otp-verify.service.ts","webpack:///src/app/core/services/role-signup.service.ts","webpack:///src/app/core/services/signup.service.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass KeyboardUtil {\r\n    static ifBackspaceOrDelete(event) {\r\n        return this.ifKey(event, 'Backspace;Delete;Del');\r\n    }\r\n    static ifRightArrow(event) {\r\n        return this.ifKey(event, 'ArrowRight;Right');\r\n    }\r\n    static ifLeftArrow(event) {\r\n        return this.ifKey(event, 'ArrowLeft;Left');\r\n    }\r\n    static ifSpacebar(event) {\r\n        return this.ifKey(event, 'Spacebar; '); //don't remove the space after ; as this will check for space key\r\n    }\r\n    static ifKey(event, keys) {\r\n        let keysToCheck = keys.split(';');\r\n        return keysToCheck.some(k => k === event.key);\r\n    }\r\n}\n\nclass KeysPipe {\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\r\n/** @nocollapse */ KeysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\n/** @nocollapse */ KeysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, name: \"keys\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'keys'\r\n                }]\r\n        }] });\n\nclass NgOtpInputComponent {\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    get inputType() {\r\n        var _a, _b;\r\n        return ((_a = this.config) === null || _a === void 0 ? void 0 : _a.isPasswordInput)\r\n            ? 'password'\r\n            : ((_b = this.config) === null || _b === void 0 ? void 0 : _b.allowNumbersOnly)\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.otpForm.valueChanges.subscribe((v) => {\r\n            this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n                var val = this.otpForm.controls[k].value;\r\n                if (val && val.length > 1) {\r\n                    if (val.length >= this.config.length) {\r\n                        this.setValue(val);\r\n                    }\r\n                    else {\r\n                        this.rebuildValue();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    onKeyDown($event, inputIdx) {\r\n        if (KeyboardUtil.ifSpacebar($event)) {\r\n            $event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n    onInput($event) {\r\n        let newVal = this.currentVal ? `${this.currentVal}${$event.target.value}` : $event.target.value;\r\n        if (this.config.allowNumbersOnly && !this.validateNumber(newVal)) {\r\n            $event.target.value = '';\r\n            $event.stopPropagation();\r\n            $event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n    onKeyUp($event, inputIdx) {\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (KeyboardUtil.ifRightArrow($event)) {\r\n            $event.preventDefault();\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (KeyboardUtil.ifLeftArrow($event)) {\r\n            $event.preventDefault();\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        if (KeyboardUtil.ifBackspaceOrDelete($event) && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidKeyCode($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    validateNumber(val) {\r\n        return val && /^\\d*\\.?\\d*$/.test(val);\r\n    }\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout(() => {\r\n                ele.setSelectionRange(0, 1);\r\n            }, 0);\r\n        }\r\n    }\r\n    ifValidKeyCode(event) {\r\n        const inp = event.key;\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)));\r\n    }\r\n    focusTo(eleId) {\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        });\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    rebuildValue() {\r\n        var _a;\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                let ctrlVal = this.otpForm.controls[k].value;\r\n                let isLengthExceed = ctrlVal.length > 1;\r\n                let isCaseTransformEnabled = !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase() == 'lower');\r\n                ctrlVal = ctrlVal[0];\r\n                let transformedVal = isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase() : ctrlVal;\r\n                if (isCaseTransformEnabled && transformedVal == ctrlVal) {\r\n                    isCaseTransformEnabled = false;\r\n                }\r\n                else {\r\n                    ctrlVal = transformedVal;\r\n                }\r\n                val += ctrlVal;\r\n                if (isLengthExceed || isCaseTransformEnabled) {\r\n                    this.otpForm.controls[k].setValue(ctrlVal);\r\n                }\r\n            }\r\n        });\r\n        if ((_a = this.formCtrl) === null || _a === void 0 ? void 0 : _a.setValue) {\r\n            this.formCtrl.setValue(val);\r\n        }\r\n        this.onInputChange.emit(val);\r\n        this.currentVal = val;\r\n    }\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData || (this.config.allowNumbersOnly && !this.validateNumber(pastedData))) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\r\n/** @nocollapse */ NgOtpInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputComponent, deps: [{ token: KeysPipe }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ NgOtpInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NgOtpInputComponent, selector: \"ng-otp-input\", inputs: { config: \"config\", formCtrl: \"formCtrl\" }, outputs: { onInputChange: \"onInputChange\" }, ngImport: i0, template: \"<div class=\\\"ng-otp-input-wrapper wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input (paste)=\\\"handlePaste($event)\\\" [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\"  [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [ngStyle]=\\\"config.inputStyles\\\" \\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"one-time-code\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" #inp id=\\\"otp_{{i}}_{{componentKey}}\\\" \\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\" (input)=\\\"onInput($event)\\\" (keydown)=\\\"onKeyDown($event,i)\\\" >\\r\\n</div>\", styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.ng-otp-input-wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], pipes: { \"keys\": KeysPipe } });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    // tslint:disable-next-line: component-selector\r\n                    selector: 'ng-otp-input',\r\n                    templateUrl: './ng-otp-input.component.html',\r\n                    styleUrls: ['./ng-otp-input.component.scss']\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: KeysPipe }]; }, propDecorators: { config: [{\r\n                type: Input\r\n            }], onInputChange: [{\r\n                type: Output\r\n            }], formCtrl: [{\r\n                type: Input\r\n            }] } });\n\nclass NgOtpInputModule {\r\n}\r\n/** @nocollapse */ NgOtpInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ NgOtpInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, declarations: [NgOtpInputComponent, KeysPipe], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule], exports: [NgOtpInputComponent] });\r\n/** @nocollapse */ NgOtpInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, providers: [KeysPipe], imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule\r\n                    ],\r\n                    declarations: [NgOtpInputComponent, KeysPipe],\r\n                    exports: [NgOtpInputComponent],\r\n                    providers: [KeysPipe]\r\n                }]\r\n        }] });\n\nclass Config {\r\n}\n\n/*\r\n * Public API Surface of ng-otp-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgOtpInputComponent, Config as NgOtpInputConfig, NgOtpInputModule };\n","import { Component, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\r\nimport { PaymentSubscriptionComponent } from './payment-subscription/payment-subscription.component';\r\nimport { RoleSignupComponent } from './role-signup/role-signup.component';\r\nimport { SelectFeatureSubscriptionComponent } from './select-feature-subscription/select-feature-subscription.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { SubscriptionComponent } from './subscription/subscription.component';\r\nimport { AuthGuard } from '../core/guards/auth.guard';\r\nimport { PaymentSuccessComponent } from './payment-success/payment-success.component';\r\nimport { PaymentFailureComponent } from './payment-failure/payment-failure.component';\r\nimport { PrintReceiptComponent } from './print-receipt/print-receipt.component';\r\nimport { SubcriptionEndComponent } from './subcription-end/subcription-end.component';\r\nimport { TermConditionPageComponent } from './term-condition-page/term-condition-page.component';\r\nimport { VerifyOtpForgotPasswordComponent } from './verify-otp-forgot-password/verify-otp-forgot-password.component';\r\nimport { ChangeForgotPasswordComponent } from './change-forgot-password/change-forgot-password.component';\r\nimport { RoleSelectionComponent } from './role-selection/role-selection/role-selection.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"role-selection\",\r\n    component: RoleSelectionComponent,\r\n\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent,\r\n\r\n  },\r\n  {\r\n    path: \"logout\",\r\n    component: LogoutComponent\r\n\r\n  },\r\n  {\r\n    path: \"register\",\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: \"term-and-condition\",\r\n    component: TermConditionPageComponent\r\n  },\r\n\r\n  {\r\n    path: \"select-feature\",\r\n    component: SelectFeatureSubscriptionComponent\r\n  },\r\n  {\r\n    path: \"forget-password\",\r\n    component: ForgotPasswordComponent\r\n  },\r\n  {\r\n    path:'verify-password',\r\n    component:VerifyOtpForgotPasswordComponent\r\n  },\r\n  {\r\n    path:'change-forgot-password',\r\n    component:ChangeForgotPasswordComponent\r\n  },\r\n  {\r\n    path: \"subscription\",\r\n    component: SubscriptionComponent\r\n  },\r\n  {\r\n    path: \"subscription-end\",\r\n    component: SubcriptionEndComponent\r\n  },\r\n  {\r\n    path: \"payment-subscription/:id/:paymentId/:userSubsId\",\r\n    component: PaymentSubscriptionComponent\r\n  },\r\n  {\r\n    path: \"role-signup\",\r\n    component: RoleSignupComponent\r\n  },\r\n  {\r\n    path: \"print-receipt\",\r\n    component: PrintReceiptComponent,\r\n  },\r\n  {\r\n    path: \"reset-password\",\r\n    component: PasswordResetComponent\r\n  },\r\n  {\r\n    path: \"payment-success\",\r\n    component: PaymentSuccessComponent\r\n  },\r\n  {\r\n    path: \"payment-failure\",\r\n    component: PaymentFailureComponent\r\n  },\r\n\r\n  { path: \"\", redirectTo: \"role-selection\", pathMatch: \"full\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { PasswordResetComponent } from \"./password-reset/password-reset.component\";\r\nimport { LogoutComponent } from \"./logout/logout.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { RoleSignupComponent } from \"./role-signup/role-signup.component\";\r\nimport { SubscriptionComponent } from \"./subscription/subscription.component\";\r\nimport { PaymentSubscriptionComponent } from \"./payment-subscription/payment-subscription.component\";\r\nimport { PaymentSuccessComponent } from \"./payment-success/payment-success.component\";\r\nimport { PaymentFailureComponent } from \"./payment-failure/payment-failure.component\";\r\nimport { SubcriptionEndComponent } from \"./subcription-end/subcription-end.component\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { TermConditionPageComponent } from \"./term-condition-page/term-condition-page.component\";\r\nimport { MaterialExampleModule } from \"../material.module\";\r\nimport { VerifyOtpForgotPasswordComponent } from \"./verify-otp-forgot-password/verify-otp-forgot-password.component\";\r\nimport { ChangeForgotPasswordComponent } from \"./change-forgot-password/change-forgot-password.component\";\r\nimport { NgOtpInputModule } from \"ng-otp-input\";\r\nimport { RoleSelectionComponent } from './role-selection/role-selection/role-selection.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n    PasswordResetComponent,\r\n    LogoutComponent,\r\n    SubscriptionComponent,\r\n    PaymentSubscriptionComponent,\r\n    ForgotPasswordComponent,\r\n    RoleSignupComponent,\r\n    PaymentSuccessComponent,\r\n    PaymentFailureComponent,\r\n    SubcriptionEndComponent,\r\n    TermConditionPageComponent,\r\n    VerifyOtpForgotPasswordComponent,\r\n    ChangeForgotPasswordComponent,\r\n    RoleSelectionComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule,\r\n    MaterialExampleModule,\r\n    NgOtpInputModule,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AuthModule {}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-5 py-3 position-relative\"><img class=\"bg-auth-circle-shape\" src=\"../../../assets/img/icons/spot-illustrations/bg-shape.png\" alt=\"\" width=\"250\"><img class=\"bg-auth-circle-shape-2\" src=\"../../../assets/img/icons/spot-illustrations/shape-1.png\" alt=\"\" width=\"150\">\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                       \r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient\" style=\"\r\n                          display: flex; align-items: stretch;\r\n                          width:48.8%;\r\n                          height:700px;\r\n                          background-size:contain;\r\n                          background-position: center center;\r\n                          background: linear-gradient(0deg, rgba(17, 1, 82, 0.7), rgba(17, 1, 82, 0.7)), url(../../../assets/img/login-img/8.png);;\r\n                          \">\r\n                                <div class=\"position-relative p-3\">\r\n                                    <div class=\"z-index-1 position-relative p-3\">\r\n\r\n                                        <p class=\"mt-3 d-flex\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                        </p>\r\n                                        <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                        <br><br>\r\n                                        <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                            The technology that looks imposible today will<br>be part of our life\r\n                                            tomorrow. Iceipts technology<br>creating difference.\r\n                                        </p>\r\n                                        \r\n                                        <p class=\"opacity-75 text-white d-flex\">Sibanee kar</p>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"position-relative pt-md-7 pb-md-7 light\">\r\n                                    <div class=\"bg-holder bg-auth-card-shape\" style=\"\r\n                                        background-image: url(../../../assets/img/icons/spot-illustrations/half-circle.png);\r\n                                        \">\r\n                                    </div> -->\r\n                                    <!--/.bg-holder-->\r\n                                    <!-- <div class=\"z-index-1 position-relative\">\r\n                                        <a\r\n                                            class=\"link-light mb-4 mt-3 font-sans-serif fs-4 d-inline-block fw-bolder\">iCeipts</a>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Welcome!\r\n                                        </p>\r\n                                        <p class=\"mt-3\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt-blue.png\" alt=\"iceipts logo\" width=\"90\"\r\n                                                height=\"90\">\r\n                                        </p>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Effortlessly efficient\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt-3 mb-4 light\">\r\n                                    <p class=\"text-white\">\r\n                                        Don't have an account?<br /><a class=\"text-decoration-underline link-light\"\r\n                                            routerLink=\"/auth/register\">Get started!</a>\r\n                                    </p>\r\n                                    <p class=\"mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75\">\r\n                                        Read our\r\n                                        <a class=\"text-decoration-underline text-white\">terms</a> and\r\n                                        <a class=\"text-decoration-underline text-white\">conditions\r\n                                        </a>\r\n                                    </p>\r\n                                </div> -->\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"col-md-7 d-flex flex-center\" style=\"width:50%\">\r\n                                <div class=\"p-4 p-md-5 flex-grow-1 form-body\">\r\n                                    <div class=\"text-center text-md-start\">\r\n                                        <h4 class=\"mb-0 fw-bolder\"> Change  your  new password?</h4>\r\n                                        <p class=\"mb-4\">Enter your Email and we'll send you a reset link.</p>\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-sm-8 col-md\">\r\n                                            <form [formGroup]=\"ChangeOTPPasswordForm\" class=\"mb-3\">\r\n                                                <input class=\"form-control mb-2\"  formControlName=\"forgetpass\" type=\"email\" placeholder=\"Email address\" \r\n                                                [ngClass]=\"{\r\n                                                    'is-invalid': (f.forgetpass.invalid && f.forgetpass.touched) && submitted }\"/>\r\n                                                    <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.forgetpass.touched)\">\r\n                                                        <mat-error *ngIf=\"f.forgetpass.errors?.required\">\r\n                                                            Email Is Required!\r\n                                                        </mat-error>\r\n                                                        <mat-error *ngIf=\"f.forgetpass.errors?.email\">\r\n                                                            Email Is Required  in Format!\r\n                                                        </mat-error>\r\n                                                    </mat-error>\r\n\r\n                                                    <input class=\"form-control mb-2\"  formControlName=\"otp\" type=\"email\" placeholder=\"Enter OTP\" (keypress)=\"numberOnly($event)\" \r\n                                                    [ngClass]=\"{\r\n                                                        'is-invalid': (f.otp.invalid && f.otp.touched) && submitted }\"/>\r\n                                                        <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.otp.touched)\">\r\n                                                            <mat-error *ngIf=\"f.otp.errors?.required\">\r\n                                                                OTP Is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-error>\r\n\r\n                                                        <input class=\"form-control mb-2\"  formControlName=\"newPassword\" type=\"email\" placeholder=\"Enter New Password\" \r\n                                                        [ngClass]=\"{\r\n                                                            'is-invalid': (f.newPassword.invalid && f.newPassword.touched) && submitted }\"/>\r\n                                                            <mat-error class=\"text-danger\" *ngIf=\"(submitted || f.newPassword.touched)\">\r\n                                                                <mat-error *ngIf=\"f.newPassword.errors?.required\">\r\n                                                                    New Password Is Required!\r\n                                                                </mat-error>\r\n                                                            </mat-error>\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\" name=\"submit\" (click)=\"postforgotpassword()\" style=\"background: #110152;\">Verify OTP</button>\r\n                                            </form><a class=\"fs--1 text-600\" routerLink=\"/auth/login\">Back to Login\r\n                                                this page<span class=\"d-inline-block ms-1\">&rarr;</span></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-change-forgot-password',\r\n  templateUrl: './change-forgot-password.component.html',\r\n  styleUrls: ['./change-forgot-password.component.scss']\r\n})\r\nexport class ChangeForgotPasswordComponent implements OnInit {\r\n\r\n  ChangeOTPPasswordForm:any;\r\n  public submitted: boolean;\r\n  constructor(private formBuilder: FormBuilder, private toastService:ToastNotificationService,private loginService: LoginService,private router: Router,  private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ChangeOTPPasswordForm = this.formBuilder.group({\r\n\t\t\tforgetpass: [\"\",[Validators.required,,Validators.email]],\r\n      otp:[\"\",[Validators.required]],\r\n      newPassword:[\"\",[Validators.required]],\r\n    });\r\n  }\r\n  get f(){\r\n    return this.ChangeOTPPasswordForm.controls;\r\n  }\r\n  postforgotpassword(){\r\n    this.submitted=true;\r\n    if(this.ChangeOTPPasswordForm.invalid){\r\n      return false;\r\n    }\r\n    else{\r\n      let body={\r\n        \"email\" : this.ChangeOTPPasswordForm.controls.forgetpass.value,\r\n        \"otp\" : this.ChangeOTPPasswordForm.controls.otp.value,\r\n        \"newPassword\" :this.ChangeOTPPasswordForm.controls.newPassword.value\r\n\r\n      }\r\n      this.loginService.changeForgetPassword(body).then((res)=>{\r\n        this.toastService.openSnackBar(\"Password Changed Successfully\");\r\n        this.router.navigate([\"/auth/login\"]);\r\n      }, \r\n      (err) => {\r\n      \r\n        if(err.error.expose){\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else{\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n        \r\n      })\r\n\r\n  \r\n    }\r\n    \r\n\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-6 py-3 position-relative\">\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient\">\r\n                                <div class=\"position-relative pt-md-3 pb-md-7 light\">\r\n                                    <div class=\"z-index-1 position-relative p-4\">\r\n\r\n                                        <p class=\"mt-2 d-flex\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                        </p>\r\n                                        <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                        <br><br>\r\n                                        <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                            The technology that looks imposible today will<br>be part of our life\r\n                                            tomorrow. Iceipts technology<br>creating difference.\r\n                                        </p>\r\n                                        \r\n                                        <div class=\"opacity-75 text-white d-flex justify-content-end\">\r\n                                            <div class=\"svg-img\">\r\n                                                <svg width=\"22\" height=\"21\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M21 0H33.5V33H0V20.5H21V0Z\" fill=\"white\"/>\r\n                                                    </svg>\r\n                                            </div>   \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"position-relative pt-md-7 pb-md-7 light\">\r\n                                    <div class=\"bg-holder bg-auth-card-shape\" style=\"\r\n                      background-image: url(../../../assets/img/icons/spot-illustrations/half-circle.png);\r\n                    \"></div> -->\r\n                                    <!--/.bg-holder-->\r\n                                    <!-- <div class=\"z-index-1 position-relative\">\r\n                                        <a\r\n                                            class=\"link-light mb-4 mt-3 font-sans-serif fs-4 d-inline-block fw-bolder\">iCeipts</a>\r\n                                        <p class=\"opacity-75 text-white\">Welcome!</p>\r\n                                        <p class=\"mt-3\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\" alt=\"iceipts logo\" width=\"90\"\r\n                                                height=\"90\" />\r\n                                        </p>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Effortlessly efficient\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt-3 mb-4 light\">\r\n                                    <p class=\"text-white\">\r\n                                        Don't have an account?<br /><a class=\"text-decoration-underline link-light\"\r\n                                            routerLink=\"/auth/register\">Get started!</a>\r\n                                    </p>\r\n                                    <p class=\"mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75\">\r\n                                        Read our\r\n                                        <a routerLink=\"/auth/term-and-condition\" class=\"text-decoration-underline text-white\">terms and conditions\r\n                                        </a>\r\n                                    </p>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 d-flex flex-center \" style=\"width:50%\">\r\n                                <div class=\"p-4 p-md-5 flex-grow-1 form-body\" >\r\n                                    <div class=\"text-center text-md-start\">\r\n                                        <h4 class=\"mb-0 fw-bolder\">Forgot your password?</h4>\r\n                                        <p class=\"mb-4\">\r\n                                            Enter your Email and we'll send you a reset link.\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-sm-8 col-md\">\r\n                                            <form *ngIf=\"!verifyShow\" [formGroup]=\"forgetPassForm\" class=\"mb-3\">\r\n\r\n\r\n                                                <input class=\"form-control mb-2\" formControlName=\"forgetpass\"\r\n                                                    type=\"email\" placeholder=\"Email address\"\r\n                                                    [ngClass]=\"{\r\n                                                    'is-invalid': (f.forgetpass.invalid && f.forgetpass.touched) && submitted }\" />\r\n                                                <mat-error class=\"text-danger\"\r\n                                                    *ngIf=\"(submitted || f.forgetpass.touched)\">\r\n                                                    <mat-error *ngIf=\"f.forgetpass.errors?.required\">\r\n                                                        Email Is Required!\r\n                                                    </mat-error>\r\n                                                    <mat-error *ngIf=\"f.forgetpass.errors?.email\">\r\n                                                        Email Is Required in Format!\r\n                                                    </mat-error>\r\n                                                </mat-error>\r\n                                                <!-- <div style=\"margin-bottom: -13px;\" *ngIf=\"submitted && f.forgetpass.errors\" class=\"invalid-feedback\">\r\n                                                        Forget password is required\r\n                                                    </div> -->\r\n\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\" style=\"background: #110152;\"\r\n                                                    name=\"submit\" (click)=\"postforgotpassword()\">\r\n                                                    Send reset link\r\n                                                </button>\r\n                                            </form>\r\n\r\n                                            <form *ngIf=\"verifyShow\" [formGroup]=\"verifyPasswordFrom\" class=\"mb-3\">\r\n                                                <input readonly class=\"form-control mb-2\" formControlName=\"email\"\r\n                                                    type=\"email\" placeholder=\"Email address\" />\r\n                                                <label for=\"otp\">Enter OTP</label>\r\n                                                <ng-otp-input (onInputChange)=\"onOtpChange($event)\" [config]=\"config\">\r\n                                                </ng-otp-input>\r\n\r\n                                                <!-- <mat-form-field  style=\"width: 100%\" floatPlaceholder=\"never\">\r\n                                                    <input matInput placeholder=\"your placeholder text\" [formControl]=\"newPassword\" required/>\r\n                                                    <mat-error *ngIf=\"nameControl.errors?.required\">name is required</mat-error>\r\n                                                </mat-form-field> -->\r\n\r\n                                                <input class=\"form-control my-2\" formControlName=\"newPassword\"\r\n                                                    type=\"email\" placeholder=\"Enter New Password\"\r\n                                                    [ngClass]=\"{\r\n                                                            'is-invalid': (verifyPasswordFromControl.newPassword.invalid && verifyPasswordFromControl.newPassword.touched) }\" />\r\n                                                <mat-error class=\"text-danger\"\r\n                                                    *ngIf=\"(verifyPasswordFromControl.newPassword.touched)\">\r\n                                                    <mat-error\r\n                                                        *ngIf=\"verifyPasswordFromControl.newPassword.errors?.required\">\r\n                                                        New Password Is Required!\r\n                                                    </mat-error>\r\n                                                </mat-error>\r\n\r\n                                                <input class=\"form-control mb-2\" formControlName=\"confirmPassword\"\r\n                                                    type=\"text\" placeholder=\"Confirm Password\"\r\n                                                    [ngClass]=\"{\r\n                                                        'is-invalid': (verifyPasswordFromControl.confirmPassword.invalid && verifyPasswordFromControl.confirmPassword.touched) }\" />\r\n                                                <mat-error class=\"text-danger\"\r\n                                                    *ngIf=\"(verifyPasswordFromControl.newPassword.touched)\">\r\n                                                    <mat-error\r\n                                                        *ngIf=\"verifyPasswordFromControl.confirmPassword.errors?.required\">\r\n                                                        Confirm Password Is Required!\r\n                                                    </mat-error>\r\n                                                    <mat-error\r\n                                                        *ngIf=\"verifyPasswordFromControl.confirmPassword.errors?.confirmedValidator\">\r\n                                                        Password & Confirm Password must be same!\r\n                                                    </mat-error>\r\n                                                </mat-error>\r\n\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\" style=\"background: #110152;\"\r\n                                                    name=\"submit\" (click)=\"postverifypassword()\">\r\n                                                    Submit\r\n                                                </button>\r\n                                            </form>\r\n                                            <a class=\"fs--1 text-600\" routerLink=\"/auth/login\">Back to Login page<span\r\n                                                    class=\"d-inline-block ms-1\">&rarr;</span></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { TitleCasePipe } from \"@angular/common\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LoginService } from \"src/app/core/services/login.service\";\r\nimport { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\nimport { ConfirmedValidators } from \"src/app/_helpers/confirmed.validators\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgetPassForm: any;\r\n  verifyPasswordFrom: FormGroup;\r\n  public submitted: boolean;\r\n  verifyShow: boolean = false;\r\n  config = {\r\n    allowNumbersOnly: true,\r\n    length: 6,\r\n    isPasswordInput: false,\r\n    disableAutoFocus: false,\r\n    placeholder: \"\",\r\n    inputStyles: {\r\n      width: \"40px\",\r\n      height: \"40px\",\r\n      \"font-size\": \"20px\",\r\n    },\r\n  };\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastService: ToastNotificationService,\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private titleCasePipe: TitleCasePipe\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.forgetPassForm = this.formBuilder.group({\r\n      forgetpass: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n    this.verifyPasswordFrom = this.formBuilder.group(\r\n      {\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        otp: [null, [Validators.required, Validators.minLength(6)]],\r\n        newPassword: [\"\", [Validators.required]],\r\n        confirmPassword: [\"\", [Validators.required]],\r\n      },\r\n\r\n      {\r\n        validator: ConfirmedValidators(\"newPassword\", \"confirmPassword\"),\r\n      }\r\n    );\r\n  }\r\n  get f() {\r\n    return this.forgetPassForm.controls;\r\n  }\r\n  get verifyPasswordFromControl() {\r\n    return this.verifyPasswordFrom.controls;\r\n  }\r\n  onOtpChange(a) {\r\n    console.log(\"onOtpChange\", a);\r\n    this.verifyPasswordFrom.get(\"otp\").patchValue(a);\r\n  }\r\n  postforgotpassword() {\r\n    this.submitted = true;\r\n    if (this.forgetPassForm.invalid) {\r\n      console.log(\"postforgotpassword\", this.submitted);\r\n      return false;\r\n    } else {\r\n      let body = {\r\n        email: this.forgetPassForm.controls.forgetpass.value,\r\n      };\r\n      this.verifyPasswordFrom.get(\"email\").patchValue(body.email);\r\n      this.loginService.forgotpassword(body).then(\r\n        (res) => {\r\n          this.toastService.openSnackBar(\r\n            \"OTP Has Been Successfully Sent To Your Email Address\"\r\n          );\r\n          this.verifyShow = true;\r\n          // this.router.navigate([\"/auth/verify-password\"]);\r\n        },\r\n        (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(\r\n              this.titleCasePipe.transform(err.error.error_message)\r\n            );\r\n          } else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  postverifypassword() {\r\n    console.log(\r\n      \"verifyPasswordFromControl.confirmPassword.errors\",\r\n      this.verifyPasswordFromControl.confirmPassword.errors\r\n    );\r\n    if (this.verifyPasswordFrom.invalid) {\r\n      console.log(\"Verify Password false\");\r\n      return false;\r\n    } else {\r\n      this.loginService\r\n        .changeForgetPassword(this.verifyPasswordFrom.value)\r\n        .then(\r\n          (res) => {\r\n            this.toastService.openSnackBar(\"Password Changed Successfully\");\r\n            this.router.navigate([\"/auth/login\"]);\r\n          },\r\n          (err) => {\r\n            if (err.error.expose) {\r\n              this.toastService.openErrorSnackBar(\r\n                this.titleCasePipe.transform(err.error.error_message)\r\n              );\r\n            } else {\r\n              this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<!-- <div *ngIf=\"spinner\" class=\"spinner-border text-warning bg-opacity-10  ml-50 text-center\" role=\"status\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n  </div> -->\r\n<ngx-spinner bdOpacity=\"1\" bdColor=\"rgba(97,197,212,0.07)\" size=\"medium\" color=\"#dd4b39\" type=\"ball-spin-clockwise\"\r\n    fullScreen=\"true\">\r\n    <p style=\"color: #61c5d4;\">Loading..</p>\r\n</ngx-spinner>\r\n<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-6 py-3 position-relative\">\r\n                <!-- <img class=\"bg-auth-circle-shape\" src=\"../../../assets/img/icons/spot-illustrations/bg-shape.png\" alt=\"\" width=\"250\" /><img class=\"bg-auth-circle-shape-2\" src=\"../../../assets/img/icons/spot-illustrations/shape-1.png\" alt=\"\" width=\"150\"\r\n              /> -->\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\" >\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient\">\r\n                                <div class=\"position-relative p-3\">\r\n                                    <!-- <div class=\"bg-holder bg-auth-card-shape\" style=\"\r\n                                        background-image: url(../../../assets/img/icons/spot-illustrations/half-circle.png);\r\n                                        \">\r\n                                    </div> -->\r\n                                    <!--/.bg-holder-->\r\n                                    <div class=\"z-index-1 position-relative p-3\">\r\n                                        <!-- <a\r\n                                            class=\"link-light mb-4 mt-3 font-sans-serif fs-4 d-inline-block fw-bolder\"></a>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Welcome!\r\n                                        </p> -->\r\n                                        <p class=\"mt-3 d-flex\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                        </p>\r\n                                        <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                        <br><br>\r\n                                        <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                            The technology that looks imposible today will<br>be part of our life tomorrow. Iceipts technology<br>creating difference.\r\n                                        </p >\r\n                                        \r\n                                        <div class=\"opacity-75 text-white d-flex justify-content-end\">\r\n                                            <div class=\"svg-img\">\r\n                                                <svg width=\"22\" height=\"21\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M21 0H33.5V33H0V20.5H21V0Z\" fill=\"white\"/>\r\n                                                    </svg>\r\n                                            </div>   \r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"mt-3 mb-4 light\">\r\n                                    <p *ngIf=\"!isVerifyOtp\" class=\"text-white\">\r\n                                        Do you want to login as Customer? -->\r\n                                        <!-- Don't have an account? -->\r\n                                        <!-- <br />\r\n                                        <a *ngIf=\"!isVerifyOtp\" class=\"text-decoration-underline link-light\"\r\n                                            routerLink=\"/auth/login\" (click)=\"show(4)\">\r\n                                            Login\r\n                                        </a> -->\r\n                                        <!-- <a class=\"text-decoration-underline link-light\"\r\n                                            routerLink=\"/auth/register\">\r\n                                            Get started!\r\n                                        </a> -->\r\n                                    <!-- </p>\r\n                                    <p class=\"mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75\">\r\n                                        Read our\r\n                                        <a routerLink=\"/auth/term-and-condition\"\r\n                                            class=\"text-decoration-underline text-white\">terms and conditions\r\n                                        </a>\r\n                                    </p>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-sm-7 col-md-6 col-lg-6 d-flex flex-center\" >\r\n                                <div *ngIf=\"!CustLogintoggle\" [hidden]=\"isVerifyOtp\" class=\"demo\">\r\n                                    <button mat-flat-button style=\"color: #8692A6;\" (click)=\"backToRoleSelecetion()\">\r\n                                        < Back\r\n                                      </button>\r\n                                    <form [formGroup]=\"clientForm\">\r\n                                        <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                            <div class=\"row flex-between-center\">\r\n                                                <div class=\"col-12 \">\r\n                                                    <h1 style=\"font-weight: 700;color: #000000;\">\r\n                                                        <b>Sign In As Retailer!</b></h1>\r\n                                                </div>\r\n                                                <div class=\"toggle-text col-12 fs-0 my-2\">\r\n                                                    <span class=\"mb-0 undefined\">\r\n                                                        <!-- Do you want to login as Customer? -->\r\n                                                        If you don't have an account. You can\r\n                                                    </span>\r\n                                                    <span class=\"ml-8\">\r\n                                                        <a style=\"color: #FC7643;\" (click)=\"onCustomerClick()\">\r\n                                                            <b>REGISTER HERE!</b>\r\n                                                        </a>\r\n                                                        <!-- <a routerLink=\"/auth/login\" (click)=\"show(4)\">\r\n                                                            Login\r\n                                                        </a> -->\r\n                                                    </span>\r\n                                                    <hr class=\"top-line my-2\" style=\"opacity: 20%;\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <label class=\"form-label\" for=\"card-email\">Email address *</label>\r\n                                                <input class=\"form-control\" id=\"card-email\" type=\"email\"\r\n                                                    placeholder=\"Email address\" required formControlName=\"username\" />\r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <div class=\"d-flex justify-content-between\">\r\n                                                    <label class=\"form-label\" for=\"card-password\">Password *</label>\r\n                                                </div>\r\n                                                <input [type]=\"changeType ? 'password' : 'text'\" class=\"form-control\"\r\n                                                    placeholder=\"Password\" required id=\"card-password\"\r\n                                                    formControlName=\"password\" />\r\n                                                <span class=\"form-control-feedback\" (click)=\"toggleShow()\">\r\n                                                    <i class=\" p-1 \"\r\n                                                        [ngClass]=\"visible ? 'fa fa-eye':'fa fa-eye-slash'\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div class=\"row flex-between-center\">\r\n                                                <div class=\"col-auto\">\r\n                                                    <div class=\"form-check mb-0\">\r\n                                                        <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                            id=\"card-checkbox\" checked=\"checked\" />\r\n                                                        <label class=\"form-check-label mb-0\"\r\n                                                            for=\"card-checkbox\">Remember me</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-auto\">\r\n                                                    <a class=\"fs--1\" style=\"font-size: 10px!important;\" routerLink=\"/auth/forget-password\">Forgot\r\n                                                        Password?</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <button class=\"login-btn d-block w-100 mt-3\" type=\"button\"\r\n                                                    [disabled]=\"isLoginBtn\" (click)=\"clientLogin()\">\r\n                                                    <span class=\"spinner-border spinner-border-sm\" *ngIf=\"isLoginBtn\"\r\n                                                        role=\"status\" aria-hidden=\"true\"></span>\r\n                                                    Log in\r\n                                                </button>\r\n                                                <!-- <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\"\r\n                                                    (click)=\"clientLogin()\" name=\"submit\">\r\n                                                    Log in\r\n                                                </button> -->\r\n                                            </div>\r\n\r\n                                            <div class=\"line-container\">\r\n                                                <hr class=\"top-line\">\r\n                                                <span class=\"text\" style=\"color: #c4c4c4;\">or</span>\r\n                                                <hr class=\"bottom-line\">\r\n                                              </div>\r\n                                              \r\n                                            <div class=\"mb-3\">\r\n                                                <button class=\"btn-google d-block w-100 mt-3\" type=\"button\">\r\n                                                    <!-- <i class=\"fa fa-google mr-2\"></i> -->\r\n                                                    <img src=\"assets/img/login-img/Google__G__Logo.png\" alt=\"\" style=\"height: 6%; width: 6%;\">\r\n                                                    Sign in with Google\r\n                                                </button>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div *ngIf=\"CustLogintoggle\" [hidden]=\"isVerifyOtp\" class=\"demo\">\r\n                                            <button mat-flat-button style=\"color: #8692A6;\" (click)=\"backToRoleSelecetion()\">\r\n                                                < Back\r\n                                              </button>                                                                                                        \r\n                                    <form [formGroup]=\"custForm\">\r\n                                        <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                            <div class=\"row flex-between-center\">\r\n                                                <div class=\"col-auto\">\r\n                                                    <h1 style=\"font-weight: 700;color:#000000;\r\n                                                    \">Sign In As a Customer!</h1>\r\n                                                </div>\r\n                                                <div class=\"toggle-text col-auto fs-0 my-2 text-900\">\r\n                                                    <span class=\"mb-0 undefined\">\r\n                                                        If you don't have an account. You can\r\n                                                    </span>\r\n                                                    <span class=\"ml-8\">\r\n                                                        <a style=\"color: #FC7643;\" (click)=\"onRetailerClick()\">\r\n                                                            <b>REGISTER HERE!</b>\r\n                                                        </a>\r\n                                                    </span>\r\n                                                    <hr class=\"top-line my-2\" style=\"opacity: 20%;\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <label class=\"form-label\" for=\"card-email\">Phone Number</label> \r\n                                                <input class=\"form-control\" id=\"card-email\" placeholder=\"Enter phone number here...\"\r\n                                                    formControlName=\"username\" />\r\n                                            </div>\r\n                                            <div class=\"mb-3 form-group\" *ngIf=\"isOtpField\">\r\n                                                <div class=\"d-flex justify-content-between\">\r\n                                                    <label class=\"form-label\" for=\"card-otp\">OTP</label>\r\n                                                </div>\r\n                                                <input type=\"password\" (keypress)=\"numberOnly($event)\"\r\n                                                    class=\"form-control\" id=\"card-otp\" formControlName=\"mobileOtp\">\r\n                                                <div class=\"row flex-between-center\">\r\n                                                    <div class=\"col-auto\"></div>\r\n                                                    <div class=\"col-auto text-center\">\r\n                                                        <button class=\"btn btn-link fs--2\" [disabled]=\"isLoginBtn\"\r\n                                                            (click)=\"customerLoginResendOtp()\" type=\"button\"\r\n                                                            [disabled]=\"messageSuccess\" style=\"border: none;\">\r\n                                                            <span class=\"spinner-border spinner-border-sm\"\r\n                                                                *ngIf=\"isLoginBtn\" role=\"status\"\r\n                                                                aria-hidden=\"true\"></span>\r\n                                                            Resend OTP\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"mb-3\">\r\n                                                    <button class=\"login-btn btn btn-primary d-block w-100 mt-3\"\r\n                                                        [disabled]=\"isLoginBtn\" (click)=\"verifyOtp()\">\r\n                                                        <span class=\"spinner-border spinner-border-sm\"\r\n                                                            *ngIf=\"isLoginBtn\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                        Login\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row flex-between-center\">\r\n                                                <div class=\"col-auto\">\r\n                                                    <div class=\"form-check mb-0\">\r\n                                                        <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                            id=\"card-checkbox\" checked=\"checked\" />\r\n                                                        <label class=\"form-check-label mb-0\"\r\n                                                            for=\"card-checkbox\">Remember me</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-auto\">\r\n                                                    <a class=\"fs--1\" style=\"font-size: 10px!important;\" routerLink=\"/auth/forget-password\">Forgot\r\n                                                        Password?</a>\r\n                                                </div> \r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <!-- <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\"\r\n                                                    *ngIf=\"!isOtpField\" (click)=\"sendOtp()\" name=\"submit\">\r\n                                                    Send OTP\r\n                                                </button> -->\r\n                                                <button class=\"login-btn d-block w-100 mt-3\" type=\"button\"\r\n                                                    [disabled]=\"isLoginBtn\" *ngIf=\"!isOtpField\" (click)=\"sendOtp()\">\r\n                                                    <span class=\"spinner-border spinner-border-sm\" *ngIf=\"isLoginBtn\"\r\n                                                        role=\"status\" aria-hidden=\"true\"></span>\r\n                                                    Send OTP\r\n                                                </button>\r\n                                                <!-- <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\"\r\n                                                    *ngIf=\"isOtpField\" (click)=\"customerLogin()\" name=\"submit\">\r\n                                                    Log in\r\n                                                </button> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div *ngIf=\"isVerifyOtp\">\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                        <div class=\"alert alert-success mb-5\" *ngIf=\"successful\" role=\"alert\">OTP has\r\n                                            sent successfully to your Email-Id and mobile number</div>\r\n                                        <h3>Verify as {{ userName }}</h3>\r\n                                        <form [formGroup]=\"otpClientData\">\r\n                                            <div class=\"row gx-2\">\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-email\">Enter Email OTP</label>\r\n                                                    <input class=\"form-control\" (keypress)=\"numberOnly($event)\"\r\n                                                        formControlName=\"emailotp\" type=\"text\" id=\"card-email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\"\r\n                                                    [disabled]=\"isLoginBtn\" (click)=\"verifyClientOtp()\" name=\"submit\">\r\n                                                    <span class=\"spinner-border spinner-border-sm\" *ngIf=\"isLoginBtn\"\r\n                                                        role=\"status\" aria-hidden=\"true\"></span>\r\n                                                    Verify\r\n                                                </button>\r\n                                                <a class=\"text-decoration-underline mt-3\"\r\n                                                    (click)=\"hideshowVerifylogin()\">\r\n                                                    Back to Login\r\n                                                </a>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormGroup, FormArray, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/services/auth.service\";\r\nimport { LoginService } from \"src/app/core/services/login.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { UrlConstants } from \"src/app/_helpers/url-constants\";\r\nimport { RoleSignupService } from \"src/app/core/services/role-signup.service\";\r\nimport { OtpVerifyService } from \"src/app/core/services/otp-verify.service\";\r\nimport { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TitleCasePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public visible: boolean = false;\r\n  public changeType: boolean = true;\r\n  public user: number;\r\n  public CustLogintoggle: boolean;\r\n  public hide: boolean = true;\r\n  public userName: String = \"Client\";\r\n  public isOtpField: boolean = false;\r\n  public isVerifyOtp: boolean = false;\r\n  public successful: boolean = false;\r\n  public otpErrorMessage: boolean = false;\r\n  public messageSuccess: boolean;\r\n  public resend: any;\r\n  public isLoginBtn: boolean = false;\r\n  UserDatacomplte: boolean = false;\r\n  public clientForm: FormGroup = this.fb.group({\r\n    username: [\"\", [Validators.required, Validators.email]],\r\n    password: [\"\", [Validators.required]],\r\n  });\r\n  public custForm: FormGroup = this.fb.group({\r\n    username: [\"\",[\r\n      Validators.required,\r\n      Validators.maxLength(10),\r\n      Validators.minLength(10),\r\n      \r\n      ]\r\n    ],\r\n    //username : [Validators.minLength(10), Validators.maxLength(10), Validators.pattern(\"^[0-9]*$\")],\r\n    mobileOtp: [\r\n      \"\",\r\n      [\r\n        Validators.required,\r\n        Validators.maxLength(6),\r\n        Validators.minLength(6),\r\n        Validators.pattern(\"^[0-9]{6}\"),\r\n      ],\r\n    ],\r\n  });\r\n  public otpClientData: FormGroup = this.fb.group({\r\n    emailotp: [\"\", [Validators.required, Validators.pattern(\"[0-9]{10}\")]],\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private loginService: LoginService,\r\n    public otpVerify: OtpVerifyService,\r\n    private http: HttpClient,\r\n    public roleSignupService: RoleSignupService,\r\n    private toastService: ToastNotificationService,\r\n    private spinner: NgxSpinnerService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.CustLogintoggle = params['CustLogintoggle'] === 'true';\r\n    });\r\n    this.authService.logout();\r\n  }\r\n\r\n  backToRoleSelecetion(){\r\n    this.router.navigate(['auth/role-selection']);\r\n  }\r\n\r\n  // this click handler is called when the user is clicked on the register link\r\n  onCustomerClick() {\r\n    this.router.navigate(['/auth/register'], { queryParams: { Custtoggle: 'false' } });\r\n  }\r\n  \r\n  onRetailerClick() {\r\n    this.router.navigate(['/auth/register'], { queryParams: { Custtoggle: 'true' } });\r\n  }\r\n\r\n  //function for password masking\r\n  toggleShow() {\r\n    this.visible = !this.visible;\r\n    this.changeType = !this.changeType;\r\n  }\r\n  show(id) {\r\n    if (id === 3) {\r\n      this.user = 3;\r\n      this.CustLogintoggle = false;\r\n      this.userName = \"Client\";\r\n    } else if (id === 4) {\r\n      this.user = 4;\r\n      this.CustLogintoggle = true;\r\n      this.userName = \"Customer\";\r\n    }\r\n  }\r\n  hideshowVerifylogin() {\r\n    this.isVerifyOtp = false;\r\n    this.CustLogintoggle = false;\r\n  }\r\n  /**\r\n   * Client Login\r\n   */\r\n  // clientLogin() {\r\n  //   this.router.navigate([\"pages/dashboard\"]);\r\n  //   // let data = {\r\n  //   //   email: this.clientForm.controls.username.value,\r\n  //   //   password: this.clientForm.controls.password.value,\r\n  //   // };\r\n  //   // this.isLoginBtn = true;\r\n  //   // this.authService.login(data).subscribe(\r\n  //   //   (res) => {\r\n  //   //     this.isLoginBtn = false;\r\n  //   //     let planExpiryDate = new Date(res.data.user.planExpiresOn);\r\n  //   //     let showSubscriptionPage = new Date(planExpiryDate);\r\n  //   //     let todaysDate = new Date();\r\n  //   //     console.log(planExpiryDate);\r\n  //   //     console.log(res.data.user.planExpiresOn);\r\n  //   //     showSubscriptionPage.setDate(showSubscriptionPage.getDate() - 5);\r\n  //   //     console.log(showSubscriptionPage);\r\n  //   //     let dateDiff =\r\n  //   //       planExpiryDate.getDate() - showSubscriptionPage.getDate();\r\n  //   //     // if (todaysDate == showSubscriptionPage){\r\n  //   //     // if (res.data.user.planExpiresOn == undefined) {\r\n  //   //     //   this.spinner.hide();\r\n  //   //     //   this.router.navigate([\"/auth/subscription\"]);\r\n  //   //     this.UserDatacomplte = res.data.flag;\r\n  //   //     if (!res.data.user.isSubscribed) {\r\n  //   //       this.router.navigate([\"/auth/subscription-end\"]);\r\n  //   //     }\r\n  //   //     // }\r\n  //   //     else {\r\n  //   //       this.spinner.hide();\r\n  //   //       console.log(\"Dashboard\", this.UserDatacomplte);\r\n  //   //       if (this.UserDatacomplte) {\r\n  //   //         this.router.navigate([\"/pages/dashboard\"]);\r\n  //   //         this.toastService.openSnackBar(\"Login Successfully\");\r\n  //   //       } else {\r\n  //   //         this.toastService.openSnackBar(\"Fill All Required Fields\");\r\n  //   //         this.router.navigate([\"/pages/profile-settings\"]);\r\n  //   //       }\r\n  //   //     }\r\n  //   //   },\r\n  //   //   (err) => {\r\n  //   //     console.log(err);\r\n  //   //     if (err.error.status === 406) {\r\n  //   //       this.toastService.openErrorSnackBar(\"User Not Verified.\");\r\n  //   //       this.successful = true;\r\n  //   //       this.isLoginBtn = false;\r\n  //   //       let data = {\r\n  //   //         email: this.clientForm.controls.username.value,\r\n  //   //       };\r\n  //   //       this.isVerifyOtp = true;\r\n  //   //       this.roleSignupService.sendRoleUsersOtp(data).then((data) => {});\r\n  //   //     } else if (err.error.status == 404) {\r\n  //   //       this.isLoginBtn = false;\r\n  //   //       this.toastService.openErrorSnackBar(\r\n  //   //         \"User Not Found!!! Please Register Again!!!\"\r\n  //   //       );\r\n  //   //     } else if (err.error.status == 404) {\r\n  //   //       this.isLoginBtn = false;\r\n  //   //       this.toastService.openErrorSnackBar(\"Invalid Credentials.\");\r\n  //   //     } else if (err.error.status == 401) {\r\n  //   //       this.isLoginBtn = false;\r\n  //   //       this.toastService.openErrorSnackBar(\r\n  //   //         this.titleCasePipe.transform(err.error.error_message)\r\n  //   //       );\r\n  //   //     } else if (err.error.status == 400) {\r\n  //   //       this.isLoginBtn = false;\r\n  //   //       this.toastService.openErrorSnackBar(\r\n  //   //         this.titleCasePipe.transform(err.error.error_message)\r\n  //   //       );\r\n  //   //     } else {\r\n  //   //       this.isLoginBtn = false;\r\n  //   //       this.toastService.openErrorSnackBar(\r\n  //   //         \"User Not Found Or Wrong password.\"\r\n  //   //       );\r\n  //   //     }\r\n  //   //   }\r\n  //   // );\r\n  // }\r\n  clientLogin() {\r\n    let data = {\r\n      email: this.clientForm.controls.username.value,\r\n      password: this.clientForm.controls.password.value,\r\n    };\r\n    this.isLoginBtn = true;\r\n    this.authService.login(data).subscribe(\r\n      (res) => {\r\n        this.isLoginBtn = false;\r\n        let planExpiryDate = new Date(res.data.user.planExpiresOn);\r\n        let showSubscriptionPage = new Date(planExpiryDate);\r\n        let todaysDate = new Date();\r\n        console.log(planExpiryDate);\r\n        console.log(res.data.user.planExpiresOn);\r\n        showSubscriptionPage.setDate(showSubscriptionPage.getDate() - 5);\r\n        console.log(showSubscriptionPage);\r\n        let dateDiff =\r\n          planExpiryDate.getDate() - showSubscriptionPage.getDate();\r\n        // if (todaysDate == showSubscriptionPage){\r\n        // if (res.data.user.planExpiresOn == undefined) {\r\n        //   this.spinner.hide();\r\n        //   this.router.navigate([\"/auth/subscription\"]);\r\n        this.UserDatacomplte = res.data.flag;\r\n        if (!res.data.user.isSubscribed) {\r\n          this.router.navigate([\"/auth/subscription-end\"]);\r\n        }\r\n        // }\r\n        else {\r\n          this.spinner.hide();\r\n          console.log(\"Dashboard\", this.UserDatacomplte);\r\n          if (this.UserDatacomplte) {\r\n            this.router.navigate([\"/pages/dashboard\"]);\r\n            this.toastService.openSnackBar(\"Login Successfully\");\r\n          } else {\r\n            this.toastService.openSnackBar(\"Fill All Required Fields\");\r\n            this.router.navigate([\"/pages/profile-settings\"]);\r\n          }\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        if (err.error.status === 406) {\r\n          this.toastService.openErrorSnackBar(\"User Not Verified.\");\r\n          this.successful = true;\r\n          this.isLoginBtn = false;\r\n          let data = {\r\n            email: this.clientForm.controls.username.value,\r\n          };\r\n          this.isVerifyOtp = true;\r\n          this.roleSignupService.sendRoleUsersOtp(data).then((data) => {});\r\n        } else if (err.error.status == 404) {\r\n          this.isLoginBtn = false;\r\n          this.toastService.openErrorSnackBar(\r\n            \"User Not Found!!! Please Register Again!!!\"\r\n          );\r\n        } else if (err.error.status == 404) {\r\n          this.isLoginBtn = false;\r\n          this.toastService.openErrorSnackBar(\"Invalid Credentials.\");\r\n        } else if (err.error.status == 401) {\r\n          this.isLoginBtn = false;\r\n          this.toastService.openErrorSnackBar(\r\n            this.titleCasePipe.transform(err.error.error_message)\r\n          );\r\n        } else if (err.error.status == 400) {\r\n          this.isLoginBtn = false;\r\n          this.toastService.openErrorSnackBar(\r\n            this.titleCasePipe.transform(err.error.error_message)\r\n          );\r\n        } else {\r\n          this.isLoginBtn = false;\r\n          this.toastService.openErrorSnackBar(\r\n            \"User Not Found Or Wrong password.\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n \r\n  /**\r\n   * Customer OTP post method\r\n   */\r\n  sendOtp() {\r\n    // this.spinner.show();\r\n    let data = {\r\n      mobile: this.custForm.controls.username.value,\r\n    };\r\n    this.isLoginBtn = true;\r\n    this.http\r\n      .post(environment.apiUrl + \"users/sendCustomerOtp\", data)\r\n      .subscribe(\r\n        (res) => {\r\n          // this.spinner.hide();\r\n          this.isLoginBtn = false;\r\n          this.isOtpField = true;\r\n        },\r\n        (err) => {\r\n          // this.spinner.hide();\r\n          this.isLoginBtn = false;\r\n          this.toastService.openErrorSnackBar(\r\n            \"Number Not Registered Or Invalid Number\"\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Customer Login and OTP verify\r\n   */\r\n  verifyOtp() {\r\n    // this.spinner.show();\r\n    this.isLoginBtn = true;\r\n    let data = {\r\n      mobile: this.custForm.controls.username.value,\r\n      type: \"1\",\r\n      mobileotp: this.custForm.controls.mobileOtp.value,\r\n    };\r\n    // this.http.post(environment.apiUrl + UrlConstants.verifyCustomerOtp, data)\r\n    //   .subscribe(res => {\r\n    //     if (res) {\r\n    //       // this.spinner.hide();\r\n    //       this.isLoginBtn = false;\r\n    //       let data = {\r\n    //         mobile: this.custForm.controls.username.value,\r\n    //         mobileotp: this.custForm.controls.mobileOtp.value\r\n    //       }\r\n    this.authService.custLogin(data).subscribe((res) => {\r\n      if (this.UserDatacomplte) {\r\n        this.router.navigate([\"pages/customer/customer-dashboard\"]);\r\n        this.toastService.openSnackBar(\"Login Successfully\");\r\n      } else {\r\n        this.toastService.openSnackBar(\"Fill All Required Fields.\");\r\n        this.router.navigate([\"pages/customer/customer-profile-setting\"]);\r\n      }\r\n    });\r\n    //   }\r\n    // }, (err) => {\r\n    //   // this.spinner.hide();\r\n    //   this.isLoginBtn = false;\r\n    //   this.toastService.openErrorSnackBar(\"Invalid Otp\")\r\n    // })\r\n  }\r\n\r\n  /**\r\n   * Client OTP veify\r\n   */\r\n  verifyClientOtp() {\r\n    // this.spinner.show();\r\n    this.isLoginBtn = true;\r\n    const data = {\r\n      email: this.clientForm.controls.username.value,\r\n      emailotp: this.otpClientData.controls.emailotp.value,\r\n    };\r\n    this.otpVerify.verifyCLientOtp(data).then(\r\n      () => {\r\n        this.isLoginBtn = false;\r\n        // this.spinner.hide();\r\n        this.isVerifyOtp = false;\r\n      },\r\n      (err) => {\r\n        this.isLoginBtn = false;\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * Customer Resend OTP\r\n   */\r\n  customerLoginResendOtp() {\r\n    // this.spinner.show();\r\n    this.isLoginBtn = true;\r\n    let d = {\r\n      mobile: this.custForm.controls.username.value,\r\n    };\r\n    this.loginService.postSendOtp(d).then(\r\n      (res) => {\r\n        // this.spinner.hide();\r\n        this.isLoginBtn = false;\r\n        this.resend = res;\r\n      },\r\n      (err) => {\r\n        this.isLoginBtn = false;\r\n      }\r\n    );\r\n    this.messageSuccess = true;\r\n    setTimeout(() => {\r\n      //<<<---using ()=> syntax\r\n      this.messageSuccess = false;\r\n    }, 120000);\r\n  }\r\n  f() {\r\n    console.log(\"this.custForm.controls\", this.custForm.controls);\r\n    return this.custForm.controls;\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-5 py-3 position-relative\">\r\n                <!-- <img class=\"bg-auth-circle-shape\" src=\"../../../assets/img/icons/spot-illustrations/bg-shape.png\" alt=\"\" width=\"250\">\r\n                <img class=\"bg-auth-circle-shape-2\" src=\"../../../assets/img/icons/spot-illustrations/shape-1.png\" alt=\"\" width=\"150\"> -->\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"col-md-5 text-center bg-card-gradient\">\r\n                                <div class=\"position-relative p-4 pt-md-5 pb-md-7 light\">\r\n                                    <!-- <div class=\"bg-holder bg-auth-card-shape\" style=\"background-image:url(../../../assets/img/icons/spot-illustrations/half-circle.png);\"> -->\r\n                                    <!-- </div> -->\r\n                                    <!--/.bg-holder-->\r\n\r\n                                    <div class=\"z-index-1 position-relative\">\r\n                                        <!-- <a class=\"link-light mb-4 font-sans-serif fs-4 d-inline-block fw-bolder\">iCeipts</a> -->\r\n                                        <p class=\"opacity-75 text-white\">Effortlessly efficient</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt-3 mb-4 mt-md-4 mb-md-5 light\">\r\n                                    <p class=\"mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75\">Read our <a class=\"text-decoration-underline text-white\">terms</a> and <a class=\"text-decoration-underline text-white\">conditions </a></p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-7 d-flex flex-center\">\r\n                                <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                    <div class=\"text-center\"><img class=\"d-block mx-auto mb-4\" src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\" alt=\"shield\" width=\"100\" />\r\n                                        <h3>See you again!</h3>\r\n                                        <p>Thanks for using iCeipts. You are <br />now successfully signed out.</p><a class=\"btn btn-primary btn-sm mt-3\" href=\"#/auth/login\"><span class=\"fas fa-chevron-left me-1\" data-fa-transform=\"shrink-4 down-1\"></span>Return to Login</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-password-reset',\r\n  templateUrl: './password-reset.component.html',\r\n  styleUrls: ['./password-reset.component.scss']\r\n})\r\nexport class PasswordResetComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-5 py-3 position-relative\"><img class=\"bg-auth-circle-shape\" src=\"../../../assets/img/icons/spot-illustrations/bg-shape.png\" alt=\"\" width=\"250\"><img class=\"bg-auth-circle-shape-2\" src=\"../../../assets/img/icons/spot-illustrations/shape-1.png\" alt=\"\" width=\"150\">\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient\" style=\"\r\n                            display: flex; align-items: stretch;\r\n                            width:48.8%;\r\n                            height:700px;\r\n                            background-size:contain;\r\n                            background-position: center center;\r\n                            background: linear-gradient(0deg, rgba(17, 1, 82, 0.7), rgba(17, 1, 82, 0.7)), url(../../../assets/img/login-img/8.png);;\r\n                            \">\r\n                                  <div class=\"position-relative p-3\">\r\n                                      <div class=\"z-index-1 position-relative p-3\">\r\n  \r\n                                          <p class=\"mt-3 d-flex\">\r\n                                              <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                  alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                          </p>\r\n                                          <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                          <br><br>\r\n                                          <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                              The technology that looks imposible today will<br>be part of our life\r\n                                              tomorrow. Iceipts technology<br>creating difference.\r\n                                          </p>\r\n                                          \r\n                                          <p class=\"opacity-75 text-white d-flex\">Sibanee kar</p>\r\n                                      </div>\r\n                                  </div>\r\n                                <!-- <div class=\"position-relative p-4 pt-md-5 pb-md-7 light\">\r\n                                    <div class=\"bg-holder bg-auth-card-shape\" style=\"background-image:url(../../../assets/img/icons/spot-illustrations/half-circle.png);\">\r\n                                    </div> -->\r\n                                    <!--/.bg-holder-->\r\n\r\n                                    <!-- <div class=\"z-index-1 position-relative\"><a class=\"link-light mb-4 font-sans-serif fs-4 d-inline-block fw-bolder\">falcon</a>\r\n                                        <p class=\"opacity-75 text-white\">With the power of Falcon, you can now focus only on functionaries for your digital products, while leaving the UI design on us!</p>\r\n                                    </div>\r\n                                </div> -->\r\n                                <!-- <div class=\"mt-3 mb-4 mt-md-4 mb-md-5 light\">\r\n                                    <p class=\"mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75\">Read our <a class=\"text-decoration-underline text-white\">terms</a> and <a class=\"text-decoration-underline text-white\">conditions </a></p>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-7 d-flex flex-center\" style=\"width:50%\">\r\n                                <div class=\"p-4 p-md-5 flex-grow-1 form-body\">\r\n                                    <h3 style=\"font-size: 26px;\"><b>Reset password</b></h3>\r\n                                    <form class=\"mt-3\">\r\n                                        <div class=\"mb-3\">\r\n                                            <label class=\"form-label\" for=\"card-reset-password\">New Password</label>\r\n                                            <input class=\"form-control\" type=\"password\" id=\"card-reset-password\" />\r\n                                        </div>\r\n                                        <div class=\"mb-3\">\r\n                                            <label class=\"form-label\" for=\"card-reset-confirm-password\">Confirm\r\n                                                Password</label>\r\n                                            <input class=\"form-control\" type=\"password\" id=\"card-reset-confirm-password\"/>                                            \r\n                                        </div>\r\n                                        <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\" name=\"submit\" style=\"background: #110152;\">Set password</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PayumoneyPaymentService } from 'src/app/core/services/payumoney-payment.service';\r\n\r\n@Component({\r\n  selector: 'app-payment-failure',\r\n  templateUrl: './payment-failure.component.html',\r\n  styleUrls: ['./payment-failure.component.scss']\r\n})\r\nexport class PaymentFailureComponent implements OnInit {\r\n\r\n  constructor(public payumoneyPaymentService:PayumoneyPaymentService,\r\n    public router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getPayment();\r\nthis.postPayment()\r\n  }\r\n  getPayment(){\r\n    this.payumoneyPaymentService.getPaymentSuccess({}).then((res)=>{\r\n  this.router.navigate(['/auth/payment-failure'])\r\n    })\r\n    \r\n  \r\n  }\r\n  postPayment(){\r\n    this.payumoneyPaymentService.postPaymentSuccess({}).then((res)=>{\r\n  this.router.navigate(['/auth/payment-failure'])\r\n    })\r\n   \r\n  }\r\n\r\n}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid p-4\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6 mx-auto mt-5\">\r\n                    <div class=\"payment\">\r\n                        <div class=\"payment_header\">\r\n                            <div class=\"check\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i></div>\r\n                        </div>\r\n                        <div class=\"content\">\r\n\r\n                            <h1> Opps ! Something Went Wrong </h1>\r\n                            <p>Transaction Failed</p>\r\n                            <a routerLink=\"/auth/subscription\">Go to Home</a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid p-4\">\r\n\r\n        <div class=\"card my-3\">\r\n            <div class=\"bg-holder d-none d-lg-block bg-card\" style=\"\r\n          background-image: url(../../assets/img/icons/spot-illustrations/corner-4.png);\r\n        \"></div>\r\n            <!--/.bg-holder-->\r\n\r\n            <div class=\"card-body position-relative\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-8\">\r\n                        <h3 class=\"fs--1\">My Plan Details</h3>\r\n\r\n                        <div class=\"justify-content-start\">\r\n                            <div>\r\n                                <p class=\"mt-2 fs--1\">Current Plan - {{planName}}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mt-2 fs--1\">Validity - {{validity}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <p class=\"mt-2 fs--1\">Description - {{description}}</p>\r\n                        <table class=\"table fs--1\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Feature</th>\r\n\r\n                                    <th scope=\"col\">price</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngFor=\"let feature of features;let i=index\">\r\n                                <tr class=\"fs--1\">\r\n                                    <th scope=\"row\">{{i+1}}</th>\r\n                                    <td>{{feature.featureName|titlecase}}</td>\r\n                                    <td>{{feature.price}}</td>\r\n\r\n                                </tr>\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n\r\n\r\n                        <h4 class=\"mt-2 fs--1\">Grand Total - {{totalAmount}}</h4>\r\n\r\n                        <!-- <div class=\"dropdown\">\r\n                            <button class=\"btn btn-link dropdown-toggle ps-0 btn-sm\" id=\"change-plan\" type=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Change plan\r\n                            </button>\r\n                            <div class=\"dropdown-menu py-3\" aria-labelledby=\"change-plan\" style=\"min-width: 15rem\">\r\n                                <div class=\"dropdown-item px-3 py-2\">\r\n                                    <span class=\"d-flex justify-content-between fs--1 text-black\"><span\r\n                                            class=\"fw-semi-bold\">Standard License</span><span>$59.00</span></span>\r\n                                    <ul class=\"list-unstyled ps-1 my-2 fs--1\">\r\n                                        <li>\r\n                                            <span class=\"fas fa-circle\" data-fa-transform=\"shrink-11\"></span><span\r\n                                                class=\"ms-1\">Use for a single product</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span class=\"fas fa-circle\" data-fa-transform=\"shrink-11\"></span><span\r\n                                                class=\"ms-1\">Non-paying users only</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p class=\"fs--2 mb-0\">\r\n                                        Read the full <a href=\"#!\">Standard License </a>\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"dropdown-divider my-0\"></div>\r\n                                <div class=\"dropdown-item px-3 py-2\">\r\n                                    <span class=\"d-flex justify-content-between fs--1 text-black\"><span\r\n                                            class=\"fw-semi-bold\">Extended License</span><span>$99.00</span></span>\r\n                                    <ul class=\"list-unstyled ps-1 my-2 fs--1\">\r\n                                        <li>\r\n                                            <span class=\"fas fa-circle\" data-fa-transform=\"shrink-11\"></span><span\r\n                                                class=\"ms-1\">Unlimited websites</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span class=\"fas fa-circle\" data-fa-transform=\"shrink-11\"></span><span\r\n                                                class=\"ms-1\">Paying users allowed</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <p class=\"fs--2 mb-0\">\r\n                                        Read the full <a href=\"#!\">Extended License</a>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row g-3 mb-3\">\r\n            <div class=\"col-lg-8\">\r\n                <div class=\"col-md-12 text-center\">\r\n                    <div class=\"card h-100 bg-light text-dark\">\r\n                        <div class=\"card-header\">\r\n                            <h5 class=\"mb-0\">Payment Form</h5>\r\n                        </div>\r\n\r\n                        <div class=\"card-body\">\r\n                            <form ngNoForm [action]='url' method='post'>\r\n                                <div *ngIf=\"this.submitObj != null\">\r\n                                    <!-- <input class=\"form-control\" type=\"text\" name=\"service_provider\" value=\"payu_paisa\"> -->\r\n                                    <input class=\"form-control\" type=\"hidden\" name=\"key\"\r\n                                        [(ngModel)]=\"this.submitObj.key\" />\r\n                                    <input class=\"form-control\" type=\"text\" name=\"txnid\"\r\n                                        [(ngModel)]=\"this.submitObj.txnId\" />\r\n                                    <input class=\"form-control\" type=\"text\" (keyup)=\"setHash()\" name=\"productinfo\"\r\n                                        [(ngModel)]=\"this.planName\" />\r\n                                    <input class=\"form-control\" type=\"text\" (keyup)=\"setHash()\" name=\"amount\"\r\n                                        [(ngModel)]=\"this.totalAmount\" />\r\n                                    <input class=\"form-control\" type=\"text\" (keyup)=\"setHash()\" name=\"email\"\r\n                                        [(ngModel)]=\"this.submitObj.email\" />\r\n                                    <input class=\"form-control\" type=\"text\" (keyup)=\"setHash()\" name=\"firstname\"\r\n                                        [(ngModel)]=\"this.submitObj.firstName\" />\r\n                                    <input class=\"form-control\" type=\"text\" (keyup)=\"setHash()\" name=\"lastname\"\r\n                                        [(ngModel)]=\"this.submitObj.lastName\" />\r\n                                    <input class=\"form-control\" type=\"text\" name=\"surl\"\r\n                                        [(ngModel)]=\"this.submitObj.surl\" />\r\n                                    <input class=\"form-control\" type=\"text\" name=\"furl\"\r\n                                        [(ngModel)]=\"this.submitObj.furl\" />\r\n                                    <input class=\"form-control\" type=\"text\" (keyup)=\"setHash()\" name=\"phone\"\r\n                                        [(ngModel)]=\"this.submitObj.phone\">\r\n                                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"this.submitObj.udf1\"\r\n                                        name=\"udf1\">\r\n                                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"this.submitObj.udf2\"\r\n                                        name=\"udf2\">\r\n                                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"this.submitObj.udf3\"\r\n                                        name=\"udf3\">\r\n                                    <input class=\"form-control\" placeholder=\"Enter Number\" type=\"text\" name=\"hash\"\r\n                                        [(ngModel)]=\"this.submitObj.hash\" />\r\n\r\n                                    <input class=\"btn btn-primary mt-3\" type=\"submit\" value=\"Pay\">\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n                <div class=\"card h-100\">\r\n                    <div class=\"card-header\">\r\n                        <h5 class=\"mb-0\">Billing</h5>\r\n                    </div>\r\n                    <div class=\"card-body bg-light\">\r\n                        <select class=\"form-select mb-3\" aria-label=\"Default select example\">\r\n                            <option selected=\"\">Monthly Plan</option>\r\n                            <option value=\"1\">Annual Plan</option>\r\n                        </select>\r\n                        <div class=\"d-flex justify-content-between fs--1 mb-1\">\r\n                            <p class=\"mb-0\">Due in 30 days</p><span>$375.00</span>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between fs--1 mb-1 text-success\">\r\n                            <p class=\"mb-0\">Annual saving</p><span>$75.00/yr</span>\r\n                        </div>\r\n                        <hr />\r\n                        <h5 class=\"d-flex justify-content-between\"><span>Due today</span><span>$0.00</span></h5>\r\n                        <p class=\"fs--1 text-600\">Once you start your trial, you will have 30 days to use Falcon Premium\r\n                            for free. After 30 days you’ll be charged based on your selected plan.</p>\r\n                        <button class=\"btn btn-primary d-block w-100\" type=\"submit\"><span\r\n                                class=\"fa fa-lock me-2\"></span>Start free trial</button>\r\n                        <div class=\"text-center mt-2\"><small class=\"d-inline-block\">By continuing, you are agreeing to\r\n                                our subscriber <a href=\"#!\">terms</a> and will be charged at the end of the trial.\r\n                            </small></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"mb-0\">Frequently asked questions</h5>\r\n            </div>\r\n            <div class=\"card-body bg-light pb-0\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <h5 class=\"fs-0\">How does Falcon's pricing work?</h5>\r\n                        <p class=\"fs--1\">\r\n                            The free version of Falcon is available for teams of up to 15 people. Our Falcon Premium\r\n                            plans of 15 or fewer qualify for a small team discount. As your team grows to 20 users or\r\n                            more and gets more value out of Falcon, you'll get closer to our standard\r\n                            monthly price per seat. The price of a paid Falcon plan is tiered, starting in groups of 5\r\n                            and 10 users, based on the number of people you have in your Team or Organization.\r\n                        </p>\r\n                        <h5 class=\"fs-0\">What forms of payment do you accept?</h5>\r\n                        <p class=\"fs--1\">\r\n                            You can purchase Falcon with any major credit card. For annual subscriptions, we can issue\r\n                            an invoice payable by bank transfer or check. Please contact us to arrange an invoice\r\n                            purchase. Monthly purchases must be paid for by credit card.\r\n                        </p>\r\n                        <h5 class=\"fs-0\">\r\n                            We need to add more people to our team. How will that be billed?\r\n                        </h5>\r\n                        <p class=\"fs--1\">\r\n                            You can add as many new teammates as you need before changing your subscription. We will\r\n                            subsequently ask you to correct your subscription to cover current usage.\r\n                        </p>\r\n                        <h5 class=\"fs-0\">How secure is Falcon?</h5>\r\n                        <p class=\"fs--1\">\r\n                            Protecting the data you trust to Falcon is our first priority. Falcon uses physical,\r\n                            procedural, and technical safeguards to preserve the integrity and security of your\r\n                            information. We regularly back up your data to prevent data loss and aid in recovery.\r\n                            Additionally, we host data in secure SSAE 16 / SOC1 certified data centers, implement\r\n                            firewalls and access restrictions on our servers to better protect your information, and\r\n                            work with third party security researchers to ensure\r\n                            our practices are secure.\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <h5 class=\"fs-0\">Will I be charged sales tax?</h5>\r\n                        <p class=\"fs--1\">\r\n                            As of May 2016, state and local sales tax will be applied to fees charged to customers with\r\n                            a billing address in the State of New York.\r\n                        </p>\r\n                        <h5 class=\"fs-0\">Do you offer discounts?</h5>\r\n                        <p class=\"fs--1\">\r\n                            We've built in discounts at each tier for teams smaller than 15 members. We also offer two\r\n                            months for free in exchange for an annual subscription.\r\n                        </p>\r\n                        <h5 class=\"fs-0\">Do you offer academic pricing?</h5>\r\n                        <p class=\"fs--1\">\r\n                            We're happy to work with student groups using Falcon. Contact Us\r\n                        </p>\r\n                        <h5 class=\"fs-0\">Is there an on-premise version of Falcon?</h5>\r\n                        <p class=\"fs--1\">\r\n                            We are passionate about the web. We don't plan to offer an internally hosted version of\r\n                            Falcon. We hope you trust us to provide a robust and secure service so you can do the work\r\n                            only your team can do.\r\n                        </p>\r\n                        <h5 class=\"fs-0\">What is your refund policy?</h5>\r\n                        <p class=\"fs--1\">\r\n                            We do not offer refunds apart from exceptions listed below. If you cancel your plan before\r\n                            the next renewal cycle, you will retain access to paid features until the end of your\r\n                            subscription period. When your subscription expires, you will lose access\r\n                            to paid features and all data associated with those features. Exceptions to our refund\r\n                            policy: canceling within 48 hours of initial charge will result in a full refund. If you\r\n                            cancel within this timeframe, you will lose access\r\n                            to paid features and associated data immediately upon canceling.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer py-3\">\r\n                <div class=\"text-center\">\r\n                    <h6 class=\"fs-0 fw-normal\">Have more questions?</h6>\r\n                    <a class=\"btn btn-falcon-primary btn-sm\" href=\"#\" data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#exampleModal\">Ask us anything</a>\r\n                </div>\r\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\"\r\n                    aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content border-0\">\r\n                            <div class=\"modal-header bg-card-gradient light\">\r\n                                <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\">\r\n                                    Ask your question\r\n                                </h5>\r\n                                <button class=\"btn-close btn-close-white text-white\" type=\"button\"\r\n                                    data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <form>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"name\">Name</label>\r\n                                        <input class=\"form-control\" id=\"name\" type=\"text\" />\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"emailModal\">Email</label>\r\n                                        <input class=\"form-control\" id=\"emailModal\" type=\"email\" />\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"question\">Question</label>\r\n                                        <textarea class=\"form-control\" id=\"question\" rows=\"4\"></textarea>\r\n                                    </div>\r\n                                </form>\r\n                                <button class=\"btn btn-primary btn-sm px-4\" type=\"submit\">\r\n                                    <span class=\"fas fa-paper-plane me-2\" aria-hidden=\"true\">\r\n                                    </span>Send\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { async } from 'rxjs/internal/scheduler/async';\r\nimport { PayumoneyPaymentService } from 'src/app/core/services/payumoney-payment.service';\r\nimport { SubscriptionService } from 'src/app/core/services/subscription.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { Constants } from 'src/app/_helpers/constant';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as uuid from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-payment-subscription',\r\n  templateUrl: './payment-subscription.component.html',\r\n  styleUrls: ['./payment-subscription.component.scss']\r\n})\r\nexport class PaymentSubscriptionComponent implements OnInit {\r\n  public basicPlanIdTwo: any;\r\n  public basicPlanIdThree: any;\r\n  public submitObj: any;\r\n  public basicPlanIdFour: any;\r\n  public premiumPlanIdFive: any;\r\n  public premiumPlanIdSix: any;\r\n  public premiumPlanIdSeven: any;\r\n  public currentUser: any;\r\n  public url = Constants.url; //\"https://secure.payu.in/_payment\"//\r\n  public basicId: any;\r\n  public planArray: any;\r\n  public description: any;\r\n  public planName: any;\r\n  public validity: any;\r\n  public features: any;\r\n  public totalAmount: any;\r\n  public subscriptionPaymentId: number;\r\n  public userSubscriptionId: number;\r\n  public data: any;\r\n\r\n  constructor(public paymentService: PayumoneyPaymentService,\r\n    public httpClient: HttpClient,\r\n    public subscriptionService: SubscriptionService,\r\n    public route: ActivatedRoute,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.paramMap.subscribe((params: ParamMap) => {\r\n      this.basicId = +params.get('id');\r\n      this.subscriptionPaymentId = +params.get('paymentId');\r\n      this.userSubscriptionId = +params.get('userSubsId');\r\n    });\r\n    this.getAllSubscriptionPlans(this.basicId);\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n  /**\r\n   * Set Payment form Data\r\n   * @param planName \r\n   * @param totalAmount \r\n   */\r\n  async setPaymentFormData(planName?: any, totalAmount?: any) {\r\n    let obj = {\r\n      key: \"oZ7oo9\",\r\n      txnId: uuid.v4(),\r\n      productinfo: planName,\r\n      amount: totalAmount,\r\n      surl: environment.apiUrl + \"subscription/pay\",\r\n      furl: environment.apiUrl + \"subscription/pay\",\r\n      phone: \"1234567890\",\r\n      hash: \"\",\r\n      udf1: String(this.currentUser.id),\r\n      udf2: String(this.userSubscriptionId),\r\n      udf3: String(this.subscriptionPaymentId),\r\n      udf4: \"\",\r\n      udf5: \"\",\r\n      email: this.currentUser.email,\r\n      firstName: this.currentUser.firstName,\r\n      lastName: this.currentUser.lastName\r\n    }\r\n    \r\n    this.submitObj = obj;\r\n    console.log(\"submit OBJ\",this.submitObj)\r\n    await this.setHash();\r\n  }\r\n\r\n  /**\r\n   * Set Hash code\r\n   */\r\n  setHash() {\r\n    this.subscriptionService.getPaymentHash(this.submitObj, \"\").then((res) => {\r\n      this.submitObj.hash = res\r\n    });\r\n\r\n    // this.submitObj.hash = \"0d3f15771316a9b2fc2ff3a52305279dd3792a6078db05108c01b893ba619f87aa32e34df0275bc5528d1029a9473070cb5a108205efbef39f895439306757eb\"\r\n  }\r\n  getPayment() {\r\n    this.paymentService.getPaymentSuccess({}).then((res) => {\r\n      this.router.navigate(['/auth/payment-success'])\r\n    })\r\n  }\r\n  //get all main plans\r\n  getAllSubscriptionPlans(basicId) {\r\n    this.planName;\r\n    this.subscriptionService.getPlansById({}, basicId).then((res) => {\r\n\r\n      this.data = res;\r\n      this.planArray = res.data;\r\n      this.description = res.data.description;\r\n      this.planName = res.data.planName;\r\n      this.totalAmount = res.data.total_amount\r\n      this.validity = res.data.validity;\r\n      this.features = res.data.features;\r\n      this.setPaymentFormData(this.planName, this.totalAmount);\r\n    });\r\n  }\r\n  pay() {\r\n    this.router.navigate[('/pages')]\r\n  }\r\n  onSuccessPayment(response) {\r\n    this.toastService.openSnackBar(\"Success Payment\" + \" \" + response)\r\n    if (response.url) {\r\n      // Render PayUmoney payment gateway page\r\n      window.location.href = response.url;\r\n    }\r\n  }\r\n\r\n  onFailurePayment(error) {\r\n    this.toastService.openSnackBar(\"Failure Payment\" + \" \" + error)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid p-4\">\r\n        <html>\r\n\r\n        <head>\r\n            <link href=\"https://fonts.googleapis.com/css?family=Nunito+Sans:400,400i,700,900&display=swap\"\r\n                rel=\"stylesheet\">\r\n        </head>\r\n        <style>\r\n            body {\r\n                text-align: center;\r\n                padding: 40px 0;\r\n                background: #EBF0F5;\r\n            }\r\n\r\n            h1 {\r\n                color: #88B04B;\r\n                font-family: \"Nunito Sans\", \"Helvetica Neue\", sans-serif;\r\n                font-weight: 900;\r\n                font-size: 40px;\r\n                margin-bottom: 10px;\r\n            }\r\n\r\n            p {\r\n                color: #404F5E;\r\n                font-family: \"Nunito Sans\", \"Helvetica Neue\", sans-serif;\r\n                font-size: 20px;\r\n                margin: 0;\r\n            }\r\n\r\n            i {\r\n                color: #9ABC66;\r\n                font-size: 100px;\r\n                line-height: 200px;\r\n                margin-left: -15px;\r\n            }\r\n\r\n            .card {\r\n                background: white;\r\n                padding: 60px;\r\n                border-radius: 4px;\r\n                box-shadow: 0 2px 3px #C8D0D8;\r\n                display: inline-block;\r\n                margin: 0 auto;\r\n            }\r\n        </style>\r\n\r\n        <body>\r\n            <div class=\"card\">\r\n                <div style=\"border-radius:200px; height:200px; width:200px; background: #F8FAF5; margin:0 auto;\">\r\n                    <i class=\"checkmark\">✓</i>\r\n                </div>\r\n                <h1>Success</h1>\r\n                <p>Payment done successfully<br /> Thank you!!</p>\r\n                <div class=\"text-center m-4\">\r\n                    <button class=\"btn btn-block btn-success\" (click)=\"printAndOpenReceipt()\">Print Receipt</button>\r\n                </div>\r\n                <div class=\"text-center m-4\" *ngIf=\"currentUserDetails.userType == 'CLIENT'\">\r\n                    <button class=\"btn btn-block btn-success\" routerLink=\"/pages/dashboard\"\r\n                        routerLinkActive=\"router-link-active\">Go to Dashboard</button>\r\n                </div>\r\n                <div class=\"text-center m-4\" *ngIf=\"currentUserDetails.userType != 'CLIENT'\">\r\n                    <button class=\"btn btn-block btn-success\" routerLink=\"/pages/customer/customer-dashboard\"\r\n                        routerLinkActive=\"router-link-active\">Continue Shopping</button>\r\n                </div>\r\n            </div>\r\n\r\n        </body>\r\n\r\n        </html>\r\n    </div>\r\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PayumoneyPaymentService } from 'src/app/core/services/payumoney-payment.service';\r\n\r\n@Component({\r\n  selector: 'app-payment-success',\r\n  templateUrl: './payment-success.component.html',\r\n  styleUrls: ['./payment-success.component.scss']\r\n})\r\nexport class PaymentSuccessComponent implements OnInit {\r\n  public currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n\r\n  constructor(public payumoneyPaymentService: PayumoneyPaymentService,\r\n  public router: Router) { }\r\n  public currentUserDetails = this.currentUser\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  printAndOpenReceipt() {\r\n    // let url =  this.router.navigate(['/pages/print-receipt'])\r\n    window.open('/#/auth/print-receipt');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-print-receipt',\r\n  templateUrl: './print-receipt.component.html',\r\n  styleUrls: ['./print-receipt.component.scss']\r\n})\r\nexport class PrintReceiptComponent implements OnInit {\r\n  public noPrint: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onPrint() {\r\n    const printContents = document.getElementById('panel').innerHTML;\r\n    const originalContents = document.body.innerHTML;\r\n    //document.body.innerHTML = printContents;\r\n    window.print();\r\n    //document.body.innerHTML = originalContents;\r\n    //let printContent = document.getElementById(\"panel\");\r\n    // const WindowPrt = window.open('', '', 'left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0');\r\n    //WindowPrt.document.write(printContent.innerHTML);\r\n    // WindowPrt.document.close();\r\n    // WindowPrt.focus();\r\n    // window.document.write(printContent.innerHTML)\r\n    //window.print();\r\n    // WindowPrt.close();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"card mb-3\">\r\n    <div class=\"card-body\">\r\n      <div class=\"row justify-content-between align-items-center\">\r\n        <div class=\"col-md\">\r\n          <h5 class=\"mb-2 mb-md-0\">Order #AD20294</h5>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button class=\"btn btn-falcon-default btn-sm me-1 mb-2 mb-sm-0\" type=\"button\"><span\r\n              class=\"fas fa-arrow-down me-1\"> </span>Download (.pdf)</button>\r\n          <button class=\"btn btn-falcon-default btn-sm me-1 mb-2 mb-sm-0\" type=\"button\" (click)=\"onPrint()\"><span\r\n              class=\"fas fa-print me-1\"> </span>Print</button>\r\n          <button class=\"btn btn-falcon-success btn-sm mb-2 mb-sm-0\" type=\"button\"><span\r\n              class=\"fas fa-dollar-sign me-1\"></span>Receive Payment</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card mb-3\" id=\"panel\">\r\n    <div class=\"card-body\">\r\n      <div class=\"row align-items-center text-center mb-3\">\r\n        <!-- <div class=\"col-sm-6 text-sm-start\"><img src=\"../../assets/img/logos/logo-invoice.png\" alt=\"invoice\" width=\"150\" /></div> -->\r\n        <div class=\"col text-sm-center mt-3 mt-sm-0\">\r\n          <h2 class=\"mb-3\">Tax Invoice</h2>\r\n          <h5>Falcon Design Studio</h5>\r\n          <p class=\"fs--1 mb-0\">156 University Ave, Toronto<br />On, Canada, M5H 2H7</p>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <!-- <hr /> -->\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" style=\"padding-left: 16px; padding-right: 16px;\">\r\n        <div class=\"col-sm-4 col-lg-4 col-md-4 border shadow-none p-0\">\r\n            <h5 class=\"bg-primary text-white p-1\"> Bill To.</h5>\r\n          <div class=\"p-3\">\r\n            M/S OM KISHAN\r\n            MANDIRA BAGICHA PARA, KHATA NO. 189/1832,\r\n            MADAN MOHAN PARA, MAIN ROAD, BHAWANIPATNA,\r\n            ODISHA-766001\r\n            Contact No.: 7008352006\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-4 col-lg-4 col-md-4 border shadow-none p-0\">\r\n          <h5 class=\"bg-primary text-white p-1\"> Ship To.</h5>\r\n        <div class=\"p-3\">\r\n          MANDIRA BAGICHA PARA, KHATA NO. 189/1832,\r\n          MADAN MOHAN PARA, MAIN ROAD, BHAWANIPATNA,\r\n          ODISHA-766001\r\n        </div>\r\n      </div>\r\n        <div class=\"col-sm-4 col-lg-4 col-md-4 border p-0\">\r\n          <h5 class=\"bg-primary text-white p-1\"> Place of Supply</h5>\r\n          <div class=\"p-3\">\r\n            21-Odisha\r\n            Invoice No.: 211001\r\n            Date: 06-10-2021\r\n            E-way Bill number: 871182745856\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n          <h6 class=\"text-500\">Invoice to</h6>\r\n          <h5>Antonio Banderas</h5>\r\n          <p class=\"fs--1\">1954 Bloor Street West<br />Torronto ON, M6P 3K9<br />Canada</p>\r\n          <p class=\"fs--1\"><a href=\"mailto:example@gmail.com\">example@gmail.com</a><br /><a\r\n              href=\"tel:444466667777\">+4444-6666-7777</a></p>\r\n        </div>\r\n        <div class=\"col-sm-auto ms-auto\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-sm table-borderless fs--1\">\r\n              <tbody>\r\n                <tr>\r\n                  <th class=\"text-sm-end\">Invoice No:</th>\r\n                  <td>14</td>\r\n                </tr>\r\n                <tr>\r\n                  <th class=\"text-sm-end\">Order Number:</th>\r\n                  <td>AD20294</td>\r\n                </tr>\r\n                <tr>\r\n                  <th class=\"text-sm-end\">Invoice Date:</th>\r\n                  <td>2018-09-25</td>\r\n                </tr>\r\n                <tr>\r\n                  <th class=\"text-sm-end\">Payment Due:</th>\r\n                  <td>Upon receipt</td>\r\n                </tr>\r\n                <tr class=\"alert-success fw-bold\">\r\n                  <th class=\"text-sm-end\">Amount Due:</th>\r\n                  <td>$19688.40</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"table-responsive scrollbar mt-4 fs--1\">\r\n        <table class=\"table table-striped border-bottom\">\r\n          <thead class=\"light\">\r\n            <tr class=\"bg-primary text-white dark__bg-1000\">\r\n              <th class=\"border-0\">Products</th>\r\n              <th class=\"border-0 text-center\">Quantity</th>\r\n              <th class=\"border-0 text-end\">Rate</th>\r\n              <th class=\"border-0 text-end\">Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td class=\"align-middle\">\r\n                <h6 class=\"mb-0 text-nowrap\">Platinum web hosting package</h6>\r\n                <p class=\"mb-0\">Down 35mb, Up 100mb</p>\r\n              </td>\r\n              <td class=\"align-middle text-center\">2</td>\r\n              <td class=\"align-middle text-end\">$65.00</td>\r\n              <td class=\"align-middle text-end\">$130.00</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"align-middle\">\r\n                <h6 class=\"mb-0 text-nowrap\">2 Page website design</h6>\r\n                <p class=\"mb-0\">Includes basic wireframes and responsive templates</p>\r\n              </td>\r\n              <td class=\"align-middle text-center\">1</td>\r\n              <td class=\"align-middle text-end\">$2,100.00</td>\r\n              <td class=\"align-middle text-end\">$2,100.00</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"align-middle\">\r\n                <h6 class=\"mb-0 text-nowrap\">Mobile App Development</h6>\r\n                <p class=\"mb-0\">Includes responsive navigation</p>\r\n              </td>\r\n              <td class=\"align-middle text-center\">8</td>\r\n              <td class=\"align-middle text-end\">$5,00.00</td>\r\n              <td class=\"align-middle text-end\">$4,000.00</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"align-middle\">\r\n                <h6 class=\"mb-0 text-nowrap\">Web App Development</h6>\r\n                <p class=\"mb-0\">Includes react spa</p>\r\n              </td>\r\n              <td class=\"align-middle text-center\">6</td>\r\n              <td class=\"align-middle text-end\">$2,000.00</td>\r\n              <td class=\"align-middle text-end\">$12,000.00</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <!-- Old total div -->\r\n      <!-- <div class=\"row justify-content-end\">\r\n        <div class=\"col-auto\">\r\n          <table class=\"table table-sm table-borderless fs--1 text-end\">\r\n            <tr>\r\n              <th class=\"text-900\">Subtotal:</th>\r\n              <td class=\"fw-semi-bold\">$18,230.00 </td>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"text-900\">Tax 8%:</th>\r\n              <td class=\"fw-semi-bold\">$1458.40</td>\r\n            </tr>\r\n            <tr class=\"border-top\">\r\n              <th class=\"text-900\">Total:</th>\r\n              <td class=\"fw-semi-bold\">$19688.40</td>\r\n            </tr>\r\n            <tr class=\"border-top border-top-2 fw-bolder text-900\">\r\n              <th>Amount Due:</th>\r\n              <td>$19688.40</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6 col-md-6 col-lg-6\">\r\n          <div class=\"table-responsive scrollbar fs--1\">\r\n            <table class=\"table table-striped\">\r\n              <thead class=\"light\">\r\n                <tr class=\"bg-primary text-white dark__bg-1000\">\r\n                  <th class=\"border-0\">Tax Type</th>\r\n                  <th class=\"border-0 text-center\">Taxable Amount</th>\r\n                  <th class=\"border-0 text-end\">Rate</th>\r\n                  <th class=\"border-0 text-end\">Tax Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td class=\"align-middle\">SGST</td>\r\n                  <td class=\"align-middle text-center\">$65.00</td>\r\n                  <td class=\"align-middle text-end\">2.5%</td>\r\n                  <td class=\"align-middle text-end\">$130.00</td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"align-middle\">CGST</td>\r\n                  <td class=\"align-middle text-center\">$65.00</td>\r\n                  <td class=\"align-middle text-end\">2.5%</td>\r\n                  <td class=\"align-middle text-end\">$130.00</td>\r\n                </tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-6 col-lg-6\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h6>Subtotal</h6>\r\n            <p>$650</p>\r\n          </div>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h6>Total</h6>\r\n            <p>$650</p>\r\n          </div>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h6>Received</h6>\r\n            <p>$650</p>\r\n          </div>\r\n          <div class=\"d-flex justify-content-between\">\r\n            <h6>Balance</h6>\r\n            <p>$650</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-footer bg-light\">\r\n      <p class=\"fs--1 mb-0\"><strong>Notes: </strong>We really appreciate your business and if there’s anything else we\r\n        can\r\n        do, please let us know!</p>\r\n    </div>\r\n  </div>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { OtpVerifyService } from 'src/app/core/services/otp-verify.service';\r\nimport { RoleSignupService } from 'src/app/core/services/role-signup.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-role-selection',\r\n  templateUrl: './role-selection.component.html',\r\n  styleUrls: ['./role-selection.component.scss']\r\n})\r\nexport class RoleSelectionComponent implements OnInit {\r\n  // CustLogintoggle: boolean;\r\n\r\n  constructor(private router: Router,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private loginService: LoginService,\r\n    public otpVerify: OtpVerifyService,\r\n    private http: HttpClient,\r\n    public roleSignupService: RoleSignupService,\r\n    private spinner: NgxSpinnerService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCustomerClick() {\r\n    this.router.navigate(['/auth/login'], { queryParams: { CustLogintoggle: 'true' } });\r\n  }\r\n  \r\n  onRetailerClick() {\r\n    this.router.navigate(['/auth/login'], { queryParams: { CustLogintoggle: 'false' } });\r\n  }\r\n\r\n}\r\n","<ngx-spinner bdOpacity=\"1\" bdColor=\"rgba(97,197,212,0.07)\" size=\"medium\" color=\"#dd4b39\" type=\"ball-spin-clockwise\"\r\n    fullScreen=\"true\">\r\n    <p style=\"color: #61c5d4;\">Loading..</p>\r\n</ngx-spinner>\r\n<main class=\"main\" id=\"top\" >\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-6 py-3 position-relative\">\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient \">\r\n                                <div class=\"position-relative pt-md-3 pb-md-7 light\">\r\n                                    <div class=\"z-index-1 position-relative p-4\">\r\n\r\n                                        <p class=\"mt-2 d-flex\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                        </p>\r\n                                        <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                        <br><br>\r\n                                        <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                            The technology that looks imposible today will<br>be part of our life\r\n                                            tomorrow. Iceipts technology<br>creating difference.\r\n                                        </p>\r\n                                        <div class=\"opacity-75 text-white d-flex justify-content-end\">\r\n                                            <div class=\"svg-img\">\r\n                                                <svg width=\"22\" height=\"21\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M21 0H33.5V33H0V20.5H21V0Z\" fill=\"white\"/>\r\n                                                    </svg>\r\n                                            </div>   \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div\r\n                                class=\"col-sm-7 col-md-6 col-lg-6 form-box d-flex justify-content-space flex-between-center\">\r\n                                <div class=\"demo mx-5\">\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                        <div class=\"row flex-between-center\">\r\n                                            <div class=\"col-12 \">\r\n                                                <h1 style=\"font-weight: 700;color: #000000;\">\r\n                                                    <b>Join Us!</b>\r\n                                                </h1>\r\n                                            </div>\r\n                                            <div class=\"col-12 fs-0 my-2 text-black\">\r\n                                                <span class=\"mb-0 undefined\">\r\n                                                    To begin this journey, tell us what type of user you are...\r\n                                                </span>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"button-selection mb-2 mt-3\" (click)=\"onCustomerClick()\">\r\n                                            <button mat-flat-button>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-2 mt-2\" >\r\n                                                        <svg width=\"39\" height=\"39\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M26 0L50.7275 17.9656L41.2824 47.0344H10.7176L1.27253 17.9656L26 0Z\" fill=\"#110152\"/>\r\n                                                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.7204 28.8871C20.5018 28.1057 21.5616 27.6667 22.6667 27.6667H29.3333C30.4384 27.6667 31.4982 28.1057 32.2796 28.8871C33.061 29.6685 33.5 30.7283 33.5 31.8334V33.5C33.5 33.9603 33.1269 34.3334 32.6667 34.3334C32.2064 34.3334 31.8333 33.9603 31.8333 33.5V31.8334C31.8333 31.1703 31.5699 30.5344 31.1011 30.0656C30.6323 29.5967 29.9964 29.3334 29.3333 29.3334H22.6667C22.0036 29.3334 21.3677 29.5967 20.8989 30.0656C20.4301 30.5344 20.1667 31.1703 20.1667 31.8334V33.5C20.1667 33.9603 19.7936 34.3334 19.3333 34.3334C18.8731 34.3334 18.5 33.9603 18.5 33.5V31.8334C18.5 30.7283 18.939 29.6685 19.7204 28.8871Z\" fill=\"white\"/>\r\n                                                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.0002 19.3334C24.6195 19.3334 23.5002 20.4526 23.5002 21.8334C23.5002 23.2141 24.6195 24.3334 26.0002 24.3334C27.3809 24.3334 28.5002 23.2141 28.5002 21.8334C28.5002 20.4526 27.3809 19.3334 26.0002 19.3334ZM21.8335 21.8334C21.8335 19.5322 23.699 17.6667 26.0002 17.6667C28.3013 17.6667 30.1668 19.5322 30.1668 21.8334C30.1668 24.1345 28.3013 26 26.0002 26C23.699 26 21.8335 24.1345 21.8335 21.8334Z\" fill=\"white\"/>\r\n                                                        </svg>                                                            \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-8\" style=\"color: #8692A6; font-size: 8px;\">\r\n                                                        <span class=\"btn-text\">Customer</span><br>\r\n                                                        <span class=\"btn-description\">\r\n                                                            Personal account to manage all you activities.\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-sm-2 mt-2\">\r\n                                                        <mat-icon>arrow_right_alt</mat-icon>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        <div class=\"button-selection mb-2 mt-3\" (click)=\"onRetailerClick()\">\r\n                                            <button mat-flat-button>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-2 mt-3\">\r\n                                                        <svg width=\"39\" height=\"39\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M2.09543 18.2329L26 0.865247L49.9046 18.2329L40.7738 46.3344H11.2262L2.09543 18.2329Z\" fill=\"#110152\" stroke=\"#110152\" stroke-width=\"1.4\"/>\r\n                                                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.3335 22.6667C18.8733 22.6667 18.5002 23.0398 18.5002 23.5V31.8334C18.5002 32.2936 18.8733 32.6667 19.3335 32.6667H32.6668C33.1271 32.6667 33.5002 32.2936 33.5002 31.8334V23.5C33.5002 23.0398 33.1271 22.6667 32.6668 22.6667H19.3335ZM16.8335 23.5C16.8335 22.1193 17.9528 21 19.3335 21H32.6668C34.0475 21 35.1668 22.1193 35.1668 23.5V31.8334C35.1668 33.2141 34.0475 34.3334 32.6668 34.3334H19.3335C17.9528 34.3334 16.8335 33.2141 16.8335 31.8334V23.5Z\" fill=\"white\"/>\r\n                                                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.5657 18.3989C23.0346 17.9301 23.6705 17.6667 24.3335 17.6667H27.6668C28.3299 17.6667 28.9658 17.9301 29.4346 18.3989C29.9034 18.8678 30.1668 19.5036 30.1668 20.1667V33.5C30.1668 33.9603 29.7937 34.3334 29.3335 34.3334C28.8733 34.3334 28.5002 33.9603 28.5002 33.5V20.1667C28.5002 19.9457 28.4124 19.7337 28.2561 19.5774C28.0998 19.4212 27.8878 19.3334 27.6668 19.3334H24.3335C24.1125 19.3334 23.9005 19.4212 23.7442 19.5774C23.588 19.7337 23.5002 19.9457 23.5002 20.1667V33.5C23.5002 33.9603 23.1271 34.3334 22.6668 34.3334C22.2066 34.3334 21.8335 33.9603 21.8335 33.5V20.1667C21.8335 19.5036 22.0969 18.8678 22.5657 18.3989Z\" fill=\"white\"/>\r\n                                                            </svg>\r\n\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-8\" style=\"color: #8692A6; font-size: 8px;\">\r\n                                                        <span class=\"btn-text\">Retailer</span><br>\r\n                                                        <span class=\"btn-description\">\r\n                                                            Own or belong to a company, this is for you.\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-sm-2 mt-3\">\r\n                                                        <mat-icon>arrow_right_alt</mat-icon>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </button>\r\n                                        </div>\r\n                                        <div class=\"button-selection mb-2 mt-3\" >\r\n                                            <button mat-flat-button>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-2 mt-3\">\r\n                                                        <svg width=\"39\" height=\"39\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M2.09543 18.2329L26 0.865247L49.9046 18.2329L40.7738 46.3344H11.2262L2.09543 18.2329Z\" fill=\"#110152\" stroke=\"#110152\" stroke-width=\"1.4\"/>\r\n                                                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.3335 22.6667C18.8733 22.6667 18.5002 23.0398 18.5002 23.5V31.8334C18.5002 32.2936 18.8733 32.6667 19.3335 32.6667H32.6668C33.1271 32.6667 33.5002 32.2936 33.5002 31.8334V23.5C33.5002 23.0398 33.1271 22.6667 32.6668 22.6667H19.3335ZM16.8335 23.5C16.8335 22.1193 17.9528 21 19.3335 21H32.6668C34.0475 21 35.1668 22.1193 35.1668 23.5V31.8334C35.1668 33.2141 34.0475 34.3334 32.6668 34.3334H19.3335C17.9528 34.3334 16.8335 33.2141 16.8335 31.8334V23.5Z\" fill=\"white\"/>\r\n                                                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.5657 18.3989C23.0346 17.9301 23.6705 17.6667 24.3335 17.6667H27.6668C28.3299 17.6667 28.9658 17.9301 29.4346 18.3989C29.9034 18.8678 30.1668 19.5036 30.1668 20.1667V33.5C30.1668 33.9603 29.7937 34.3334 29.3335 34.3334C28.8733 34.3334 28.5002 33.9603 28.5002 33.5V20.1667C28.5002 19.9457 28.4124 19.7337 28.2561 19.5774C28.0998 19.4212 27.8878 19.3334 27.6668 19.3334H24.3335C24.1125 19.3334 23.9005 19.4212 23.7442 19.5774C23.588 19.7337 23.5002 19.9457 23.5002 20.1667V33.5C23.5002 33.9603 23.1271 34.3334 22.6668 34.3334C22.2066 34.3334 21.8335 33.9603 21.8335 33.5V20.1667C21.8335 19.5036 22.0969 18.8678 22.5657 18.3989Z\" fill=\"white\"/>\r\n                                                            </svg>\r\n\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-8\" style=\"color: #8692A6; font-size: 8px;\">\r\n                                                        <span class=\"btn-text\">Enterprise</span><br>\r\n                                                        <span class=\"btn-description\">\r\n                                                            Own or belong to a company, this is for you.\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-sm-2 mt-3\">\r\n                                                        <mat-icon>arrow_right_alt</mat-icon>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-7 py-3 position-relative\">\r\n                <!-- <img class=\"bg-auth-circle-shape\" src=\"../../../assets/img/icons/spot-illustrations/bg-shape.png\" alt=\"\" width=\"250\" /><img class=\"bg-auth-circle-shape-2\" src=\"../../../assets/img/icons/spot-illustrations/shape-1.png\" alt=\"\" width=\"150\"\r\n                  /> -->\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"row g-0 h-100\">\r\n                                <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient\" style=\"\r\n                              display: flex; align-items: stretch;\r\n                              width:48.8%;\r\n                              height:700px;\r\n                              background-size:contain;\r\n                              background-position: center center;\r\n                              background: linear-gradient(0deg, rgba(17, 1, 82, 0.7), rgba(17, 1, 82, 0.7)), url(../../../assets/img/login-img/8.png);;\r\n                              \">\r\n                                    <div class=\"position-relative p-3\">\r\n                                        <div class=\"z-index-1 position-relative p-3\">\r\n    \r\n                                            <p class=\"mt-3 d-flex\">\r\n                                                <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                    alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                            </p>\r\n                                            <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                            <br><br>\r\n                                            <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                                The technology that looks imposible today will<br>be part of our life\r\n                                                tomorrow. Iceipts technology<br>creating difference.\r\n                                            </p>\r\n                                            \r\n                                            <p class=\"opacity-75 text-white d-flex\">Sibanee kar</p>\r\n                                        </div>\r\n                                    </div>\r\n                                <!-- <div class=\"position-relative pt-md-5 pb-md-7 light\">\r\n                                    <div class=\"bg-holder bg-auth-card-shape\" style=\"\r\n                                     background-image: url(../../../assets/img/icons/spot-illustrations/half-circle.png);\r\n                                    \">\r\n                                    </div> -->\r\n                                    <!--/.bg-holder-->\r\n\r\n                                    <!-- <div class=\"z-index-1 position-relative\">\r\n                                        <a\r\n                                            class=\"link-light mb-4 font-sans-serif fs-4 d-inline-block fw-bolder\">iCeipts</a>\r\n\r\n                                        <div class=\"text-light text-white\">\r\n                                            Welcome! -->\r\n                                            <!--  Welcome back! Please login to your account. -->\r\n                                        <!-- </div>\r\n\r\n                                        <p class=\"mt-3\">\r\n                                            <img src=\"../assets/img/logos/96_icon3.png\" alt=\"iceipts logo\" width=\"90\"\r\n                                                height=\"90\" />\r\n                                        </p>\r\n\r\n                                        <div class=\"text-light text-white\">\r\n                                            Take your shopping experience a level ahead\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt-3 mb-4 mt-md-4 mb-md-5 light\">\r\n                                    <p class=\"pt-3 text-white\">\r\n                                        Have an account?<br /><a class=\"btn btn-outline-light mt-2 px-4\"\r\n                                            href=\"#/auth/login\">Log In</a>\r\n                                    </p> -->\r\n                                <!-- </div> -->\r\n                            </div>\r\n                            <div class=\"col-md-7 d-flex flex-center\" style=\"width: 51.2%\">\r\n                                <!-- <div *ngIf=\"!showClientOtp\">\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                        <h3> Account </h3>\r\n\r\n                                        <form [formGroup]=\"roleVerifyForm\">\r\n                                            <div class=\"form-check\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                    id=\"card-register-checkbox\" formControlName=\"acceptTerms\" [ngClass]=\"{\r\n                            'is-invalid': f.acceptTerms.invalid && submitted\r\n                          }\" required />\r\n                                                <label class=\"form-label\" for=\"card-register-checkbox\">I accept the\r\n                                                    <a>terms </a>and\r\n                                                    <a>privacy policy</a></label>\r\n                                                <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">\r\n                                                    Accept Ts & Cs is required\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"form-check\"></div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div> -->\r\n\r\n                                <!-- <div> -->\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1 form-body\">\r\n                                        <div class=\"alert alert-success mb-5\" *ngIf=\"successful\" role=\"alert\">\r\n                                            OTP has sent successfully to your Email-Id\r\n                                        </div>\r\n                                        <h2>Verify</h2>\r\n                                        <form [formGroup]=\"roleOtpData\" (ngSubmit)=\"verifyRole()\">\r\n\r\n                                            <div class=\"row gx-2\">\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-email\">Email OTP</label>\r\n                                                    <input class=\"form-control\" (keypress)=\"numberOnly($event)\"  formControlName=\"emailotp\" type=\"password\"\r\n                                                        id=\"card-email\" [ngClass]=\"{\r\n                                                        'is-invalid': otp.emailotp.invalid && submitted\r\n                                                    }\" />\r\n                                                    <div *ngIf=\"otp.emailotp.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"otp.emailotp.errors.required\">\r\n                                                            Email OTP is required.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <!-- <div class=\"row gx-2\"> -->\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-password\">Password</label>\r\n                                                    <input class=\"form-control\" formControlName=\"password\" name=\"password\"\r\n                                                        [type]=\"hide ? 'password' : 'text'\" id=\"card-password\"\r\n                                                        [ngClass]=\"{\r\n                                                         'is-invalid': otp.password.invalid && submitted\r\n                                                         }\" required />\r\n                                                    <div *ngIf=\"otp.password.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"otp.password.errors.required\">\r\n                                                            Password is required.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <span class=\"form-control-feedback\" (click)=\"toggleShow()\">\r\n                                                        <i [ngClass]=\"hide2 ? 'fa fa-eye-slash':'fa fa-eye'\"></i>\r\n\r\n                                                        <!-- <i class=\"fa pr-2 fa-eye-slash\" [hidden]=\"!hide\">\r\n                                                        </i>\r\n                                                        <i class=\"fa pr-2 fa-eye\" [hidden]=\"hide\"> -->\r\n                                                        <!-- </i> -->\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-confirm-password\">Confirm\r\n                                                        Password</label>\r\n                                                    <input class=\"form-control\"\r\n                                                        [type]=\"hide2 ? 'password' : 'text'\"\r\n                                                        formControlName=\"ConfirmPassword\" autocomplete=\"on\"\r\n                                                        id=\"card-confirm-password\" [ngClass]=\"{\r\n                                                        'is-invalid':\r\n                                                        otp.ConfirmPassword.invalid && submitted\r\n                                                    }\" required />\r\n                                                    <div *ngIf=\"otp.ConfirmPassword.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"otp.ConfirmPassword.errors.required\">\r\n                                                            Password is required.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"otp.ConfirmPassword.errors.confirmedValidator\">\r\n                                                            Password and Confirm Password must be match.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <span class=\"form-control-feedback\" (click)=\"toggleShow2()\">\r\n                                                        <i [ngClass]=\"hide2 ? 'fa fa-eye-slash':'fa fa-eye'\"></i>\r\n\r\n                                                        <!-- <i  class=\"fa  fa-eye-slash\" [hidden]=\"!hide2\">\r\n                                                        </i>\r\n                                                        <i class=\"fa fa-eye\" [hidden]=\"hide2\">\r\n                                                        </i> -->\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                            <!-- </div> -->\r\n                                            <div class=\"mb-3\">\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\" style=\"background: #110152;\"\r\n                                                    name=\"submit\">\r\n                                                    Verify\r\n                                                </button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RoleSignupService } from 'src/app/core/services/role-signup.service';\r\nimport { ConfirmedValidators } from 'src/app/_helpers/confirmed.validators';\r\n\r\n@Component({\r\n  selector: 'app-role-signup',\r\n  templateUrl: './role-signup.component.html',\r\n  styleUrls: ['./role-signup.component.scss']\r\n})\r\nexport class RoleSignupComponent implements OnInit {\r\n \r\n  public showClientOtp:boolean=false;\r\n  public roleVerifyForm:FormGroup;\r\n  public roleUser=JSON.parse(localStorage.getItem(\"roleUser\"))\r\n  public roleOtpData:FormGroup;\r\n  successful: boolean=false;\r\n  data: any;\r\n  submitted: boolean;\r\n  public email: string;\r\n  public hide: boolean=true;\r\n  public hide2: boolean=true;\r\n  constructor(public fb:FormBuilder,\r\n    public roleSignupService:RoleSignupService,\r\n    public router:Router,\r\n    public route:ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.route.paramMap.subscribe((p) => {\r\n    //   this.email = p.get(\"email\");  \r\n    // });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      this.email= params['email'];\r\n    });\r\n    this.getRoleUserByEmailId();\r\n    this.roleVerifyForm=this.fb.group({\r\n\r\n      firstName:  [ \"\",[Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\r\n      lastName:[\"\",[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n      email:[\"\",[Validators.required,Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")]],\r\n      username:[\"\",[Validators.required,Validators.pattern(\"[0-9]{10}\")]],\r\n      acceptTerms: [\"\", [Validators.required]],\r\n\r\n\r\n\r\n    });\r\n    this.roleOtpData=this.fb.group({\r\n     emailotp:  [ \"\",[Validators.required,Validators.pattern(\"[0-9]{6}\")]],\r\n     password:[\"\",[Validators.required]],\r\n     ConfirmPassword:[\"\",[Validators.required]],\r\n    },{ \r\n      validator: ConfirmedValidators('password', 'ConfirmPassword')\r\n    });\r\n\r\n\r\n    \r\n  }\r\n  get otp(){\r\n  return this.roleOtpData.controls\r\n  }\r\n  get f(){\r\n    return this.roleVerifyForm.controls\r\n  }\r\n\r\n  getRoleUserByEmailId(){\r\n    this.roleSignupService.getUserBasedRoleByEmailId({},this.email).then((res=>{\r\n      this.data=res.data;\r\n      this.roleVerifyForm.patchValue({\r\n        firstName:res.data.firstName,\r\n        lastName:res.data.lastName,\r\n        email:res.data.email,\r\n        username:res.data.mobile,\r\n      })\r\n     \r\n    }))\r\n  }\r\n  sentOtpRole(){\r\n   // this.submitted=true;\r\n    if(this.roleVerifyForm.invalid){\r\n      return false;\r\n    }\r\n    this.roleSignupService.sendRoleUsersOtp(this.roleVerifyForm.value).then((data)=>{\r\n      \r\n    })\r\n    this.showClientOtp=true;\r\n    this.successful=true;\r\n  }\r\n  toggleShow() {\r\n      this.hide = !this.hide;\r\n  }\r\n  toggleShow2(){\r\n    this.hide2=!this.hide2\r\n  }\r\n  verifyRole(){\r\n    this.submitted=true;\r\n    if(this.roleOtpData.invalid){\r\n      return false;\r\n    }\r\n    let data={\r\n      \"email\":this.email,\r\n      ...this.roleOtpData.value\r\n\r\n    }\r\n     this.roleSignupService.verifyRoleUsers(data).then(res=>{\r\n     this.router.navigate(['/auth/login'])\r\n    })\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n  \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select-feature-subscription',\r\n  templateUrl: './select-feature-subscription.component.html',\r\n  styleUrls: ['./select-feature-subscription.component.scss']\r\n})\r\nexport class SelectFeatureSubscriptionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"col-12 text-center my-2\">\r\n            <div class=\"fs-1\">Premium Features</div>\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"table-responsive mt-3 p-3\">\r\n            <table class=\"table table-dark\">\r\n                <thead class=\"text-center fs--1\">\r\n                    <tr>\r\n                        <th scope=\"col\" style=\"width:10%\">#</th>\r\n                        <th scope=\"col\" style=\"width:50%\">Features</th>\r\n                        <th scope=\"col\" style=\"width:10%\">Select</th>\r\n                        <th scope=\"col\" style=\"width:30%\">Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody class=\"text-center fs--1\">\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>Gst Billing</td>\r\n                        <td>\r\n                            <span style=\"justify-content:center;\" class=\"d-flex form-check\">\r\n                                <input class=\"form-check-input\" id=\"flexCheckDefault\" type=\"checkbox\" value=\"\" />\r\n\r\n                            </span>\r\n                        </td>\r\n                        <td>100</td>>\r\n                    </tr>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </tbody>\r\n\r\n                <tfoot>\r\n                    <tr class=\"text-center fs--1\">\r\n                        <th scope=\"col\">\r\n\r\n                        </th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\" style=\"color:#00FFFF\">Total</th>\r\n                        <th scope=\"col\" style=\"color:#00FFFF\">-\r\n                        </th>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n</main>","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n\r\n            <div class=\"col-lg-7 col-xxl-6 py-3 position-relative\" style=\"width:68.5%\">\r\n\r\n                <!-- <img class=\"bg-auth-circle-shape\" src=\"../../../assets/img/icons/spot-illustrations/bg-shape.png\" alt=\"\" width=\"250\" /><img class=\"bg-auth-circle-shape-2\" src=\"../../../assets/img/icons/spot-illustrations/shape-1.png\" alt=\"\" width=\"150\"\r\n                  /> -->\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\" style=\"height:725px;\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"col-sm-12 col-md-5 col-lg-5 bg-card-gradient\">\r\n                                <div class=\"position-relative pt-md-3 pb-md-7 light\">\r\n                                    <!-- <div class=\"bg-holder bg-auth-card-shape\" style=\"\r\n                                    background-image: url(../../../assets/img/icons/spot-illustrations/half-circle.png);\r\n                                    \"></div> -->\r\n                                    <!--/.bg-holder-->\r\n                                    <div class=\"z-index-1 position-relative p-4\">\r\n                                        <!-- <a\r\n                                            class=\"link-light mb-4 mt-3 font-sans-serif fs-4 d-inline-block fw-bolder\"></a>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Welcome!\r\n                                        </p> -->\r\n                                        <p class=\"d-flex\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                        </p>\r\n                                        <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                        <br><br>\r\n                                        <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                            The technology that looks imposible today will<br>be part of our life tomorrow. Iceipts technology<br>creating difference.\r\n                                        </p >\r\n                                        \r\n                                        <div class=\"opacity-75 text-white d-flex justify-content-end\">\r\n                                            <div class=\"svg-img\">\r\n                                                <svg width=\"22\" height=\"21\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M21 0H33.5V33H0V20.5H21V0Z\" fill=\"white\"/>\r\n                                                    </svg>\r\n                                            </div>   \r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                        \r\n                                    <!-- <div class=\"z-index-1 position-relative\">\r\n                                        <a\r\n                                            class=\"link-light mb-4 font-sans-serif fs-4 d-inline-block fw-bolder\">iCeipts</a>\r\n\r\n                                        <div class=\"text-light text-white\">\r\n                                            Welcome!\r\n                                             Welcome back! Please login to your account.\r\n                                        </div>\r\n\r\n                                        <p class=\"mt-3\">\r\n                                            <img src=\"../assets/img/logos/96_icon3.png\" alt=\"iceipts logo\" width=\"90\"\r\n                                                height=\"90\" />\r\n                                        </p>\r\n\r\n                                        <div class=\"text-light text-white\">\r\n                                            Take your shopping experience a level ahead\r\n                                        </div>\r\n                                    </div> -->\r\n                                </div>\r\n                                <!-- <div class=\"mt-3 mb-4 mt-md-4 mb-md-5 light\">\r\n                                    <p class=\"pt-3 text-white\">\r\n                                        Have an account?<br /><a class=\"btn btn-outline-light mt-2 px-4\"\r\n                                            href=\"#/auth/login\">Log In</a>\r\n                                    </p>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-sm-7 col-md-6 col-lg-6 d-flex flex-center\" style=\"width:95%\">\r\n                                <div *ngIf=\"!Custtoggle\" [hidden]=\"showClientOtp\" class=\"demo\" >\r\n                                    <button mat-flat-button style=\"color: #8692A6;\" (click)=\"onCustomerClick()\">\r\n                                        < Back\r\n                                      </button>\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                        <div class=\"alert alert-warning border-2 d-flex align-items-center\"\r\n                                            *ngIf=\"showAlert\" role=\"alert\">\r\n                                            <div class=\"bg-warning me-3 icon-item\"><span\r\n                                                    class=\"fas fa-exclamation-circle text-white fs-3\"></span></div>\r\n                                            <p class=\"mb-0 flex-1\">{{ errorMesage || 'Something went wrong please try\r\n                                                again later !!!!'}}</p>\r\n                                            <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"alert\"\r\n                                                aria-label=\"Close\"></button>\r\n                                        </div>\r\n                                        <h1 style=\"font-weight: 700;margin: -13px 0 -2px\"><b>Sign Up As a Retailer!</b></h1>\r\n                                        <div class=\"toggle-text col-auto fs-0 mb-2 text-900\"><span class=\"mb-0 undefined\">\r\n                                                Already have an Acccount? </span> \r\n                                                <span><a style=\"color: #FC7643;\"\r\n                                                    (click)=\"onCustomerClick()\"><u><b> LOGIN!</b></u></a></span>\r\n                                                    <hr class=\"top-line my-2\" style=\"opacity: 20%;\">\r\n                                        </div>\r\n                                        <form [formGroup]=\"registerForm\" (ngSubmit)=\"clientRegister()\">\r\n                                            <!-- <div class=\"row gx-2\">\r\n                                                <div class=\"mb-3 col-sm-6\">\r\n                                                    <label class=\"form-label\" for=\"card-firstname\">First Name</label>\r\n                                                    <input class=\"form-control\" maxLength=\"15\"\r\n                                                        formControlName=\"firstName\" type=\"text\" [ngClass]=\"{\r\n                                                         'is-invalid': f.firstName.invalid && submitted\r\n                                                        }\" autocomplete=\"new-password\" id=\"card-firstname\" required />\r\n                                                    <div style=\"margin-bottom: -10px;\"\r\n                                                        *ngIf=\"f.firstName.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"f.firstName.errors.required\">\r\n                                                            Firstname is required\r\n                                                        </div>\r\n                                                        <div *ngIf=\"f.firstName.errors.pattern\">\r\n                                                            Only characters allowed.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"mb-3 col-sm-6\">\r\n                                                    <label class=\"form-label\" for=\"card-lastname\">Last Name</label>\r\n                                                    <input class=\"form-control\" maxLength=\"15\"\r\n                                                        formControlName=\"lastName\" type=\"text\" [ngClass]=\"{\r\n                                                        'is-invalid': f.lastName.invalid && submitted\r\n                                                        }\" autocomplete=\"new-password\" id=\"card-lastname\" required />\r\n                                                    <div style=\"margin-bottom: -10px;\"\r\n                                                        *ngIf=\"f.lastName.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"f.lastName.errors.required\">\r\n                                                            Lastname is required\r\n                                                        </div>\r\n                                                        <div *ngIf=\"f.lastName.errors.pattern\">\r\n                                                            Only characters allowed.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> -->\r\n\r\n                                            <div class=\"mb-3 col-sm-12\">\r\n                                                <label class=\"form-label\" for=\"card-firstname\">Full Name</label>\r\n                                                <input class=\"form-control\" maxLength=\"15\" placeholder=\"Full Name\" autofocus\r\n                                                    formControlName=\"firstName\" type=\"text\" [ngClass]=\"{\r\n                                                     'is-invalid': f.firstName.invalid && submitted\r\n                                                    }\" autocomplete=\"new-password\" id=\"card-firstname\" required />\r\n                                                <div style=\"margin-bottom: -10px;\"\r\n                                                    *ngIf=\"f.firstName.invalid && submitted\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"f.firstName.errors.required\">\r\n                                                        Firstname is required\r\n                                                    </div>\r\n                                                    <div *ngIf=\"f.firstName.errors.pattern\">\r\n                                                        Only characters allowed.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                                \r\n\r\n                                            <!-- <div class=\"row gx-2\"> -->\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-email\">Email Address</label>\r\n                                                    <input class=\"form-control\" formControlName=\"email\" type=\"text\" placeholder=\"Email Address\"\r\n                                                        [ngClass]=\"{\r\n                                                         'is-invalid': f.email.invalid && submitted\r\n                                                        }\" autocomplete=\"new-password\" required id=\"card-email\" />\r\n                                                    <div style=\"margin-bottom: -10px;\"\r\n                                                        *ngIf=\"submitted && f.email.invalid\" class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"f.email.errors.required\">\r\n                                                            Email is required\r\n                                                        </div>\r\n                                                        <div *ngIf=\"f.email.errors.pattern\">\r\n                                                            Email must be a valid Email address\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row gx-2\">\r\n                                                    <label class=\"form-label\" for=\"card-mobile\">Phone Number</label>\r\n                                                    <div class=\"mb-3 col-sm-3\">\r\n                                                        <mat-form-field class=\"example-full-width\" app>\r\n                                                            <input type=\"text\" class=\"form-control mod\" (change)=\"getCountryByname($event)\" aria-label=\"Assignee\" matInput\r\n                                                                formControlName=\"countryId\" [matAutocomplete]=\"auto\" [ngClass]=\"{\r\n                                                                                                                            'is-invalid': f.countryId.invalid && submitted\r\n                                                                                                                            }\">\r\n                                                            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                                                                <mat-option *ngFor=\"let option of filteredOptions | async\" (onSelectionChange)=\"setCountryId(option)\"\r\n                                                                    [value]=\"option.countryNumber\" matTooltip=\"{{ option.countryName }} {{option.countryNumber}}\">\r\n                                                                    {{option.countryName}}\r\n                                                                    {{option.countryNumber}}\r\n                                                                </mat-option>\r\n                                                            </mat-autocomplete>\r\n                                                            <div style=\"margin-bottom: -10px;\" *ngIf=\"f.countryId.invalid && submitted\" class=\"invalid-feedback mb-2\">\r\n                                                                <div *ngIf=\"f.countryId.errors.required\">\r\n                                                                    Country name is required.\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                \r\n                                                    <div class=\"mb-3 col-sm-9\">\r\n                                                        \r\n                                                        <input class=\"form-control intl-tel-input\" formControlName=\"mobile\" type=\"tel\" placeholder=\"Phone Number\"\r\n                                                            (keypress)=\"numberOnly($event)\" minlength=\"10\" maxlength=\"10\"\r\n                                                            [ngClass]=\"{ 'is-invalid': f.mobile.invalid && submitted }\" autocomplete=\"new-password\" id=\"card-mobile\" />\r\n                                                        <div style=\"margin-bottom: -10px;\" *ngIf=\"f.mobile.invalid && submitted\" class=\"invalid-feedback\">\r\n                                                            <div *ngIf=\"f.mobile.errors.required\">\r\n                                                                Mobile Number is required.\r\n                                                            </div>\r\n                                                \r\n                                                            <div *ngIf=\"f.mobile.errors.minlength\">\r\n                                                                Mobile Number must be of 10-digits only\r\n                                                            </div>\r\n                                                            <div *ngIf=\"f.mobile.errors.maxlength\">\r\n                                                                Mobile Number must be of 10-digits only\r\n                                                            </div>\r\n                                                            <div *ngIf=\"f.mobile.errors.pattern\">\r\n                                                                Only Digits\r\n                                                            </div>\r\n                                                \r\n                                                        </div>\r\n                                                    </div>\r\n                                                \r\n                                                </div>\r\n\r\n                                                <div class=\"mb-3  col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-password\">Create Password</label>\r\n                                                    <input class=\"form-control mod\" type=\"password\" \r\n                                                        [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\"\r\n                                                        id=\"card-password\"\r\n                                                        [ngClass]=\"{ 'is-invalid': f.password.invalid && submitted }\"\r\n                                                        required autocomplete=\"new-password\" />\r\n                                                    <span class=\"form-control-feedback\" (click)=\"toggleShow()\">\r\n                                                        <i class=\"p-1\"\r\n                                                            [ngClass]=\"hide ? 'fa fa-eye-slash':'fa fa-eye'\"></i>\r\n                                                    </span>\r\n                                                    <div style=\"margin-bottom: -10px;\"\r\n                                                        *ngIf=\"f.password.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"f.password.errors.required\">\r\n                                                            Password is required.\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                \r\n                                                <!-- <div class=\"col-sm-6\">\r\n                                                    <mat-form-field class=\"example-full-width\" app>\r\n                                                    <label class=\"form-label\" for=\"select country\">Select\r\n                                                        Country</label>\r\n                                                    <input type=\"text\" class=\"form-control mod\"\r\n                                                        placeholder=\"Search country\" aria-label=\"Assignee\" matInput\r\n                                                        formControlName=\"countryId\" [matAutocomplete]=\"auto\" [ngClass]=\"{\r\n                                                            'is-invalid': f.countryId.invalid && submitted\r\n                                                            }\">\r\n                                                    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                                                        <mat-option *ngFor=\"let option of filteredOptions | async\"\r\n                                                            (onSelectionChange)=\"setCountryId(option)\"\r\n                                                            [value]=\"option.countryName\">\r\n                                                            {{option.countryName}}\r\n                                                        </mat-option>\r\n                                                    </mat-autocomplete>\r\n                                                    <div style=\"margin-bottom: -10px;\"\r\n                                                        *ngIf=\"f.countryId.invalid && submitted\"\r\n                                                        class=\"invalid-feedback mb-2\">\r\n                                                        <div *ngIf=\"f.countryId.errors.required\">\r\n                                                            Country name is required.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    </mat-form-field>\r\n\r\n                                                    <input type=\"text\" placeholder=\"select Country\" aria-label=\"Select\" matInput\r\n                                                    formControlName=\"countryId\" [matAutocomplete]=\"auto\" class=\"form-control mb-2\"  [ngClass]=\"{\r\n                                                        'is-invalid': f.countryId.invalid && submitted\r\n                                                        }\" required\r\n                                                        (change)=\"getCountryByname($event)\"\r\n                                                        class=\"form-control mod\"\r\n                                                         >\r\n                                                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                                            <mat-option *ngFor=\"let option of CountryList\" [value]=\"option.countryName\"\r\n                                                                (onSelectionChange)=\"setCountryId(option)\">\r\n                                                                {{option.countryName}}\r\n                                                            </mat-option>\r\n                                                        </mat-autocomplete>\r\n                                                    <div style=\"margin-bottom: -10px;\" *ngIf=\"f.countryId.invalid && submitted\" class=\"invalid-feedback mb-2\">\r\n                                                        <div *ngIf=\"f.countryId.errors.required\">\r\n                                                            Country name is required.\r\n                                                        </div>\r\n                                                    </div> \r\n                                                </div>  -->\r\n                                            \r\n                                            <div class=\"form-check my-2\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                    id=\"card-register-checkbox\" formControlName=\"acceptTerms\" [ngClass]=\"{\r\n                                                    'is-invalid': f.acceptTerms.invalid && submitted\r\n                                                    }\" required />\r\n                                                <label class=\"form-label\" for=\"card-register-checkbox\">I agree to\r\n                                                    <a routerLink=\"/auth/term-and-condition\"><u> Terms & Condition\r\n                                                        </u></a> </label>\r\n                                                <div style=\"margin-bottom: -13px;\"\r\n                                                    *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">\r\n                                                    Accept Ts & Cs is required\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"mb-1\">\r\n                                                <button  class=\"login-btn d-block w-100 mt-3\" type=\"submit\"\r\n                                                    name=\"submit\">\r\n                                                    Register\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div class=\"line-container\">\r\n                                                <hr class=\"top-line\">\r\n                                                <span class=\"text\" style=\"color: #c4c4c4;\">or</span>\r\n                                                <hr class=\"bottom-line\">\r\n                                              </div>\r\n                                              \r\n                                            <div class=\"\">\r\n                                                <button  class=\"btn-google d-block w-100 mt-3\" type=\"button\">\r\n                                                    <!-- <i class=\"fa fa-google mr-2\"></i> -->\r\n                                                    <img src=\"assets/img/login-img/Google__G__Logo.png\" alt=\"\" style=\"height: 6%; width: 6%;\">\r\n                                                    Sign in with Google\r\n                                                </button>\r\n\r\n                                            </div>\r\n                                        </form>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- ------------Register As Customer------------- -->\r\n                                <div *ngIf=\"Custtoggle\" [hidden]=\"showCustomerOtp\" class=\"demo\">\r\n                                    <button mat-flat-button style=\"color: #8692A6;\" (click)=\"onRetailerClick()\">\r\n                                        < Back\r\n                                      </button>\r\n\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1\">\r\n                                        <div class=\"alert alert-warning border-2 d-flex align-items-center\"\r\n                                            *ngIf=\"showAlert\" role=\"alert\">\r\n                                            <div class=\"bg-warning me-3 icon-item\"><span\r\n                                                    class=\"fas fa-exclamation-circle text-white fs-3\"></span></div>\r\n                                            <p class=\"mb-0 flex-1\">User Exists Already!!!!</p>\r\n                                            <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"alert\"\r\n                                                aria-label=\"Close\"></button>\r\n                                        </div>\r\n                                        <h1 style=\"font-weight: 700;color: #000000;\">Sign Up As a Customer!</h1>\r\n                                        <!-- <h1 style=\"font-weight: 500;\">Register as {{ userName }}</h1> -->\r\n                                        <div class=\"toggle-text col-auto fs-0 my-3 text-900\">\r\n                                            <span class=\"mb-0 undefined\">\r\n                                                Already have an account?\r\n                                            </span>\r\n                                            <span><a style=\"color: #FC7643;\" (click)=\"onRetailerClick()\">\r\n                                                <b>LOGIN!</b></a>\r\n                                                </span>\r\n                                                <hr class=\"top-line my-2\" style=\"opacity: 20%;\">\r\n                                        </div>\r\n                                        <form [formGroup]=\"customerRegisterForm\" (ngSubmit)=\"customerRegister()\">\r\n                                            <!-- <div class=\"row gx-2\">\r\n                                                <div class=\"mb-3 col-sm-6\">\r\n                                                    <label class=\"form-label\" for=\"card-firstname\">First Name</label>\r\n                                                    <input class=\"form-control\" maxLength=\"15\"\r\n                                                        formControlName=\"firstName\" type=\"text\" [ngClass]=\"{\r\n                                                         'is-invalid': c.firstName.invalid && submitted\r\n                                                         }\" autocomplete=\"new-password\" id=\"card-firstname\" required />\r\n                                                    <div *ngIf=\"c.firstName.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"c.firstName.errors.required\">\r\n                                                            Firstname is required\r\n                                                        </div>\r\n                                                        <div *ngIf=\"c.firstName.errors.pattern\">\r\n                                                            Only characters allowed.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"mb-3 col-sm-6\">\r\n                                                    <label class=\"form-label\" for=\"card-lastname\">Last Name</label>\r\n                                                    <input class=\"form-control\" maxLength=\"15\"\r\n                                                        formControlName=\"lastName\" type=\"text\" [ngClass]=\"{\r\n                                                         'is-invalid': c.lastName.invalid && submitted\r\n                                                         }\" autocomplete=\"new-password\" id=\"card-lastname\" required />\r\n                                                    <div *ngIf=\"c.lastName.invalid && submitted\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"c.lastName.errors.required\">\r\n                                                            Lastname is required\r\n                                                        </div>\r\n                                                        <div *ngIf=\"c.lastName.errors.pattern\">\r\n                                                            Only characters allowed.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> -->\r\n\r\n                                            <div class=\"mb-3 col-sm-12\">\r\n                                                <label class=\"form-label\" for=\"card-firstname\">Full Name</label>\r\n                                                <input class=\"form-control\" maxLength=\"15\" placeholder=\"Full name\"\r\n                                                    formControlName=\"firstName\" type=\"text\" [ngClass]=\"{\r\n                                                     'is-invalid': c.firstName.invalid && submitted\r\n                                                     }\" autocomplete=\"new-password\" id=\"card-firstname\" required />\r\n                                                <div *ngIf=\"c.firstName.invalid && submitted\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"c.firstName.errors.required\">\r\n                                                        Firstname is required\r\n                                                    </div>\r\n                                                    <div *ngIf=\"c.firstName.errors.pattern\">\r\n                                                        Only characters allowed.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"row gx-2\">\r\n                                                <label class=\"form-label\" for=\"card-mobile\">Phone Number</label>\r\n                                                <div class=\"mb-3 col-sm-3\">\r\n                                                    <mat-form-field class=\"example-full-width\" app>\r\n                                                        <input type=\"text\" class=\"form-control mod\" (change)=\"getCountryByname($event)\" aria-label=\"Assignee\" matInput\r\n                                                            formControlName=\"countryId\" [matAutocomplete]=\"auto\" [ngClass]=\"{\r\n                                                                                                                        'is-invalid': f.countryId.invalid && submitted\r\n                                                                                                                        }\">\r\n                                                        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                                                            <mat-option *ngFor=\"let option of filteredOptions | async\" (onSelectionChange)=\"setCountryId(option)\"\r\n                                                                [value]=\"option.countryName\" matTooltip=\"{{ option.countryName }} {{option.countryNumber}}\">\r\n                                                                {{option.countryName}} {{option.countryNumber}}\r\n                                                            </mat-option>\r\n                                                        </mat-autocomplete>\r\n                                                        <div style=\"margin-bottom: -10px;\" *ngIf=\"f.countryId.invalid && submitted\" class=\"invalid-feedback mb-2\">\r\n                                                            <div *ngIf=\"f.countryId.errors.required\">\r\n                                                                Country name is required.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </mat-form-field>\r\n                                                </div>\r\n                                            \r\n                                                <div class=\"mb-3 col-sm-9\">\r\n                                                    \r\n                                                    <input class=\"form-control intl-tel-input\" formControlName=\"mobile\" type=\"tel\" placeholder=\"Phone Number\"\r\n                                                        (keypress)=\"numberOnly($event)\" minlength=\"10\" maxlength=\"10\"\r\n                                                        [ngClass]=\"{ 'is-invalid': f.mobile.invalid && submitted }\" autocomplete=\"new-password\" id=\"card-mobile\" />\r\n                                                    <div style=\"margin-bottom: -10px;\" *ngIf=\"f.mobile.invalid && submitted\" class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"f.mobile.errors.required\">\r\n                                                            Mobile Number is required.\r\n                                                        </div>\r\n                                            \r\n                                                        <div *ngIf=\"f.mobile.errors.minlength\">\r\n                                                            Mobile Number must be of 10-digits only\r\n                                                        </div>\r\n                                                        <div *ngIf=\"f.mobile.errors.maxlength\">\r\n                                                            Mobile Number must be of 10-digits only\r\n                                                        </div>\r\n                                                        <div *ngIf=\"f.mobile.errors.pattern\">\r\n                                                            Only Digits\r\n                                                        </div>\r\n                                            \r\n                                                    </div>\r\n                                                </div>\r\n                                            \r\n                                            </div>\r\n\r\n                                            <div class=\"form-check\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                    id=\"card-register-checkbox\" formControlName=\"acceptTerms\" [ngClass]=\"{\r\n                                                 'is-invalid': c.acceptTerms.invalid && submitted\r\n                                                 }\" required />\r\n                                                <label class=\"form-label\" for=\"card-register-checkbox\">I agree to\r\n                                                    <a routerLink=\"/auth/term-and-condition\"><u> Terms & Condition\r\n                                                        </u></a>\r\n                                                </label>\r\n                                                <div *ngIf=\"submitted && c.acceptTerms.errors\" class=\"invalid-feedback\">\r\n                                                    Accept Ts & Cs is required\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"form-check\">\r\n\r\n                                            </div>\r\n                                            <div class=\"mb-1\">\r\n                                                <button class=\"login-btn d-block w-100 mt-0\" type=\"submit\"\r\n                                                    name=\"submit\">\r\n                                                    Register\r\n                                                </button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div [hidden]=\"!showClientOtp\">\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1 demo\">\r\n                                        <div class=\"alert alert-success mb-5\" *ngIf=\"successful\" role=\"alert\">OTP Has\r\n                                            Sent Successfully To Your Email-ID And Mobile Number</div>\r\n                                        <h3>Verify as {{ userName }}</h3>\r\n                                        <form [formGroup]=\"otpClientData\" (ngSubmit)=\"verifyClientOtp()\">\r\n\r\n                                            <div class=\"row gx-2\">\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-email\">Enter Email OTP</label>\r\n                                                    <input class=\"form-control\" (keypress)=\"numberOnly($event)\"\r\n                                                        formControlName=\"emailotp\" type=\"password\" id=\"card-email-otp\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row flex-between-center\">\r\n                                                <div class=\"col-auto\"></div>\r\n                                                <div class=\"col-auto text-center\">\r\n                                                    <button class=\"btn btn-link fs--2\" (click)=\"clientResendOtp()\"\r\n                                                        type=\"button\" [disabled]=\"messageSuccess\" style=\"border: none;\">\r\n                                                        Resend OTP\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"mb-3\">\r\n                                                <button class=\"btn login-btn d-block w-100 mt-3\" type=\"submit\"\r\n                                                    name=\"submit\">\r\n                                                    Verify\r\n                                                </button>\r\n\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div [hidden]=\"!showCustomerOtp\" style=\"margin-left: 45%;\">\r\n                                    <div class=\"p-4 p-md-5 flex-grow-1\" style=\"background: #FFFFFF;\r\n                                    box-shadow: 0px 181px 73px rgba(0, 0, 0, 0.01), 0px 102px 61px rgba(0, 0, 0, 0.05), 0px 45px 45px rgba(0, 0, 0, 0.09), 0px 11px 25px rgba(0, 0, 0, 0.1), 0px 0px 0px rgba(0, 0, 0, 0.1);\r\n                                        margin-left: 20%;\">\r\n                                        <div class=\"alert alert-success mb-5\" *ngIf=\"successful\" role=\"alert\">OTP Has\r\n                                            Sent Successfully To Your Mobile Number</div>\r\n                                        <h3>Verify as {{ userName }}</h3>\r\n                                        <form [formGroup]=\"otpCustomerData\" (ngSubmit)=\"verifyCustomerOtp()\">\r\n\r\n                                            <div class=\"row gx-2\">\r\n\r\n                                                <div class=\"mb-3 col-sm-12\">\r\n                                                    <label class=\"form-label\" for=\"card-mobile\">Enter Mobile OTP</label>\r\n                                                    <input (keypress)=\"numberOnly($event)\" class=\"form-control\"\r\n                                                        type=\"password\" maxlength=\"6\" formControlName=\"mobileotp\"\r\n                                                        autocomplete=\"new-password\" id=\"card-mobile-otp\" />\r\n                                                </div>\r\n                                                <p class=\"text-danger\" *ngIf=\"otpErrorMessage\">Invalid OTP!</p>\r\n                                            </div>\r\n\r\n\r\n                                            <div class=\"row flex-between-center\">\r\n                                                <div class=\"col-auto rating p-0\"></div>\r\n                                                <div class=\"col-auto text-center \">\r\n                                                    <button class=\"btn btn-link fs--2\" type=\"button\"\r\n                                                        (click)=\"customerLoginResendOtp()\" [disabled]=\"messageSuccess\"\r\n                                                        style=\"border: none;\">\r\n                                                        Resend OTP\r\n                                                    </button>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div class=\"mb-3 \">\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-1 login-btn\"  type=\"submit\" \r\n                                                    name=\"submit\">\r\n                                                    Verify\r\n                                                </button>\r\n\r\n\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Constants } from 'src/app/_helpers/constant';\r\nimport { SignupService } from 'src/app/core/services/signup.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ConfirmedValidators } from '../../_helpers/confirmed.validators';\r\nimport { OtpVerifyService } from 'src/app/core/services/otp-verify.service';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { RoleSignupService } from 'src/app/core/services/role-signup.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport * as intlTelInput from 'intl-tel-input';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @Input() afterRegister: boolean = false;\r\n  public user: number;\r\n  public Custtoggle: boolean;\r\n  public userName: String = \"Client\";\r\n  public registerForm: FormGroup;\r\n  public resend: any;\r\n  // public otpData:FormGroup;\r\n  public customerRegisterForm: FormGroup;\r\n  public role: number = 1;\r\n  public showClientOtp: boolean = false;\r\n  public showCustomerOtp: boolean = false;\r\n  public submitted: boolean = false;\r\n  public successful: boolean = false;\r\n  public otpClientData: FormGroup;\r\n  public otpCustomerData: FormGroup;\r\n  public showAlert: boolean;\r\n  public hide: boolean = true;\r\n  public hide2: boolean = true;\r\n  interval: NodeJS.Timeout;\r\n  timeLeft: number;\r\n  messageSuccess: boolean;\r\n  otpErrorMessage: boolean = false;\r\n  public input: any;\r\n  public AllCountry:any;\r\n  public CountryList:any;\r\n  public countryID:string=\"102\";\r\n  public filteredOptions: Observable<any[]>;\r\n  public errorMesage = '';\r\n  public showPassword: boolean = false;\r\n  countryCode: string;\r\n  phoneNumber: string;\r\n \r\n  constructor(public fb: FormBuilder,\r\n    public roleSignupService: RoleSignupService,\r\n    public signupService: SignupService,\r\n    public loginService: LoginService,\r\n    private toastService: ToastNotificationService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public otpVerify: OtpVerifyService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.Custtoggle = params['Custtoggle'] === 'true';\r\n    });\r\n\r\n    // let inputElement = document.querySelector('#card-mobile') as HTMLInputElement;\r\n    // console.log(inputElement)\r\n    // if(inputElement){\r\n    //   let iti =   intlTelInput(inputElement,{\r\n    //     initialCountry: 'us',\r\n    //     separateDialCode: true,\r\n    //     preferredCountries: [\"us\", \"gb\", \"ca\", \"au\"]\r\n    //     // utilsScript: 'https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/11.0.0/js/utils.js',\r\n    //   })\r\n    //   this.countryCode = iti.getSelectedCountryData().iso2;\r\n    //   this.phoneNumber = inputElement.value;\r\n    //   console.log(this.phoneNumber)\r\n    //   console.log(this.countryCode)\r\n    // }\r\n    this.getAllCountry();\r\n    //form for client registartion\r\n    this.registerForm = this.fb.group({\r\n      firstName: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\r\n      // lastName: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\r\n      email: [\"\", [Validators.required, Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")]],\r\n      mobile: [\"\", [Validators.pattern(\"[0-9]{10}\")]],\r\n      password: [\"\", [Validators.required]],\r\n      // ConfirmPassword: [\"\", [Validators.required]],\r\n      acceptTerms: [\"\", [Validators.required]],\r\n      countryId:[\"+91\",[Validators.required]]\r\n    }, {\r\n      validator: ConfirmedValidators('password', 'password')\r\n    });\r\n    //form for customer registration\r\n    this.customerRegisterForm = this.fb.group({\r\n\r\n      firstName: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\r\n      // lastName: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]],\r\n      // email:[\"\",[Validators.required,Validators.pattern(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")]],\r\n      mobile: [\"\", [Validators.required, Validators.pattern(\"[0-9]{10}\")]],\r\n      countryId:[\"+91\",[Validators.required]],\r\n\r\n      acceptTerms: [\"\", [Validators.required]],\r\n    });\r\n\r\n    //form for client and customer otp \r\n\r\n    this.otpClientData = this.fb.group({\r\n      emailotp: [\"\", [Validators.required, Validators.email]],\r\n      // mobileotp:[\"\",[Validators.required,Validators.pattern(\"[0-9]{10}\")]],\r\n    });\r\n\r\n    this.otpCustomerData = this.fb.group({\r\n      //emailotp:  [ \"\",[Validators.required,Validators.pattern(\"[0-9]{10}\")]],\r\n      mobileotp: [\"\", [Validators.required, Validators.pattern(\"[0-9]{10}\")]],\r\n\r\n    });\r\n    this.filteredOptions = this.registerForm.get('countryId').valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => {\r\n        if(this.CountryList) {\r\n          const name = typeof value === 'string' ? value : value;\r\n          return name ? this._filter(name) : this.CountryList.slice();\r\n        }\r\n    }),\r\n    );\r\n  }\r\n\r\n  onCustomerClick() {\r\n    this.router.navigate(['/auth/login'], { queryParams: { CustLogintoggle: 'false' } });\r\n  }\r\n  \r\n  onRetailerClick() {\r\n    this.router.navigate(['/auth/login'], { queryParams: { CustLogintoggle: 'true' } });\r\n  }\r\n  \r\n  displayFn(user?: any): string | undefined {\r\n    return user ? user : '';\r\n  }\r\n  private _filter(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.CountryList.filter(option => option.countryName.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry(){\r\n    this.signupService.getAllCountryClient({}).then((res) => {\r\n      this.AllCountry=res;\r\n      this.CountryList= this.AllCountry.data; \r\n    })\r\n  }\r\n  public togglePasswordVisibility(): void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n  //to show/hide password\r\n  toggleShow() {\r\n   this.hide = !this.hide;\r\n    //  this.input.type = this.hide ? 'text' : 'password';\r\n  }\r\n  toggleShow2() {\r\n    this.hide2 = !this.hide2;\r\n     //  this.input.type = this.hide ? 'text' : 'password';\r\n   }\r\n  // controls for client validation\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n  // controls for customer validation\r\n  get c() {\r\n    return this.customerRegisterForm.controls;\r\n  }\r\n  //control client and customer registetration UI\r\n  show(id) {\r\n    if (id === 1) {\r\n      this.user = Constants.USER.CLIENT;\r\n      this.Custtoggle = false;\r\n      this.showAlert = false;\r\n      this.registerForm.clearValidators();\r\n      //this.disabled = false;\r\n      this.userName = \"Client\";\r\n    }\r\n    else if (id === 2) {\r\n      this.user = Constants.USER.CUSTOMER;\r\n      this.Custtoggle = true;\r\n      this.userName = \"Customer\";\r\n      this.showAlert = false;\r\n      this.customerRegisterForm.clearValidators();\r\n    }\r\n  }\r\n  //client register \r\n  clientRegister() {\r\n    console.log(\" in Client register\", this.registerForm.value)\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let req = {\r\n    \"email\":this.registerForm.controls.email.value,\r\n    \"password\":this.registerForm.controls.password.value,\r\n    \"countryId\":this.countryID,\r\n    \"firstName\" : this.registerForm.controls.firstName.value,\r\n    \"mobile\" : this.registerForm.controls.mobile.value,\r\n    // \"lastName\" :this.registerForm.controls.lastName.value,\r\n    \r\n    }\r\n    this.signupService.registerClientUsers(req).then((data) => {\r\n      this.showClientOtp = true;\r\n      this.successful = true;\r\n    },\r\n    (error)=> {\r\n      this.errorMesage = error.error.error_message;\r\n      this.showAlert = true;\r\n    })\r\n    .catch(error => {\r\n      this.showAlert = true;\r\n      console.log(\"sdsd https://web.iceipts.com/\",this.showAlert)\r\n    })\r\n  }\r\n  //Customer Register\r\n  customerRegister() {\r\n    console.log(\"Customer Register\", this.customerRegisterForm.value)\r\n    this.submitted = true;\r\n    if (this.customerRegisterForm.invalid) {\r\n      return;\r\n    }\r\n    this.signupService.registerCustomerUsers(this.customerRegisterForm.value).then((data) => {\r\n      if (data) {\r\n        let d = {\r\n          mobile: this.customerRegisterForm.controls.mobile.value,\r\n        }\r\n        //this.loginService.postSendOtp(d).then((res)=>{\r\n        this.successful = true;\r\n        this.showCustomerOtp = true;\r\n        this.afterRegister = true;\r\n      }\r\n    },\r\n    (error)=> {\r\n      this.errorMesage = error.error.error_message;\r\n      this.showAlert = true;\r\n    }).catch(error => {\r\n      this.errorMesage = error.error.error_message;\r\n      this.showAlert = true;\r\n    })\r\n  }\r\n  //verify client Otp\r\n  verifyClientOtp() {\r\n    const data = {\r\n      email: this.registerForm.controls.email.value,\r\n      emailotp: this.otpClientData.controls.emailotp.value,\r\n      //type:\"0\",\r\n      //mobileotp:this.otpData.controls.mobileotp.value,\r\n    }\r\n\r\n    this.otpVerify.verifyCLientOtp(data).then((data) => {\r\n    this.router.navigate(['/auth/login'])\r\n    }, (err) => {\r\n      this.toastService.openErrorSnackBar(\"Enter Valid OTP\")\r\n    })\r\n  }\r\n  customerResendOtp() {\r\n    let d = {\r\n      mobile: this.customerRegisterForm.controls.mobile.value,\r\n    }\r\n    this.loginService.postSendOtp(d).then((res) => {\r\n      this.resend = res\r\n    })\r\n    this.messageSuccess = true;\r\n    setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.messageSuccess = false;\r\n    }, 120000);\r\n  }\r\n  clientResendOtp() {\r\n    let d = {\r\n      email: this.registerForm.controls.email.value,\r\n    }\r\n    this.roleSignupService.sendRoleUsersOtp(d).then((res) => {\r\n      this.resend = res\r\n    })\r\n    this.messageSuccess = true;\r\n    setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.messageSuccess = false;\r\n    }, 60000);\r\n  }\r\n  //Verify customer otp\r\n  verifyCustomerOtp() {\r\n    this.showCustomerOtp = true;\r\n    let d = {\r\n      mobile: this.customerRegisterForm.controls.mobile.value,\r\n      //type:\"1\",\r\n      mobileotp: this.otpCustomerData.controls.mobileotp.value,\r\n    }\r\n    this.router.navigate(['/auth/login'])\r\n    // this.otpVerify.verifyCustomertOtp(d).then((data) => {\r\n    //   this.router.navigate(['/auth/login'])\r\n    // }, (err) => {\r\n    //   if (err) {\r\n    //     this.otpErrorMessage = true\r\n    //   }\r\n    // })\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n  setCountryId(option){\r\n    console.log(option)\r\n    let optionid=option.id\r\n    this.countryID=optionid.toString();\r\n  }\r\n  getCountryByname(e){\r\n    let serachkey = e.target.value;\r\n    console.log(\"in the country by name method\", serachkey)\r\n    if(serachkey!=0){\r\n      this.signupService.SearchCountryByNameId({},serachkey).then((res)=>{\r\n        this.AllCountry=res;\r\n        this.CountryList= this.AllCountry.data; \r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Customer Resend OTP\r\n   */\r\n  customerLoginResendOtp() {\r\n    // this.spinner.show();\r\n    // this.isLoginBtn= true;\r\n    let d = {\r\n      mobile: this.customerRegisterForm.controls.mobile.value,\r\n    }\r\n    this.loginService.postSendOtp(d).then((res) => {\r\n      // this.spinner.hide();\r\n      // this.isLoginBtn = false;\r\n      this.resend = res\r\n    },(err)=>{\r\n      // this.isLoginBtn = false;\r\n    })\r\n    this.messageSuccess = true;\r\n    setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.messageSuccess = false;\r\n    }, 120000);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-subcription-end',\r\n  templateUrl: './subcription-end.component.html',\r\n  styleUrls: ['./subcription-end.component.scss']\r\n})\r\nexport class SubcriptionEndComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row min-vh-100 flex-center g-0\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            Gentle Reminder\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <h3>Your trial subscription has end. Please subcribe to our plan to continue.\r\n                <br>\r\n            </h3>\r\n    \r\n            <div class=\"text-center\">\r\n                <button class=\"btn btn-primary\" routerLink=\"/auth/subscription\">\r\n                    Choose Plan\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"card mb-3\">\r\n    <div class=\"card-body px-5\">\r\n       \r\n        \r\n        <div class=\"row g-0\">\r\n            <div class=\"col-12 mb-2\">\r\n                <div class=\"row justify-content-center justify-content-sm-between\">\r\n                    <div class=\"col-sm-auto text-center\">\r\n                        <h2 class=\"d-inline-block\">Billed Annually</h2>\r\n                    </div>\r\n                    <div class=\"col-sm-auto mt-1 mt-sm-0\">\r\n                        <a class=\"btn btn-outline-primary\" style=\"float:right!important;\"(click)=\"goTOBack()\">Back</a>\r\n                       </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Single -->\r\n            <div class=\"col-lg-4 border-top border-bottom\">\r\n                <div class=\"h-100\">\r\n                    <div class=\"text-center p-4\">\r\n                        <h3 class=\"fw-medium my-0 xxl-font-size\">Single</h3>\r\n                        <p class=\"mt-3\">For teams that need to create project plans with confidence.</p>\r\n                        <h2 class=\"fw-medium my-5\">\r\n                            &#8377;0<small class=\"fs--1 text-700\">/ year</small>\r\n                        </h2>\r\n                        <a class=\"btn btn-outline-primary disabled\" routerLink=\"/pages\">Start free trial</a>\r\n                    </div>\r\n                    <hr class=\"border-bottom-0 m-0 overflow-auto\">\r\n                    <div class=\"text-start px-sm-4 py-4\">\r\n                        <h5 class=\"fw-medium fs-0\">Track team projects with free:</h5>\r\n                        <div class=\"d-flex justify-content-center\">\r\n                            <div class=\"spinner-border spinner-border-sm\" *ngIf=\"isShowPlan\" role=\"status\"\r\n                                aria-hidden=\"true\"></div>\r\n                        </div>\r\n                        <ul class=\"list-unstyled mt-3\" *ngIf=\"!isShowPlan\">\r\n                            <li class=\"py-1 larger-font-size\" *ngFor=\"let plan of trailPlan; let i = index\">\r\n                                <span class=\"me-2 fas fa-check text-success\"></span>\r\n                                {{ plan.displayName\r\n                                    | titlecase}}\r\n                            </li>\r\n                        </ul>\r\n                        <!-- <a class=\"btn btn-link\" href=\"#\" *ngIf=\"!isShowPlan\">More about Single</a> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- basic -->\r\n            <div class=\"col-lg-4 border-top border-bottom dark__bg-1000 px-4 px-lg-0\"\r\n                style=\"background-color: rgba(115, 255, 236, 0.18);\">\r\n                <div class=\"h-100\">\r\n                    <div class=\"text-center p-4\">\r\n                        <h3 class=\"fw-medium my-0 xxl-font-size\">Business</h3>\r\n                        <p class=\"mt-3\">For teams and companies that need to manage work across initiatives.</p>\r\n                        <div style=\"border: 0px solid red;\">\r\n                            <div class=\"row\">\r\n                                <!-- basic 3 months -->\r\n                                <div class=\"col-sm-4\" style=\"padding-right: 0px;\">\r\n                                    <div class=\"radio-toolbar\">\r\n                                        <input type=\"radio\" id=\"radioApple\" name=\"radioFruit\" value=\"2\"\r\n                                            class=\"form-check-input\" [(ngModel)]=\"basicId\" checked>\r\n                                        <label for=\"radioApple\">\r\n                                            <h2 class=\"m-0\" (click)=\"getBasicPlanFetaureIdTwo(2)\">\r\n                                                <span style=\"white-space: nowrap;\">&#8377;500</span><br>\r\n                                                <span class=\"text-700 p-0 m-0\" style=\"font-size: 0.8rem;\">\r\n                                                    3 Months\r\n                                                </span>\r\n                                            </h2>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- basic 6 months -->\r\n                                <div class=\"col-sm-4\" style=\"padding-left: 0px;padding-right:0px;\">\r\n                                    <div class=\"radio-toolbar\">\r\n                                        <input type=\"radio\" id=\"radioPlan2\" name=\"radioPlan2\" value=\"3\"\r\n                                            class=\"form-check-input\" [(ngModel)]=\"basicId\" checked>\r\n                                        <label for=\"radioPlan2\">\r\n                                            <h2 class=\"m-0\" (click)=\"getBasicPlanFetaureIdThree(3)\">\r\n                                                <span\r\n                                                    style=\"font-size: 1.2rem;white-space: nowrap;\"><sup>&#8377;</sup>1000</span><br>\r\n                                                <span class=\"text-700 p-0 m-0\" style=\"font-size: 0.8rem;\"> 6\r\n                                                    Months</span>\r\n                                            </h2>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- basic 1 year -->\r\n                                <div class=\"col-sm-4\" style=\"padding-left:0px;\">\r\n                                    <div class=\"radio-toolbar\">\r\n                                        <input type=\"radio\" id=\"radioPlan3\" name=\"radioPlan3\" value=\"4\"\r\n                                            class=\"form-check-input\" [(ngModel)]=\"basicId\" checked>\r\n                                        <label for=\"radioPlan3\">\r\n                                            <h2 class=\"m-0\" (click)=\"getBasicPlanFetaureIdFour(4)\">\r\n                                                <span\r\n                                                    style=\"font-size: 1.2rem;white-space: nowrap;\"><sup>&#8377;</sup>1500</span><br>\r\n                                                <span class=\"text-700 p-0 m-0\" style=\"font-size: 0.8rem;\">1\r\n                                                    Year</span>\r\n                                            </h2>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <a class=\"btn btn-primary mt-3\" (click)=\"basicPostSubscription()\">Get Basic</a>\r\n                    </div>\r\n\r\n                    <hr class=\"border-bottom-0 m-0 overflow-auto\">\r\n                    <!-- Subscription List for Basic -->\r\n                    <div class=\"text-start px-sm-4 py-4\">\r\n                        <h5 class=\"fw-medium fs-0\">Everything in Basic, plus:</h5>\r\n                        <ul class=\"list-unstyled mt-3\">\r\n                            <div *ngIf=\"idTwo\">\r\n                                <div class=\"d-flex justify-content-center\">\r\n                                   \r\n                                <div class=\"spinner-border spinner-border-sm\" *ngIf=\"isShowPlan\" role=\"status\"\r\n                                    aria-hidden=\"true\"></div>\r\n                                    </div>\r\n                                <li class=\"py-1 larger-font-size\"\r\n                                    *ngFor=\"let item of BasicPlanArrayTwo;; let i = index\">\r\n                                    <span class=\"me-2 fas fa-check text-success\"></span>\r\n                                    {{ item.displayName  | titlecase}}\r\n                                </li>\r\n                            </div>\r\n                            <div *ngIf=\"idThree\">\r\n                                <div class=\"d-flex justify-content-center\">\r\n                                <div class=\"spinner-border spinner-border-sm\" *ngIf=\"isShowPlan\" role=\"status\"\r\n                                    aria-hidden=\"true\"></div>\r\n                                    </div>\r\n                                <li class=\"py-1 larger-font-size\"\r\n                                    *ngFor=\"let item of BasicPlanArrayThree;; let i = index\">\r\n                                    <span class=\"me-2 fas fa-check text-success\"></span>\r\n                                    {{ item.displayName | titlecase}}\r\n                                </li>\r\n                            </div>\r\n                            <div *ngIf=\"idFour\">\r\n                                <div class=\"d-flex justify-content-center\">\r\n                                <div class=\"spinner-border spinner-border-sm\" *ngIf=\"isShowPlan\" role=\"status\"\r\n                                    aria-hidden=\"true\"></div>\r\n                                    </div>\r\n                                <li class=\"py-1 larger-font-size\"\r\n                                    *ngFor=\"let item of BasicPlanArrayFour; let i = index\">\r\n                                    <span class=\"me-2 fas fa-check text-success\"></span>\r\n                                    {{ item.displayName | titlecase}}\r\n                                </li>\r\n                            </div>\r\n                        </ul>\r\n                        <!-- <a class=\"btn btn-link\" href=\"#\" *ngIf=\"!isShowPlan\">More about Business</a> -->\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Premium -->\r\n            <div class=\"col-lg-4 border-top border-bottom\">\r\n                <div class=\"h-100\">\r\n                    <div class=\"text-center p-4\">\r\n                        <h3 class=\"fw-medium my-0 xxl-font-size\">Premium</h3>\r\n                        <p class=\"mt-3\">\r\n                            For organizations that need additional security and support.\r\n                        </p>\r\n                        <div class=\"radio-toolbar2\">\r\n                            <label for=\"radioApple23\" style=\"margin: 0px; width: 100%;\r\n                            padding: 5px 10px;border: 2px solid #fff\">\r\n                                <h2 class=\"fw-medium my-4\">&#8377;2999<small class=\"fs--1 text-700\">/ year</small></h2>\r\n                            </label>\r\n                        </div>\r\n                        <a class=\"btn btn-outline-primary mt-3\" data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#selection-feature-modal\">Customize</a>\r\n                    </div>\r\n                    <hr class=\"border-bottom-0 m-0\" />\r\n                    <div class=\"text-start px-sm-4 py-4\">\r\n                        <h5 class=\"fw-medium fs-0\">Everything in Premium, plus:</h5>\r\n                        <ul class=\"list-unstyled mt-3\">\r\n                            <div class=\"d-flex justify-content-center\">\r\n                            <div class=\"spinner-border spinner-border-sm\" *ngIf=\"isShowPlan\" role=\"status\"\r\n                                aria-hidden=\"true\"></div>\r\n                            </div>\r\n                            <li class=\"py-1 larger-font-size\" *ngFor=\"let plan of premiumPlanArrayFive; let i = index\">\r\n                                <span class=\"me-2 fas fa-check text-success\"></span>\r\n                                {{ plan.displayName  | titlecase}}\r\n                            </li>\r\n                        </ul>\r\n                        <!-- <a class=\"btn btn-link\" href=\"#\" *ngIf=\"!isShowPlan\">More about Extended</a> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"col-12 text-center\">\r\n                <h5 class=\"mt-3\">\r\n                    Looking for personal or small team task management?\r\n                </h5>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade fs--1\" id=\"selection-feature-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog fs--1 modal-dialog-centered\" role=\"document\" style=\"max-width: 900px\">\r\n        <div class=\"modal-content fs--1 position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <button class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" #closebutton\r\n                    data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body fs--1 p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6\">\r\n                    <h2 class=\"mb-1 text-center\" \r\n                        style=\"font-size: 20px; font-weight: bold;\" \r\n                        id=\"modalExampleDemoLabel\">\r\n                        Premium Features\r\n                    </h2>\r\n                </div>\r\n                <div class=\"row text-center m-2\">\r\n                    <div class=\"col-sm-4\">\r\n                        <h2 class=\"fw-medium my-4 thumbnail\" (click)=\"getPremiumPackDays(5)\">\r\n                            <span class=\"fs--1\">From</span>\r\n                            &#8377;<span class=\"text-nowrap\" style=\"font-size: 20px\">499</span><small\r\n                                class=\"fs--1 text-nowrap text-700\">\r\n                                <br />\r\n                                / 90days</small>\r\n                        </h2>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <h2 class=\"fw-medium my-4 thumbnail\" (click)=\"getPremiumPackDays(6)\">\r\n                            <span class=\"fs--1\">From</span>\r\n                            &#8377;<span class=\"text-nowrap\" style=\"font-size: 20px\">999</span><small\r\n                                class=\"fs--1 text-nowrap text-700\">\r\n                                <br />\r\n                                / 180days</small>\r\n                        </h2>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <h2 class=\"fw-medium my-4 thumbnail\" (click)=\"getPremiumPackDays(7)\">\r\n                            <span class=\"fs--1\">From</span>\r\n                            &#8377;<span class=\"text-nowrap\" style=\"font-size: 20px\">999</span><small\r\n                                class=\"fs--1 text-nowrap text-700\">\r\n                                <br />\r\n                                / 365days</small>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"form-check form-check-inline\" style=\"margin-left:20px\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" [(ngModel)]=\"premiumId\" value=\"5\" [checked]=\"true\" (change)=\"getPremiumPackDays($event.target.value)\">\r\n                    <label class=\"form-check-label\" for=\"inlineRadio1\">90 Days</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" [(ngModel)]=\"premiumId\" value=\"6\" (change)=\"getPremiumPackDays($event.target.value)\">\r\n                    <label class=\"form-check-label\" for=\"inlineRadio2\">180 Days</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" [(ngModel)]=\"premiumId\" value=\"7\" (change)=\"getPremiumPackDays($event.target.value)\">\r\n                    <label class=\"form-check-label\" for=\"inlineRadio3\">365 Days</label>\r\n                </div> -->\r\n\r\n\r\n                <div class=\"p-2 pb-0 table-responsive\">\r\n                    <form [formGroup]=\"subscriptionForm\">\r\n                        <div formArrayName=\"Rows\">\r\n                            <table class=\"table table-bordered fs--1 mb-0\">\r\n                                <thead class=\"text-center\">\r\n                                    <tr>\r\n                                        <th scope=\"col\" class=\"text-white\">#</th>\r\n                                        <th scope=\"col\" class=\"text-white\">Features</th>\r\n                                        <!-- <th scope=\"col\" class=\"text-primary \">Description</th> -->\r\n                                        <th scope=\"col\" class=\"text-white \">Price</th>\r\n                                        <th scope=\"col\" class=\"text-white \">Select</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody class=\"text-center\">\r\n                                    <tr *ngFor=\"\r\n                      let feature of subscriptionForm.get('Rows')['controls'];\r\n                      let i = index \r\n                    \" [formGroupName]=\"i\">\r\n                                        <td style = \"padding-top: 1.3rem !important;\">{{ i + 1 }}</td>\r\n\r\n                                        <td>\r\n                                            <input  readonly type=\"text\" formControlName=\"featureName\"  class=\"form-control form-control-sm\" />\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <input readonly type=\"text\"  formControlName=\"price\" class=\"form-control form-control-sm\" />\r\n                                        </td>\r\n                                        <td style = \"padding-top: 1.3rem !important;\">\r\n                                            <span style=\"justify-content: center\"\r\n                                                class=\"d-flex form-check form-check-sm\">\r\n                                                <input class=\"form-check-input\" formControlName=\"active\"\r\n                                                    id=\"flexCheckDefault\" type=\"checkbox\" [checked]=\"true\"\r\n                                                    (change)=\"onCheckChange(feature.value,$event.target.checked,i)\" />\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tfoot>\r\n                                    <tr class=\"text-center fs--1\">\r\n                                        <th scope=\"col\"></th>\r\n                                        <th scope=\"col\"></th>\r\n                                        <th scope=\"col\" style=\"color: #000000\"> Total</th>\r\n                                        <th scope=\"col\" style=\"color: #000000\">\r\n                                            {{ total }}\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr class=\"text-center fs--1\">\r\n                                        <th scope=\"col\" style=\"color: #000000\">Plan Details</th>\r\n                                        <th scope=\"col\" style=\"color: #000000\">\r\n                                            {{ planDays }}\r\n                                        </th>\r\n                                        <th scope=\"col\" style=\"color: #000000\">Grand Total</th>\r\n                                        <th scope=\"col\" style=\"color: #000000\">\r\n                                            {{ grandTotal }}\r\n                                        </th>\r\n                                    </tr>\r\n                                </tfoot>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button class=\"btn btn-outline-primary fs--1\" type=\"button\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                </button>\r\n                <button class=\"btn btn-outline-primary fs--1\" type=\"button\" (click)=\"premiumPostSubscription()\" id=\"closeModal\"\r\n                    [disabled]=\"grandTotal ==  null\">Pay</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { InvokeMethodExpr, splitClasses } from \"@angular/compiler\";\r\nimport { Component, IterableDiffers, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap, Router } from \"@angular/router\";\r\nimport { element } from \"protractor\";\r\nimport { SubscriptionService } from \"src/app/core/services/subscription.service\";\r\nimport {Location} from '@angular/common';\r\n\r\n@Component({\r\n  selector: \"subscription\",\r\n  templateUrl: \"./subscription.component.html\",\r\n  styleUrls: [\"./subscription.component.scss\"],\r\n})\r\nexport class SubscriptionComponent implements OnInit {\r\n  @ViewChild('closebutton') closebutton;\r\n  public subscriptionForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  public basicSubscriptionForm: FormGroup;\r\n  //public Rows:FormArray;\r\n  public featuresArray: any;\r\n  public featureData: number;\r\n  public total = 0;\r\n  public isActive = false;\r\n  public features = [];\r\n  public pseudoArray = [];\r\n  public plans: any;\r\n  public trailPlan: any;\r\n  public basicPlanIdTwo: any;\r\n  public notSelectedDay: boolean = false;\r\n  public basicPlanIdThree: any;\r\n  public basicPlanIdFour: any;\r\n  public premiumPlanIdFive: any;\r\n  public premiumPlanIdSix: any;\r\n  public premiumPlanIdSeven: any;\r\n  public basicId: any;\r\n  public premiumId: any;\r\n  public featureLength: any;\r\n  public trialPlanId: any;\r\n  public id: any;\r\n  public array = [];\r\n  public BasicPlanArrayTwo: any;\r\n  public BasicPlanArrayThree: any;\r\n  public BasicPlanArrayFour: any;\r\n  public premiumPlanArrayFive: any;\r\n  public premiumPlanArraySix: any;\r\n  public premiumPlanArraySeven: any;\r\n  public idTwo = false;\r\n  public idThree = false;\r\n  public idFour = false;\r\n  public idFive = false;\r\n  public idSix = false;\r\n  public idSeven = false;\r\n  public checkStat = false;\r\n  public planDays: any;\r\n  public checked: boolean = true;\r\n  public grandTotal: any;\r\n  public isShowPlan :boolean = true;\r\n\r\n  constructor(\r\n    public subscriptionService: SubscriptionService,\r\n    public fb: FormBuilder,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public _location: Location\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSubscriptionPlans();\r\n    this.getAllSubscriptionFeatures();\r\n    // this.getBasicPlanFetaureIdTwo(2);\r\n    // this.getPremiumPlanFetaureIdFive(5);\r\n\r\n\r\n    //form for modal\r\n    this.subscriptionForm = this.fb.group({\r\n      //   grandTotal:[\"\",this.total],\r\n      Rows: this.fb.array([]),\r\n    });\r\n    this.basicSubscriptionForm = this.fb.group({\r\n      basic90days: false,\r\n      basic180days: false,\r\n      basic365days: false,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get FormArray controls\r\n   */\r\n  get formArray() {\r\n    return this.subscriptionForm.get(\"Rows\") as FormArray;\r\n  }\r\n\r\n  addNewRow() {\r\n    const content = this.subscriptionForm.get(\"Rows\") as FormArray;\r\n    content.push(this.initRows());\r\n  }\r\n\r\n  initRows(): FormGroup {\r\n    return new FormGroup({\r\n      featureName: new FormControl(),\r\n      price: new FormControl(),\r\n      featureId: new FormControl(),\r\n      active: new FormControl(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get All Subscription Features\r\n   */\r\n  getAllSubscriptionFeatures() {\r\n    this.isActive = true;\r\n    this.subscriptionService.getFeatures({}).then((res) => {\r\n      this.featuresArray = res.data;\r\n      // this.findTotal(this.featuresArray);\r\n      if (res.data != null) {\r\n        if (res.data.length > 0) {\r\n          res.data.forEach((element, index) => {\r\n            this.addNewRow();\r\n            this.formArray.controls[index].patchValue({\r\n              featureName:\r\n                element.displayName.charAt(0).toUpperCase() +\r\n                element.displayName.substr(1).toLowerCase(),\r\n              price: element.price,\r\n              featureId: element.id\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * get all main plans\r\n   */\r\n  getAllSubscriptionPlans() {\r\n    this.subscriptionService.getPlans({}).then((res) => {\r\n      this.trialPlanId = +res.data\r\n        .filter((x, index) => index == 0)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.basicPlanIdTwo = +res.data\r\n        .filter((x, index) => index == 1)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.basicPlanIdThree = +res.data\r\n        .filter((x, index) => index == 2)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.basicPlanIdFour = +res.data\r\n        .filter((x, index) => index == 3)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.premiumPlanIdFive = +res.data\r\n        .filter((x, index) => index == 4)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.premiumPlanIdSix = +res.data\r\n        .filter((x, index) => index == 5)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.premiumPlanIdSeven = +res.data\r\n        .filter((x, index) => index == 6)\r\n        .map((x) => x.id)\r\n        .join();\r\n      this.getTrialPlanFetaure(this.trialPlanId);\r\n      this.getBasicPlanFetaureIdTwo(this.basicPlanIdTwo);\r\n      this.getBasicPlanFetaureIdThree(this.basicPlanIdThree);\r\n      this.getBasicPlanFetaureIdFour(this.basicPlanIdFour);\r\n      this.getPremiumPlanFetaureIdFive(this.premiumPlanIdFive);\r\n      this.getPremiumPlanFetaureIdSix(this.premiumPlanIdSix);\r\n      this.getPremiumPlanFetaureIdSeven(this.premiumPlanIdSeven);\r\n      //this.planId=id;\r\n      // console.log(\"trailPlanId\", this.trialPlanId);\r\n      // console.log(\"basicPlanIdTwo\", this.basicPlanIdTwo);\r\n      // console.log(\"basicPlanIdThree\", this.basicPlanIdThree);\r\n      // console.log(\"basicPlanIdFour\", this.basicPlanIdFour);\r\n      // console.log(\"premiumPlanIdFive\", this.premiumPlanIdFive);\r\n      // console.log(\"premiumPlanIdSix\", this.premiumPlanIdSix);\r\n      // console.log(\"premiumPlanIdSeven\", this.premiumPlanIdSeven);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * get trial plan feature by id\r\n   * @param trialPlanId \r\n   */\r\n  getTrialPlanFetaure(trialPlanId) {\r\n    this.subscriptionService.getFetaureById({}, trialPlanId).then((res) => {\r\n      this.isShowPlan = false;\r\n      this.trailPlan = res.data;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * get basic plan feature by id 2\r\n   * @param basicPlanIdTwo \r\n   */\r\n  getBasicPlanFetaureIdTwo(basicPlanIdTwo) {\r\n    this.idThree = false;\r\n    this.idFour = false;\r\n    this.idTwo = true;\r\n\r\n    this.subscriptionService.getFetaureById({}, basicPlanIdTwo).then((res) => {\r\n      this.isShowPlan = false;\r\n      this.BasicPlanArrayTwo = res.data;\r\n    });\r\n    // this.basicId = basicPlanIdTwo;\r\n  }\r\n  /**\r\n   * get basic plan feature by id 3\r\n   * @param basicPlanIdThree \r\n   */\r\n  getBasicPlanFetaureIdThree(basicPlanIdThree) {\r\n    this.idTwo = false;\r\n    this.idFour = false;\r\n    this.idThree = true;\r\n    this.subscriptionService\r\n      .getFetaureById({}, basicPlanIdThree)\r\n      .then((res) => {\r\n        this.isShowPlan = false;\r\n        this.BasicPlanArrayThree = res.data;\r\n      });\r\n      // this.basicId = basicPlanIdThree;\r\n  }\r\n  /**\r\n   * get basic plan feature by id 4\r\n   * @param basicPlanIdFour \r\n   */\r\n  getBasicPlanFetaureIdFour(basicPlanIdFour) {\r\n    this.idThree = false;\r\n    this.idTwo = false;\r\n    this.idFour = true;\r\n\r\n    this.subscriptionService.getFetaureById({}, basicPlanIdFour).then((res) => {\r\n      this.isShowPlan = false;\r\n      this.BasicPlanArrayFour = res.data;\r\n    });\r\n    // this.basicId = basicPlanIdFour;\r\n  }\r\n  /**\r\n   * get basic plan feature by id 5\r\n   * @param premiumPlanIdFive \r\n   */\r\n  getPremiumPlanFetaureIdFive(premiumPlanIdFive) {\r\n    this.idSix = false;\r\n    this.idSeven = false;\r\n    this.idFive = true;\r\n\r\n    this.subscriptionService\r\n      .getFetaureById({}, premiumPlanIdFive)\r\n      .then((res) => {\r\n        this.isShowPlan = false;\r\n        this.premiumPlanArrayFive = res.data;\r\n      });\r\n  }\r\n  /**\r\n   * get basic plan feature by id 6\r\n   * @param premiumPlanIdSix \r\n   */\r\n  getPremiumPlanFetaureIdSix(premiumPlanIdSix) {\r\n    this.idSix = true;\r\n    this.idSeven = false;\r\n    this.idFive = false;\r\n\r\n    this.subscriptionService\r\n      .getFetaureById({}, premiumPlanIdSix)\r\n      .then((res) => {\r\n        this.premiumPlanArraySix = res.data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get basic plan feature by id 7\r\n   * @param premiumPlanIdSeven \r\n   */\r\n  getPremiumPlanFetaureIdSeven(premiumPlanIdSeven) {\r\n    this.idSix = false;\r\n    this.idSeven = true;\r\n    this.idFive = false;\r\n\r\n    this.subscriptionService\r\n      .getFetaureById({}, premiumPlanIdSeven)\r\n      .then((res) => {\r\n        this.premiumPlanArraySeven = res.data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * post subscribe basic plan with 90 days\r\n   */\r\n  basicPostSubscription() {\r\n    let data = {\r\n      \"subscriptionPlanId\": this.basicId,\r\n      \"userId\": this.currentUser.id,\r\n    };\r\n    // console.log(\"basicId: \" + this.basicId)\r\n    // console.log(\"userId: \" + this.currentUser.id)\r\n    this.subscriptionService.basicSubsription(data).then((res) => {\r\n      this.router.navigate([`auth/payment-subscription/${this.basicId}/${res.data.subscriptionPaymentId}/${res.data.userSubscriptionId}`])\r\n    });\r\n\r\n\r\n  }\r\n  /**\r\n   * Get Radio button values according to days\r\n   * @param days \r\n   */\r\n  getPremiumPackDays(days) {\r\n    this.premiumId = days;\r\n    if (days == 5) {\r\n      this.grandTotal = 0;\r\n      this.planDays = \"90Days\";\r\n      this.grandTotal = 3 * this.total;\r\n    }\r\n    else if (days == 6) {\r\n      this.grandTotal = 0;\r\n      this.planDays = \"180Days\";\r\n      this.grandTotal = 6 * this.total;\r\n    }\r\n    else if (days == 7) {\r\n      this.grandTotal = 0;\r\n      this.planDays = \"365days\";\r\n      this.grandTotal = (365 / 30 * this.total).toFixed(2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get checkbox value total accoridng to selected features\r\n   * @param item \r\n   * @param event \r\n   * @param i \r\n   */\r\n  onCheckChange(item, event: boolean, i) {\r\n    if (event) {\r\n      var index = this.pseudoArray.indexOf(item.featureId);\r\n      if (index == -1) {\r\n        this.pseudoArray.push(item.featureId)\r\n      }\r\n      if (this.premiumId == 5) {\r\n        this.total += item.price;\r\n        //this.planDays = \"90Days\";\r\n        this.grandTotal = 3 * this.total;\r\n      }\r\n      else if (this.premiumId == 6) {\r\n        this.total += item.price;\r\n        this.grandTotal = 0;\r\n        this.planDays = \"180Days\";\r\n        this.grandTotal = 6 * this.total;\r\n      }\r\n      else if (this.premiumId == 7) {\r\n        this.total += item.price;\r\n        this.grandTotal = 0;\r\n        this.planDays = \"365days\";\r\n        this.grandTotal = (365 / 30 * this.total).toFixed(2);\r\n      } else {\r\n        this.total += item.price;\r\n      }\r\n    }\r\n    else if (!event) {\r\n      var index = this.pseudoArray.indexOf(item.featureId);\r\n      if (index !== -1) {\r\n        this.pseudoArray.splice(index, 1);\r\n      }\r\n      if (this.premiumId == 5) {\r\n        this.total -= item.price;\r\n        //this.planDays = \"90Days\";\r\n        this.grandTotal = 3 * this.total;\r\n      }\r\n      else if (this.premiumId == 6) {\r\n        this.total -= item.price;\r\n        this.grandTotal = 0;\r\n        this.planDays = \"180Days\";\r\n        this.grandTotal = 6 * this.total;\r\n      }\r\n      else if (this.premiumId == 7) {\r\n        this.total -= item.price;\r\n        this.grandTotal = 0;\r\n        this.planDays = \"365days\";\r\n        this.grandTotal = (365 / 30 * this.total).toFixed(2);\r\n      } else {\r\n        this.total -= item.price;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Post customer premium plan details\r\n   */\r\n  premiumPostSubscription() {\r\n    let data = {\r\n      \"subscriptionPlanId\": this.premiumId,\r\n      \"userId\": this.currentUser.id,\r\n      \"featureId\": this.pseudoArray,\r\n      \"amount\": this.grandTotal\r\n    }\r\n    // console.log(\"premiumId: \" + this.premiumId)\r\n    this.subscriptionService.premiumSubscription(data).then((res) => {\r\n      this.closebutton.nativeElement.click();\r\n      //this.router.navigate([`auth/payment-subscription/${this.premiumId}`])\r\n      this.router.navigate([`auth/payment-subscription/${this.premiumId}/${res.data.subscriptionPaymentId}/${res.data.userSubscriptionId}`])\r\n    })\r\n  }\r\n  goTOBack(){\r\n    this._location.back();\r\n  \r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-term-condition-page',\r\n  templateUrl: './term-condition-page.component.html',\r\n  styleUrls: ['./term-condition-page.component.scss']\r\n})\r\nexport class TermConditionPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2\">\r\n    <div class=\"col-lg-2 col-2 col-md-2\"></div>\r\n    <div class=\"col-lg-8 col-8 col-md-8\">\r\n        <div class=\"card\" style=\"margin-left: 10px!important;margin-right: 10px!important;\">\r\n            <div class=\"card-header bg-light pt-3 pb-3\">\r\n                <p class=\"d-md-inline-block fs--1 mt-3 ml-5\" style=\"font-weight:800;font-size:24px!important;\">\r\n                    iCeipts Privacy Policy\r\n                </p>\r\n            </div>\r\n            <div class=\"progress\" style=\"height: 2px\">\r\n                <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"33\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>iCeipts is committed to protecting your privacy and this privacy statement describes in\r\n                            greater detail the privacy practices of iCeipts Technologies </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">General</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>Review these Terms of Service (\"Agreement\") thoroughly.\r\n                            This Agreement is a legal agreement between the User and iCeipts.\r\n                            By accepting electronically (for example, clicking “I Agree”), installing, accessing or using the\r\n                            Services, User agrees to these terms.\r\n                            If the User does not agree to this Agreement, then he/she may not use the Services. This License\r\n                            Agreement shall be governed by and construed in accordance with the laws of the INDIA.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Modification of terms & conditions</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>These terms may be updated from time to time in the future.\r\n                            The User should agree to review our Terms and Conditions regularly by visiting this page.\r\n                            Continued access to or use of the service will mean that the User agrees to the change.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">When This Privacy Statement Applies</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>Its liability to the User is limited to those who have downloaded the iCeipts\r\n                            application by clicking on the “I Agree/Login” button for Terms and Conditions.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Description of Services</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>We provide an array of services including Inventory management, Invoicing, Reporting tool,\r\n                            Estimate/Order Form creator and so on to serve as a complete business management software (\"Service\"\r\n                            or \"Services\"). The User may use the Services for his/her personal and business use or for internal\r\n                            business purpose in the organization that he/she represent. The User may download the application\r\n                            from the Official website/ Google Play Store using the Internet. Once downloaded, the User no longer\r\n                            needs an internet connection for its usage. A User can create and add content to his/her account\r\n                            staying offline.\r\n                            But, the User is responsible for obtaining access to the Internet and the device necessary to use\r\n                            the Services. ( Side Note: iCeipts tries its best to make Businesses compliant to\r\n                            taxation and other laws as much as possible.\r\n                            But, it is solely the User’s responsibility to see that he/she remains compliant with GST and other\r\n                            laws levied by Government. iCeipts is not in any case responsible for the violation of\r\n                            the compliance caused by software)</p>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Business Data and Privacy</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>The User alone is responsible for maintaining the confidentiality of his/her username, password and\r\n                            other sensitive information.\r\n                            He/She is responsible for all activities that occur in his/her user account and he/she agrees to\r\n                            inform us immediately of any unauthorized use of their user account by email to admin@iceipts.com.\r\n                            in or by calling us on any of the numbers listed on http://vyaparapp.in/#contact.\r\n                            We are not responsible for any loss or damage to his/her or to any third party incurred as a result\r\n                            of any unauthorized access and/or use of his/her user account, or otherwise.\r\n                            We are neither responsible for any kind of data loss as performing necessary backups on data is\r\n                            solely the User’s responsibility.\r\n                            iCeipts is not responsible for any kind of data discrepancy or any type of loss occured\r\n                            due to data discrepancy/software issue.</p>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Data Ownership</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>The User owns the content created or stored by his/her as we respect his/her right to ownership of\r\n                            content created or stored by them.\r\n                            The Users use of the Services does grant iCeipts  the license to use, reproduce, adapt,\r\n                            modify, publish or distribute the content created by them or stored in the user’s account for\r\n                            iCeipts internal purpose.\r\n                            iCeipts tries keeping Users data safe but holds zero responsibility in case of data\r\n                            leaks</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Permissions</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Camera:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p>To take the picture of the bills etc to be attached with transactions.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row \">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Contacts:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p> This app collects contact information like number of contacts on the device with a phone number\r\n                                and without a phone number. In addition to it, the app collects other non-personal information\r\n                                to understand the risk profile of the user and enable credit facility.\r\n                                This app doesn't upload your contacts information like names, phone numbers, emails addresses\r\n                                and other personal information to our servers.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Storage:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p>This app collects metadata of files on your device like file names, types, created times, last\r\n                                updated times for credit profile enrichment.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Location:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p>This app collects location details to verify your location & current address, to ensure\r\n                                serviceability and to identify unusual activity to prevent against any fraud, we do not collect\r\n                                location when app is in background.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">SMS:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p> This app collects SMS data like sender names, SMS body, received time to understand your income,\r\n                                spending patterns and automatically fetch your expenses, bills, credits. We do not read any\r\n                                personal or OTP messages. This data will be shared with Finbox at\r\n                                https://riskmanager.apis.finbox.in</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Device and Personal\r\n                                info:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p> This app collects and monitor specific information about users' Phone Number and your device\r\n                                including your hardware model, masked phone numbers, operating system and version, unique device\r\n                                identifiers like IMEI and serial number, user profile information to uniquely identify the\r\n                                devices and ensure that unauthorized devices are not able to act on your behalf to prevent\r\n                                frauds.\r\n                                This data will be shared with Finbox at https://riskmanager.apis.finbox.in</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Accounts:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p> This app collects and monitor list of account information like account names, account types in\r\n                                your device for credit profile enrichment.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Apps:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p>This app collects details of your installed applications to understand your profile. This helps\r\n                                us give quicker approvals and higher credit limits.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Call logs:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p>This app uses call logs permission to validate your phone number using missed call. In addition\r\n                                to it, details of your aggregated call information is collected to understand your profile. This\r\n                                helps us give quicker approvals and higher credit limits.\r\n                                We do not read the phone numbers or any personal information.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <p style=\"font-weight:800;font-size:16px!important; color: rgb(71, 157, 168);\">Calendar:</p>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <p> This app collects event data on your calendar for credit profile enrichment.</p>\r\n                        </div>\r\n                    </div>\r\n        \r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Permissions Usage:</p>\r\n                        <hr style=\"border-bottom: 3px solid #ccc!important;\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Collection of contact</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>This is how we will use your contact permissions:</p>\r\n                        <p>(i) We allow users to sync their contacts from mobile to desktop, the contact permissions will be\r\n                            used to facilitate this.</p>\r\n                        <p>(ii) We will show parties that are already iCeipts  users, to show you your potential\r\n                            buyers and suppliers.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Collection of SMS information</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>We will use SMS data like sender names, SMS body, received time to understand your income, spending\r\n                            patterns and automatically fetch your expenses, bills, credits. We do not read any personal or OTP\r\n                            messages.</p>\r\n                        <p>We collect and monitor SMS sent by 6-digit alphanumeric senders from your inbox to understand your\r\n                            income, spending patterns and automatically fetch your expenses, bills, credits.\r\n                            We collect your historical SMS data as well, as this process will enable you to take financial\r\n                            facilities like loans, credit cards from the regulated financial entities available on the platform.\r\n                            We do not read any personal or OTP messages.\r\n                            This data will be shared with Finbox at https://riskmanager.apis.finbox.in</p>\r\n        \r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Collection of device location, device information\r\n                            and personal information</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>\r\n                            We collect and monitor the information about the location of your device to provide serviceability\r\n                            of your loan application, to reduce the risk associated with your loan application and to provide\r\n                            pre-approved customised loan offers.\r\n                            This also helps us to verify the address, make a better credit risk decision and expedite the know\r\n                            your customer (KYC) process.\r\n                            Information the App collects, and its usage depends on how you manage your privacy controls on your\r\n                            device.\r\n                            When you install the App, we store the information we collect with unique identifiers tied to the\r\n                            device you are using.\r\n                            We collect information from the device when you download and install the App and explicitly seek\r\n                            permissions from You to get the required information from the device.\r\n                        </p>\r\n                        <p>\r\n                            The information we collect from your device includes the users' phone number, masked phone numbers,\r\n                            hardware model, build model, RAM, storage; unique device identifiers like IMEI, serial number,\r\n                            SSAID; SIM information that includes network operator, roaming state, MNC and MCC codes, WIFI\r\n                            information that includes MAC address and mobile network information to uniquely identify the\r\n                            devices and ensure that no unauthorized device acts on your behalf to prevent frauds.\r\n                            This data will be shared with Finbox at https://riskmanager.apis.finbox.in\r\n                        </p>\r\n        \r\n        \r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Collection of installed applications</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>\r\n                            We collect a list of the installed applications’ metadata information which includes the application\r\n                            name, package name, installed time, updated time, version name and version code of each installed\r\n                            application on your device to assess your creditworthiness and enrich your profile with pre-approved\r\n                            customized loan offers.\r\n                        </p>\r\n        \r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Collection of Images</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>\r\n                            The images uploaded by users in iCeipts App are stored on our servers so they can be\r\n                            accessed from multiple devices. We do this to enhance your user experience and make it seamless.\r\n                        </p>\r\n        \r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Storage</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>\r\n                            We require storage permission so that your KYC and other relevant documents can be securely\r\n                            downloaded and saved on your phone. You can then easily upload the correct KYC related documents for\r\n                            faster loan application details filling and disbursal process. This ensures that you are provided\r\n                            with a seamless experience while using the application.\r\n                        </p>\r\n        \r\n                    </div>\r\n                </div>\r\n        \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Camera</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>\r\n                            We require the camera information permission to provide you with an easy/smooth experience and to\r\n                            enable you to click photos of your KYC documents along with other requisite documents and upload the\r\n                            same on the App during your loan application journey.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Collection of other non-personal information</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>\r\n                            We automatically track certain information about you based upon your behaviour on our Platform.\r\n                            We use this information to do internal research on our users’ demographics, interests, and behaviour\r\n                            to better understand, protect and serve our users and improve our services.\r\n                            This information is compiled and analysed on an aggregated basis.\r\n                            We also collect your Internet Protocol (IP) address and the URL used by you to connect your computer\r\n                            to the internet, etc.\r\n                            This information may include the URL that you just came from (whether this URL is on our Website or\r\n                            not), which URL you next go to (whether this URL is on our Website or not), your computer browser\r\n                            information, and your IP address.\r\n                        </p>\r\n                        <p>\r\n                            Cookies are small data files that a Website stores on Your computer.\r\n                            We will use cookies on our Website similar to other lending websites/apps and online marketplace\r\n                            websites/apps.\r\n                            Use of this information helps Us identify You in order to make our Website more user friendly.\r\n                            Most browsers will permit You to decline cookies but if You choose to do this it might affect\r\n                            service on some parts of Our Website. If you choose to make a purchase through the Platform, we\r\n                            collect information about your buying behaviour.\r\n                            We retain this information as necessary to resolve disputes, provide customer support and\r\n                            troubleshoot problems as permitted by law.\r\n        \r\n                        </p>\r\n                        <p>\r\n                            If you send us personal correspondence, such as emails or letters, or if other users or third\r\n                            parties send us correspondence about your activities or postings on the Website, we collect such\r\n                            information into a file specific to you.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Link to third-party SDK</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>The iCeipts Platform has a link to a registered third party SDK that collects data on our behalf and\r\n                            data is stored on a secured server to perform a credit risk assessment.\r\n                            We ensure that our third-party service provider takes extensive security measures in order to\r\n                            protect your personal information against loss, misuse or alteration of the data.\r\n                            Our third-party service provider employs separation of environments and segregation of duties and\r\n                            has strict role-based access control on a documented, authorized, need to-use basis.\r\n        \r\n                        </p>\r\n                        <p>\r\n                            The stored data is protected and stored by application-level encryption. They enforce key management\r\n                            services to limit access to data.\r\n                            Furthermore, our registered third party service provider provides hosting security – they use\r\n                            industry-leading anti-virus, anti-malware, intrusion prevention systems, intrusion detection\r\n                            systems, file integrity monitoring, and application control solutions\r\n        \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Approval of Alerts, Messages and Promotional\r\n                            campaign</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>In addition to the General Conditions of iCeipts service a User agrees to be bound by the following\r\n                            terms and conditions:\r\n                        </p>\r\n                        <p>(i) The User agrees to receive promotional, transactional and commercial communications from Vyapar\r\n                            through calls, email, SMS or push notifications.\r\n                        </p>\r\n                        <p>(ii) Under certain conditions, promotional messages are transmitted to the users and that vyapar\r\n                            shall not bear any further obligation in respect of such promotional messages.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">Cancellation/Refund Policy:</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>1. If the Refund request is reported to us through email/website within 7 days of purchase and we\r\n                            will give you 100% money back.\r\n                        </p>\r\n                        <p>2. The refund request should be raised via email or website.</p>\r\n                        <p>3. Refund policies will be applicable only for purchases equal to or more than 1 year.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p style=\"font-weight:800;font-size:18px!important;\">END OF TERMS OF SERVICE</p>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                        <p>If you have any questions or concerns regarding this Agreement, please contact us at\r\n                            admin@iceipts.com</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-lg-2 col-2 col-md-2\"></div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<main class=\"main\" id=\"top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row min-vh-100 flex-center g-0\">\r\n            <div class=\"col-lg-8 col-xxl-6 py-3 position-relative\">\r\n                <div class=\"card overflow-hidden z-index-1\">\r\n                    <div class=\"card-body p-0\">\r\n                        <div class=\"row g-0 h-100\">\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 bg-card-gradient\" style=\"\r\n                          display: flex; align-items: stretch;\r\n                          width:48.8%;\r\n                          height:700px;\r\n                          background-size:contain;\r\n                          background-position: center center;\r\n                          background: linear-gradient(0deg, rgba(17, 1, 82, 0.7), rgba(17, 1, 82, 0.7)), url(../../../assets/img/login-img/8.png);;\r\n                          \">\r\n                                <div class=\"position-relative p-3\">\r\n                                    <div class=\"z-index-1 position-relative p-3\">\r\n\r\n                                        <p class=\"mt-3 d-flex\">\r\n                                            <img src=\"assets/img/icons/spot-illustrations/new-logo-iceipt.png\"\r\n                                                alt=\"iceipts logo\" width=\"80\" height=\"80\">\r\n                                        </p>\r\n                                        <i class=\"fas fa-quote-left d-flex mt-5\" style=\"color: #00DAF7;\"></i>\r\n                                        <br><br>\r\n                                        <p class=\"opacity-75 text-white d-flex justify-content-start\">\r\n                                            The technology that looks imposible today will<br>be part of our life\r\n                                            tomorrow. Iceipts technology<br>creating difference.\r\n                                        </p>\r\n                                        \r\n                                        <p class=\"opacity-75 text-white d-flex\">Sibanee kar</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"position-relative pt-md-7 pb-md-7 light\">\r\n                                    <div class=\"bg-holder bg-auth-card-shape\" style=\"\r\n                                        background-image: url(../../../assets/img/icons/spot-illustrations/half-circle.png);\r\n                                        \">\r\n                                    </div> -->\r\n                                    <!--/.bg-holder-->\r\n                                    <!-- <div class=\"z-index-1 position-relative\">\r\n                                        <a\r\n                                            class=\"link-light mb-4 mt-3 font-sans-serif fs-4 d-inline-block fw-bolder\">iCeipts</a>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Welcome!\r\n                                        </p>\r\n                                        <p class=\"mt-3\">\r\n                                            <img src=\"../assets/img/logos/96_icon3.png\" alt=\"iceipts logo\" width=\"90\"\r\n                                                height=\"90\">\r\n                                        </p>\r\n                                        <p class=\"opacity-75 text-white\">\r\n                                            Take your shopping experience a level ahead\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt-3 mb-4 light\">\r\n                                    <p class=\"text-white\">\r\n                                        Don't have an account?<br /><a class=\"text-decoration-underline link-light\"\r\n                                            routerLink=\"/auth/register\">Get started!</a>\r\n                                    </p>\r\n                                    <p class=\"mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75\">\r\n                                        Read our\r\n                                        <a class=\"text-decoration-underline text-white\">terms</a> and\r\n                                        <a class=\"text-decoration-underline text-white\">conditions\r\n                                        </a>\r\n                                    </p>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-sm-12 col-md-7 col-lg-7 d-flex flex-center\" style=\"width:50%\">\r\n                                <div class=\"p-4 p-md-5 flex-grow-1 form-body\">\r\n                                    <div class=\"text-center text-md-start\">\r\n                                        <h4 class=\"mb-0 fw-bolder\">Verify your OTP</h4>\r\n                                        <p class=\"mb-4 \">Enter your Email and we'll send you a reset link.</p>\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-sm-8 col-md\">\r\n                                            <form [formGroup]=\"VerifyOTPForm\" class=\"mb-3\">\r\n                                                <input class=\"form-control mb-2\" formControlName=\"forgetpass\"\r\n                                                    type=\"email\" placeholder=\"Email address\"\r\n                                                    [ngClass]=\"{\r\n                                                    'is-invalid': (f.forgetpass.invalid && f.forgetpass.touched) && submitted }\" />\r\n                                                <mat-error class=\"text-danger mb-1\"\r\n                                                    *ngIf=\"(submitted || f.forgetpass.touched)\">\r\n                                                    <mat-error *ngIf=\"f.forgetpass.errors?.required\">\r\n                                                        Email Address Is Required!\r\n                                                    </mat-error>\r\n                                                    <mat-error *ngIf=\"f.forgetpass.errors?.email\">\r\n                                                        Email Is Required in Format!\r\n                                                    </mat-error>\r\n                                                </mat-error>\r\n\r\n                                                <input class=\"form-control mb-2\" (keypress)=\"numberOnly($event)\"\r\n                                                    formControlName=\"otp\" type=\"email\" placeholder=\"Enter OTP\"\r\n                                                    [ngClass]=\"{\r\n                                                        'is-invalid': (f.otp.invalid && f.otp.touched) && submitted }\" />\r\n                                                <mat-error class=\"text-danger mb-1\"\r\n                                                    *ngIf=\"(submitted || f.otp.touched)\">\r\n                                                    <mat-error *ngIf=\"f.otp.errors?.required\">\r\n                                                        OTP Is Required!\r\n                                                    </mat-error>\r\n                                                </mat-error>\r\n                                                <!-- <div style=\"margin-bottom: -13px;\" *ngIf=\"submitted && f.forgetpass.errors\" class=\"invalid-feedback\">\r\n                                                        Forget password is required\r\n                                                    </div> -->\r\n                                                <button class=\"btn btn-primary d-block w-100 mt-3\" type=\"submit\" style=\"background: #110152;\"\r\n                                                    name=\"submit\" (click)=\"postforgotpassword()\">Verify OTP</button>\r\n                                            </form><a class=\"fs--1 text-600\" routerLink=\"/auth/login\">Back to Login\r\n                                                this page<span class=\"d-inline-block ms-1\">&rarr;</span></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-verify-otp-forgot-password',\r\n  templateUrl: './verify-otp-forgot-password.component.html',\r\n  styleUrls: ['./verify-otp-forgot-password.component.scss']\r\n})\r\nexport class VerifyOtpForgotPasswordComponent implements OnInit {\r\n\r\n  VerifyOTPForm:any;\r\n  public submitted: boolean;\r\n  constructor(private formBuilder: FormBuilder, private toastService:ToastNotificationService,private loginService: LoginService,private router: Router,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.VerifyOTPForm = this.formBuilder.group({\r\n\t\t\tforgetpass: [\"\",[Validators.required,Validators.email]],\r\n      otp:[\"\",[Validators.required]],\r\n    });\r\n  }\r\n  get f(){\r\n    return this.VerifyOTPForm.controls;\r\n  }\r\n  postforgotpassword(){\r\n    this.submitted=true;\r\n    if(this.VerifyOTPForm.invalid){\r\n      return false;\r\n    }\r\n    else{\r\n      let body={\r\n        \"email\" : this.VerifyOTPForm.controls.forgetpass.value,\r\n        \"otp\" : this.VerifyOTPForm.controls.otp.value\r\n\r\n      }\r\n      this.loginService.verifyforgetOtp(body).then((res)=>{\r\n        this.toastService.openSnackBar(\"OTP Verified Successfully\");\r\n        this.router.navigate([\"/auth/change-forgot-password\"]);\r\n      }, \r\n      (err) => {\r\n    \r\n        if(err.error.expose){\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else{\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n        \r\n      })\r\n  \r\n    }\r\n\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { HttpService } from './http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(public httpClient:HttpService) { }\r\n\r\n  postSendOtp(data: {}): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.sendCustomerOtp ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  // postVerifyOtp(data: {}): any {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     this.httpClient.call(data, UrlConstants.verifyCustomerOtp ,  'POST').subscribe(\r\n  //       (res) => resolve(res),\r\n  //       (err) => reject(err)\r\n  //     );\r\n  //   });\r\n  // }\r\n  forgotpassword(data:{}){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.forgotPassword ,'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n\r\n  }\r\n  verifyforgetOtp(data:{}){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.verifyforgetOTP ,'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  changeForgetPassword(data:{}){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.changeOtpEmailPassword ,'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { HttpService } from './http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OtpVerifyService {\r\n\r\n    constructor(public httpClient:HttpService) { }\r\n    verifyCLientOtp(data: {}): any {\r\n      return new Promise((resolve, reject) => {\r\n        this.httpClient.call(data, UrlConstants.postClientOtp ,  'POST').subscribe(\r\n          (res) => resolve(res),\r\n          (err) => reject(err)\r\n        );\r\n      });\r\n    }\r\n    // verifyCustomertOtp(data: {}): any {\r\n    //   return new Promise((resolve, reject) => {\r\n    //     this.httpClient.call(data, UrlConstants.verifyCustomerOtp ,  'POST').subscribe(\r\n    //       (res) => resolve(res),\r\n    //       (err) => reject(err)\r\n    //     );\r\n    //   });\r\n    // }\r\n    \r\n  }","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { UrlConstants } from '../../_helpers/url-constants' \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleSignupService {\r\n\r\n  constructor(public httpClient:HttpService) { }\r\n\r\n  sendRoleUsersOtp(data: {}): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.sendRoleUserOtp ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  verifyRoleUsers(data: {}): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.roleUserVerify,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  getUserBasedRoleByEmailId(data: {},emailId): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getUserBasedRole + emailId, 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UrlConstants } from 'src/app/_helpers/url-constants';\r\nimport { HttpService } from './http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupService {\r\n\r\n  constructor(public httpClient:HttpService) { }\r\n  registerClientUsers(data: {}): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.postClientUser ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n  registerCustomerUsers(data: {}): any {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.postCustomerUser ,  'POST').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  getAllCountryClient(data:{}){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.getAllCountryClient , 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  SearchCountryByNameId(data:{},name:string){\r\n    return new Promise((resolve, reject) => {\r\n      this.httpClient.call(data, UrlConstants.searchCountryByNameId + \"?search=\" + name , 'GET').subscribe(\r\n        (res) => resolve(res),\r\n        (err) => reject(err)\r\n      );\r\n    });\r\n  }\r\n}\r\n"]}