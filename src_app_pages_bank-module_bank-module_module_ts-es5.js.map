{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_5__","AddBankComponent","formBuilder","router","toastService","bankService","http","titleCasePipe","cashInHandService","saleInvoiceService","dialog","dialogRef","JSON","parse","localStorage","getItem","bankForm","group","IFSC","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","AccountHolderName","BankName","AccountNumber","ConfirmAccountNumber","Branch","validator","submitted","isEdit","invalid","openErrorSnackBar","body","controls","value","toUpperCase","valid","postBankDetails","currentUser","id","then","res","openSnackBar","navigate","notifyPartyAdded","close","err","transform","error","error_message","reset","event","charCode","which","keyCode","ifscCode","getBankDetailsByIFSC","patchValue","data","bankName","branchCode","selectors","decls","vars","consts","template","ctx","AddCashComponent","todaysDate","Date","getCurrentBal","CashInHandForm","currentBal","date","saleInvoiceNo","enterAmount","NewBalance","formRemark","paymentType","e","getsaleInvoiceByIncoice","partyId","pageData","saleInvoiceId","console","log","moment__WEBPACK_IMPORTED_MODULE_0__","format","cashInHandpost","expose","getCurrentBalance","currentBalance","_angular_core__WEBPACK_IMPORTED_MODULE_6__","BanKDetailsComponent","modal","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","getbankdetails","partyAdded$","subscribe","name","bankdetails","filter","x","toLowerCase","indexOf","getBankDetails","bankApiResponse","forEach","ele","isEnable","getBankDetailsById","singleBankRecord","singleBankName","singleBankAcc","accountNumber","singleIfscCode","deleteBankAccNo","accoutNumber","bankDetails","element","dismissAll","open","_add_bank_add_bank_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","afterClosed","result","_add_cash_add_cash_component__WEBPACK_IMPORTED_MODULE_1__","routes","path","component","_ban_kdetails_ban_kdetails_component__WEBPACK_IMPORTED_MODULE_0__","BankModuleRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","BankModuleModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_bank_module_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","src_app_material_module__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_9__","declarations","_ban_kdetails_ban_kdetails_component__WEBPACK_IMPORTED_MODULE_1__","_add_bank_add_bank_component__WEBPACK_IMPORTED_MODULE_3__","_add_cash_add_cash_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/pages/bank-module/add-bank/add-bank.component.html","webpack:///src/app/pages/bank-module/add-bank/add-bank.component.ts","webpack:///src/app/pages/bank-module/add-cash/add-cash.component.html","webpack:///src/app/pages/bank-module/add-cash/add-cash.component.ts","webpack:///src/app/pages/bank-module/ban-kdetails/ban-kdetails.component.html","webpack:///src/app/pages/bank-module/ban-kdetails/ban-kdetails.component.ts","webpack:///src/app/pages/bank-module/bank-module-routing.module.ts","webpack:///src/app/pages/bank-module/bank-module.module.ts"],"sourcesContent":["<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Bank</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"BankDatasave()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"bankForm\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>Account Holder Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-uppercase\" placeholder=\"Account Holder Name\"autocomplete=\"off\"\r\n                            formControlName=\"AccountHolderName\" />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>IFSC</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-uppercase\" placeholder=\"IFSC\" formControlName=\"IFSC\"\r\n                            (change)=\"getIFSCCode($event.target.value)\" [ngClass]=\"{\r\n                  'is-invalid':\r\n                    f.IFSC.invalid && f.IFSC.touched && submitted\r\n                }\" autocomplete=\"new-password\" value=\"\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.IFSC.touched\">\r\n                        <mat-error *ngIf=\"f.IFSC.errors?.required\">\r\n                            IFSC Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.IFSC.errors?.pattern\">\r\n                            IFSC required MAHB0001115 format!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <label>Bank Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input type=\"text\" placeholder=\"Bank Name\" formControlName=\"BankName\"\r\n                            aria-label=\"Select Party Name\" matInput [matAutocomplete]=\"auto\" autocomplete=\"new-password\"\r\n                            [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.BankName.invalid && f.BankName.touched && submitted\r\n              }\" readonly />\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.bankName\">\r\n                                {{ option.bankName }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.BankName.touched\">\r\n                        <mat-error *ngIf=\"f.BankName.errors?.required\">\r\n                            BankName Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <label> Branch Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-capitalize\" type=\"text\" placeholder=\"Branch\"\r\n                            formControlName=\"Branch\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.Branch.invalid && f.Branch.touched && submitted\r\n              }\" value=\"\" readonly />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.Branch.touched\">\r\n                        <mat-error *ngIf=\"f.Branch.errors?.required\">\r\n                            Branch Name Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>Account Number</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input (keypress)=\"numberOnly($event)\" matInput [type]=\"hide ? 'password' : 'text'\"\r\n                            placeholder=\"Account Number\" formControlName=\"AccountNumber\" minlength=\"9\"\r\n                            autocomplete=\"new-password\" maxlength=\"19\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.AccountNumber.invalid &&\r\n                  f.AccountNumber.touched &&\r\n                  submitted\r\n              }\" value=\"\"  autocomplete=\"off\"/>\r\n                        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                        </mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.AccountNumber.touched\">\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.required\">\r\n                            Account Number Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.pattern\">\r\n                            Account Number Required Numeric\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.minLength\">\r\n                            Account Number Required Min Length 9 !\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.AccountNumber.errors?.maxLength\">\r\n                            Account Number Required Max Length 19!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label> Re-Enter Account Number</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput type=\"text\" placeholder=\"Re Enter Account Number\"\r\n                            formControlName=\"ConfirmAccountNumber\" minlength=\"9\" maxlength=\"19\"\r\n                            autocomplete=\"new-password\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.ConfirmAccountNumber.invalid &&\r\n                  f.ConfirmAccountNumber.touched &&\r\n                  submitted\r\n              }\" value=\"\" />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.ConfirmAccountNumber.touched\">\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.required\">\r\n                            Confirm Account Number Is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.pattern\">\r\n                            Confirm Account Number Required Numeric\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.minLength\">\r\n                            Confirm Account Number Required Min Length 9 !\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"f.ConfirmAccountNumber.errors?.maxLength\">\r\n                            Confirm Account Number Required Max Length 19!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label>Bank Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input type=\"text\" placeholder=\"Bank Name\" formControlName=\"BankName\"\r\n                            aria-label=\"Select Party Name\" matInput [matAutocomplete]=\"auto\" autocomplete=\"new-password\"\r\n                            [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.BankName.invalid && f.BankName.touched && submitted\r\n              }\" readonly />\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.bankName\">\r\n                                {{ option.bankName }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.BankName.touched\">\r\n                        <mat-error *ngIf=\"f.BankName.errors?.required\">\r\n                            BankName Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                    <label> Branch Name</label>\r\n                    <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput class=\"text-capitalize\" type=\"text\" placeholder=\"Branch\"\r\n                            formControlName=\"Branch\" [ngClass]=\"{\r\n                'is-invalid':\r\n                  f.Branch.invalid && f.Branch.touched && submitted\r\n              }\" value=\"\" readonly />\r\n                    </mat-form-field>\r\n                    <mat-error class=\"text-danger\" *ngIf=\"submitted || f.Branch.touched\">\r\n                        <mat-error *ngIf=\"f.Branch.errors?.required\">\r\n                            Branch Name Is Required!\r\n                        </mat-error>\r\n                    </mat-error>\r\n                </div> -->\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RouteReuseStrategy, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmedValidators } from 'src/app/_helpers/confirmed.validators';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { CashInHandServiceService } from 'src/app/core/services/cash-in-hand-service.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-bank',\r\n  templateUrl: './add-bank.component.html',\r\n  styleUrls: ['./add-bank.component.scss']\r\n})\r\nexport class AddBankComponent implements OnInit {\r\n  submitted: boolean;\r\n  isEdit: boolean;\r\n  public bankForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public hide: boolean = true;\r\n  public filteredOptions: Observable<string[]>;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n\r\n    private titleCasePipe: TitleCasePipe,\r\n    private cashInHandService: CashInHandServiceService,\r\n    private saleInvoiceService: SaleInvoiceService, private dialog: MatDialog , public dialogRef: MatDialogRef<AddBankComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bankForm = this.formBuilder.group({\r\n      IFSC: [\"\", [Validators.required, Validators.pattern('^[A-Za-z]{4}0[0-9]{6}$')]],\r\n      AccountHolderName: [\"\", [Validators.required]],\r\n      BankName: [\"\", [Validators.required]],\r\n      AccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      ConfirmAccountNumber: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(9), Validators.maxLength(19)]],\r\n      Branch: [\"\", [Validators.required]],\r\n    },\r\n      {\r\n        validator: ConfirmedValidators('AccountNumber', 'ConfirmAccountNumber')\r\n      });\r\n  }\r\n  BankDatasave() {\r\n    this.submitted = true;\r\n    this.isEdit = false;\r\n    if (this.bankForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else {\r\n      let body = {\r\n        \"bankDetails\": {\r\n          \"bankName\": this.bankForm.controls.BankName.value,\r\n          \"branchCode\": this.bankForm.controls.Branch.value,\r\n          \"accountNumber\": this.bankForm.controls.AccountNumber.value,\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value.toUpperCase(),\r\n          \"accountHolderName\":this.bankForm.controls.AccountHolderName.value\r\n\r\n        }\r\n      }\r\n      if (this.bankForm.valid) {\r\n        this.bankService.postBankDetails(body, this.currentUser.id).then((res) => {\r\n          if (res) {\r\n            this.toastService.openSnackBar(\"Bank Record Added Successfully!!!\");\r\n            this.router.navigate([\"/pages/Bank-page\"]);\r\n            this.bankService.notifyPartyAdded();   \r\n            this.dialogRef.close();\r\n          }\r\n        }, (err) => {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n        });\r\n      }\r\n    }\r\n  }\r\n  cancel() {\r\n     this.bankForm.reset();\r\n     this.submitted = false;\r\n      this.dialogRef.close();\r\n    }\r\n    get f() {\r\n      return this.bankForm.controls;\r\n    }\r\n    numberOnly(event): boolean {\r\n      const charCode = (event.which) ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    \r\n  getIFSCCode(ifscCode) {\r\n    if (ifscCode) {\r\n      let body =\r\n      {\r\n        \"bankDetails\": {\r\n          \"ifscCode\": this.bankForm.controls.IFSC.value\r\n        }\r\n      }\r\n      this.bankService.getBankDetailsByIFSC(body, this.currentUser.id).then((res) => {\r\n        this.bankForm.patchValue({\r\n            'BankName': res.data.bankName,\r\n            'Branch': this.titleCasePipe.transform(res.data.branchCode)\r\n            })\r\n        this.toastService.openSnackBar(\"IFSC Code Validated Successfully!!!\");\r\n      }, (err) => {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message))\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header pt-0\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-0\">Add Cash in hand</h1>\r\n\r\n    <div class=\"addProductButtons\">\r\n\r\n        <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\"\r\n            (click)=\"cancel()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"cashSave()\">Save</button>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"container-fluid px-2\">\r\n        <form [formGroup]=\"CashInHandForm\">\r\n            <div class=\"mb-5\">\r\n              <button class=\"btn btn-add-cash\" style=\"border-radius: 10px\" (click)=\"addMoney()\">\r\n                <i class=\"fas fa-plus me-2\"> </i>Add Money\r\n              </button>\r\n              <button class=\"btn btn-reduce-cash\" style=\"border-radius: 10px; margin-left: 10px\" (click)=\"reduceMoney()\">\r\n                <i class=\"fas fa-minus  me-2\"> </i>Reduce Cash\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Current Balance -->\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label>Current Balance</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input  matInput placeholder=\"Current Balance\" (change)=\"calculateValues()\" formControlName=\"currentBal\" />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label>Sale Invoice No</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input type=\"text\" matInput placeholder=\"Sale Invoice No\" (change)=\"GetpartyId($event.target.value)\"\r\n                    formControlName=\"saleInvoiceNo\" />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label for=\"Date\"> Date</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input matInput required ngModel bsDatepicker formControlName=\"date\" placeholder=\"Date\"\r\n                    style=\"text-transform: uppercase !important\" [(ngModel)]=\"todaysDate\" id=\"datePicker\" bsDatepicker\r\n                    [bsConfig]=\"{\r\n                      containerClass: 'theme-dark-blue',\r\n                      dateInputFormat: 'DD MMM YYYY',\r\n                      showWeekNumbers: false\r\n                    }\" />\r\n                  <span>\r\n                    <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                  </span>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-6 mb-3\">\r\n                <label>New Amount</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input  type=\"number\" matInput placeholder=\"Enter Amount\" (change)=\"calculateValues()\" formControlName=\"enterAmount\" min=\"0\"\r\n                    oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                      'is-invalid':\r\n                        f1.enterAmount.invalid &&\r\n                        f1.enterAmount.touched &&\r\n                        submitted\r\n                    }\" />\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"\r\n                    (submitted || f1.enterAmount.touched) &&\r\n                    f1.enterAmount.errors?.required\r\n                  \">\r\n                  Enter Amount Is Required!\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                <label>New Balance</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input type=\"number\" matInput placeholder=\"New balance\" formControlName=\"NewBalance\" min=\"0\"\r\n                    oninput=\"this.value = Math.abs(this.value)\"\r\n  \r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        f1.NewBalance.invalid &&\r\n                        f1.NewBalance.touched &&\r\n                        submitted\r\n                    }\" readonly />\r\n                </mat-form-field>\r\n                <mat-error class=\"text-danger\" *ngIf=\"\r\n                    (submitted || f1.NewBalance.touched) &&\r\n                    f1.NewBalance.errors?.required\r\n                  \">\r\n                  New Balance Is Required!\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"col-sm-12 col-md-12 col-lg-12 mb-3\">\r\n                <label>Item Description</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n\r\n                  <textarea matInput required rows=\"3\" placeholder=\"Enter Item Description\"\r\n                  formControlName=\"formRemark\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </form>\r\n     \r\n\r\n    </div>\r\n\r\n</div>\r\n","import { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { CashInHandServiceService } from 'src/app/core/services/cash-in-hand-service.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-add-cash',\r\n  templateUrl: './add-cash.component.html',\r\n  styleUrls: ['./add-cash.component.scss']\r\n})\r\nexport class AddCashComponent implements OnInit {\r\n  CashInHandForm: any;\r\n  submitted: boolean;\r\n  paymentType: string;\r\n  public todaysDate;\r\n  saleInvoiceId: any;\r\n  partyId: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n\r\n    private titleCasePipe: TitleCasePipe,\r\n    private cashInHandService: CashInHandServiceService,\r\n    private saleInvoiceService: SaleInvoiceService, private dialog: MatDialog, public dialogRef: MatDialogRef<AddCashComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.todaysDate = new Date();\r\n    this.getCurrentBal()\r\n    this.CashInHandForm = this.formBuilder.group({\r\n      currentBal: [],\r\n      date: [],\r\n      saleInvoiceNo: [null],\r\n      enterAmount: [, [Validators.required]],\r\n      NewBalance: [, [Validators.required]],\r\n      formRemark: [\"\", [Validators.required]],\r\n    })\r\n  }\r\n  get f1() {\r\n    return this.CashInHandForm.controls;\r\n  }\r\n  calculateValues() {\r\n    if (this.paymentType == \"PAYMENT\") {\r\n      this.CashInHandForm.patchValue({\r\n        NewBalance: +this.CashInHandForm.controls.currentBal.value + +this.CashInHandForm.controls.enterAmount.value\r\n      });\r\n    } else {\r\n      this.CashInHandForm.patchValue({\r\n        NewBalance: +this.CashInHandForm.controls.currentBal.value - +this.CashInHandForm.controls.enterAmount.value\r\n      });\r\n    }\r\n  }\r\n\r\n  GetpartyId(e) {\r\n    if (e) {\r\n      this.saleInvoiceService.getsaleInvoiceByIncoice({}, this.currentUser.id, e).then((res) => {\r\n        this.partyId = res.data.pageData[0].partyId;\r\n        this.saleInvoiceId = res.data.pageData[0].id;\r\n      });\r\n    }\r\n  }\r\n  addMoney() {\r\n    this.paymentType = \"PAYMENT\";\r\n    console.log(\"payment\", this.paymentType);\r\n  }\r\n\r\n  reduceMoney() {\r\n    this.paymentType = \"RECEIPT\";\r\n    console.log(\"receipt\", this.paymentType);\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n  cashSave() {\r\n    this.submitted = true;\r\n    if (this.CashInHandForm.invalid) {\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    else{\r\n      let body = {\r\n        \"cashadjustments\": {\r\n          \"paymentType\": this.paymentType,\r\n          \"saleInvoiceId\": this.saleInvoiceId ? this.saleInvoiceId : null,\r\n          \"date\": moment(this.CashInHandForm.controls.date.value, \"DD MMM YYYY\").format(\"YYYY-MM-DD\"),\r\n          \"enterAmount\": this.CashInHandForm.controls.enterAmount.value,\r\n          \"remark\": this.CashInHandForm.controls.formRemark.value,\r\n          \"userId\": this.currentUser.id\r\n  \r\n        },\r\n      }\r\n \r\n      this.cashInHandService.cashInHandpost(body).then((res) => {\r\n      \r\n        this.toastService.openSnackBar(\"Cash In Hand Updated\");\r\n        this.CashInHandForm.reset();\r\n        this.submitted = false;\r\n        this.dialogRef.close();\r\n        this.getCurrentBal();\r\n      }, (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getCurrentBal() {\r\n    this.cashInHandService.getCurrentBalance({}, this.currentUser.id).then((res) => {\r\n      this.CashInHandForm.patchValue({\r\n        currentBal: res.data[0].currentBalance,\r\n      });\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      })\r\n  }\r\n}\r\n","<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px;;\">\r\n      <div class=\"modal-content position-relative\">\r\n        <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n          <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"></a>\r\n        </div>\r\n        <div class=\"modal-body p-0\">\r\n          <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n            <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800\" id=\"modalExampleDemoLabel\">\r\n              Delete Bank Account?\r\n            </h2>\r\n          </div>\r\n          <h4 class=\"text-center\">Are You Sure To Delete this Bank Account?</h4>\r\n        </div>\r\n        <div class=\"modal-footer  justify-content-center\">\r\n          <a class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\">Close</a>\r\n          <a class=\"btn btn-outline-primary\" data-bs-dismiss=\"modal\" (click)=\"removeBanK()\">Delete\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container-fluid p-2 \" style=\"height: 100vh !important\">\r\n    <div class=\"row card-header bg-white\">\r\n      <div class=\"col-lg-12 navOption-btns \">\r\n        <button style=\"float: right !important\" (click)=\"openDialogCash()\" class=\"btn  m-1\"\r\n          type=\"button\">\r\n          <i class=\"fas fa-plus me-2\"> </i>Add Cash in hand\r\n        </button>\r\n        <button style=\"float: right !important\" (click)=\"openDialogBank()\"\r\n          class=\"btn m-1\" type=\"button\">\r\n          <i class=\"fas fa-plus  me-2\"> </i>Add Bank\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-1\">\r\n      <div class=\"col-lg-3 bg-light mt-2\">\r\n        <p class=\"m-3\" style=\"font-weight: bolder\">Bank Details</p>\r\n        <div>\r\n          <table class=\"table table-responsive fs--1 mb-0\">\r\n            <thead class=\"text-600\">\r\n              <tr>\r\n                <th class=\"text-nowrap\">Account</th>\r\n                <th class=\"text-nowrap\">Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"bankApiResponse\">\r\n              <tr *ngFor=\"let bankData of bankApiResponse; let i = index\">\r\n                <td style=\"vertical-align: middle;\" (click)=\"getbankdetailsById(bankData.id)\">\r\n                  <span style = \"float: left;\"><img src = \"../../../../assets/images/bank_logo.png\" /></span>\r\n                  <span style = \"float: left;padding-left: 10px;padding-top: 5px;color:#000\">{{ bankData.bankName }}</span>\r\n                </td>\r\n                <td style=\"vertical-align: middle;color:#000;\">20000</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n  \r\n        <div class=\"mb-3 mx-3\" style=\"margin-top: 100px\">\r\n          <p style=\"font-weight: bolder\">Cash In Hand</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-9\">\r\n        <div class=\"row bg-light m-2\">\r\n          <p class=\"mb-1 mt-2\"><span class=\"me-3\">Bank Name :</span>{{ singleBankName? singleBankName:\"\" }}</p>\r\n          <p class=\"mb-2 mt-1\">Account Number: {{singleBankAcc ? singleBankAcc:\"\"}}</p>\r\n          <p class=\"mb-1 mt-1\">IFSC Code: {{singleIfscCode ? singleIfscCode:\"\"}}</p>\r\n          <p class=\"mb-1 mt-1 d-flex flex-row\" style=\"justify-content: end\">\r\n            Balance: 200000.00\r\n          </p>\r\n        </div>\r\n        <div class=\"row bg-light m-2\">\r\n          <div class=\"m-3\">\r\n            <p style=\"font-weight: bolder\">Transactions</p>\r\n          </div>\r\n          <div>\r\n            <table class=\"table table-responsive fs--1 mb-0\">\r\n              <thead class=\"text-600\">\r\n                <tr>\r\n                  <th class=\"text-nowrap\">Date of Payment</th>\r\n                  <th class=\"text-nowrap\">Name</th>\r\n                  <th class=\"text-nowrap\">Type</th>\r\n                  <th class=\"text-nowrap\">Amount</th>\r\n                  <th class=\"text-nowrap\">Remarks</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">9-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishal</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">2000.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle\">10-June-2023</td>\r\n                  <td style=\"vertical-align: middle\">Vishwas</td>\r\n                  <td style=\"vertical-align: middle\">Payment-In</td>\r\n                  <td style=\"vertical-align: middle\">20007.00</td>\r\n                  <td style=\"vertical-align: middle\">Excellent</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  \r\n  ","import { formatDate } from '@angular/common';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { BankServiceService } from 'src/app/core/services/bank-service.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ConfirmedValidators } from 'src/app/_helpers/confirmed.validators';\r\nimport { Constants } from 'src/app/_helpers/constant';\r\nimport { CashInHandServiceService } from 'src/app/core/services/cash-in-hand-service.service';\r\nimport { SaleInvoiceService } from 'src/app/core/services/sale-invoice.service';\r\nimport * as moment from 'moment';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddBankComponent } from '../add-bank/add-bank.component';\r\nimport { AddCashComponent } from '../add-cash/add-cash.component';\r\n\r\n@Component({\r\n  selector: 'app-ban-kdetails',\r\n  templateUrl: './ban-kdetails.component.html',\r\n  styleUrls: ['./ban-kdetails.component.scss']\r\n})\r\nexport class BanKDetailsComponent implements OnInit {\r\n  public bankForm: FormGroup;\r\n  public CashInHandForm: FormGroup;\r\n  public filteredOptions: Observable<string[]>;\r\n  public myControl = new FormControl();\r\n  color: string = 'black';\r\n  submitted: boolean;\r\n  bankApiResponse: any;\r\n  isEdit: boolean = false;\r\n  isDisabled = false;\r\n  isShowButton: Boolean = false;\r\n  isShown: Boolean = false;\r\n  isShownm: Boolean = false;\r\n  bankdetails: any;\r\n  bname: any = \"\";\r\n  data: any\r\n  mobileOtp: any;\r\n  formData: any = [];\r\n  branchCode: any;\r\n  branchCode2: any;\r\n  bankDetailByAcc: any;\r\n  public hide: boolean = true;\r\n  accoutNumber: any;\r\n  public IFSC: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n\r\n  public todaysDate;\r\n  public today;\r\n  partyId: any\r\n  saleInvoiceId: any;\r\n  public paymentType: string = \"\";\r\n  public remark2: any;\r\n  dialogRef: any;\r\n  public singleBankRecord: any;\r\n  singleBankName: any;\r\n  singleBankAcc: any;\r\n  singleIfscCode: any;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private toastService: ToastNotificationService,\r\n    private bankService: BankServiceService,\r\n    private http: HttpClient,\r\n    private modal: NgbModal,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private cashInHandService: CashInHandServiceService,\r\n    private saleInvoiceService: SaleInvoiceService, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n \r\n    this.getbankdetails();\r\n    this.bankService.partyAdded$.subscribe(() => {\r\n      this.getbankdetails();\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Filter customer name search\r\n   * @param name\r\n   * @returns\r\n   */\r\n  private filterBankNames(name: string): string[] {\r\n    return this.bankdetails.filter(x =>\r\n      x.bankName.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n  getbankdetails() {\r\n    this.bankService.getBankDetails({}, this.currentUser.id).then((res) => {\r\n      this.bankApiResponse = res.data;\r\n      this.bankApiResponse.forEach((ele) => {\r\n        ele.isEnable = false;\r\n      })\r\n    },\r\n      (err) => {\r\n        if (err.error.expose) {\r\n       //   this.bankApiResponse = [];\r\n          this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n        }\r\n        else {\r\n          this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getbankdetailsById(id) {\r\n    // <p class=\"mb-1 mt-2\"><span class=\"me-3\">Bank Name :</span>ICICI Bank</p>\r\n    // <p class=\"mb-2 mt-1\">Account Number: 30002000668888</p>\r\n    // <p class=\"mb-1 mt-1\">IFSC Code: ICI2004300</p>\r\n    // <p class=\"mb-1 mt-1 d-flex flex-row\" style=\"justify-content: end\">\r\n    //   Balance: 200000.00\r\n    // </p>\r\n    this.bankService.getBankDetailsById({}, this.currentUser.id, id).then((res) => {\r\n\r\n      this.singleBankRecord = res.data;\r\n      this.singleBankName = this.singleBankRecord.bankName\r\n      this.singleBankAcc = this.singleBankRecord.accountNumber\r\n      this.singleIfscCode = this.singleBankRecord.ifscCode\r\n\r\n    })\r\n\r\n  }\r\n\r\n  removeBanK() {\r\n    this.bankService.deleteBankAccNo({}, this.accoutNumber).then((res) => {\r\n      this.toastService.openSnackBar(\"Bank Record Deleted Successfully!!!\");\r\n      this.getbankdetails();\r\n    })\r\n  }\r\n\r\n  myClickHandler(bankDetails) {\r\n    this.bankApiResponse.forEach(element => {\r\n      if (element.id == bankDetails.id) {\r\n        element.isEnable = true;\r\n      }\r\n      else {\r\n        element.isEnable = false;\r\n      }\r\n    });\r\n  }\r\n\r\n \r\n\r\n\r\n  modalDismiss() {\r\n    this.bankForm.reset();\r\n    this.modal.dismissAll();\r\n    this.isEdit = false;\r\n  }\r\n\r\n\r\n\r\n  openDialogBank() {\r\n    const dialogRef: MatDialogRef<AddBankComponent> = this.dialog.open(AddBankComponent, {\r\n      width: 'auto',\r\n      height: '700px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-expense-class',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  openDialogCash() {\r\n    const dialogRef: MatDialogRef<AddCashComponent> = this.dialog.open(AddCashComponent, {\r\n      width: 'auto',\r\n      height: '700px',\r\n      data: {},\r\n      panelClass: 'custom-dialog-expense-class',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  \r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BanKDetailsComponent } from './ban-kdetails/ban-kdetails.component';\r\n\r\nconst routes: Routes = [\r\n  {   path: '',\r\n  component : BanKDetailsComponent,}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BankModuleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BankModuleRoutingModule } from './bank-module-routing.module';\r\nimport { BanKDetailsComponent } from './ban-kdetails/ban-kdetails.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddBankComponent } from './add-bank/add-bank.component';\r\nimport { AddCashComponent } from './add-cash/add-cash.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BanKDetailsComponent,\r\n    AddBankComponent,\r\n    AddCashComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BankModuleRoutingModule,\r\n    CommonModule,\r\n   \r\n    RouterModule,\r\n    MaterialExampleModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class BankModuleModule { }\r\n"]}