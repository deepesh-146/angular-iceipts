{"version":3,"file":"src_app_pages_new-shop-schedule_new-shop-schedule_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/new-shop-schedule/appointment-page/add-appointment/add-appointment.component.ts","./src/app/pages/new-shop-schedule/appointment-page/add-appointment/add-appointment.component.html","./src/app/pages/new-shop-schedule/appointment-page/appointment-page.component.ts","./src/app/pages/new-shop-schedule/appointment-page/appointment-page.component.html","./src/app/pages/new-shop-schedule/appointment-page/updateappointment/updateappointment.component.ts","./src/app/pages/new-shop-schedule/appointment-page/updateappointment/updateappointment.component.html","./src/app/pages/new-shop-schedule/main-shop-shcedule-page/main-shop-shcedule-page.component.ts","./src/app/pages/new-shop-schedule/main-shop-shcedule-page/main-shop-shcedule-page.component.html","./src/app/pages/new-shop-schedule/new-shop-schedule-routing.module.ts","./src/app/pages/new-shop-schedule/new-shop-schedule.module.ts","./src/app/pages/new-shop-schedule/shop-details-page/shop-details-page.component.ts","./src/app/pages/new-shop-schedule/shop-details-page/shop-details-page.component.html","./src/app/pages/new-shop-schedule/shop-details-page/update-shop/update-shop.component.ts","./src/app/pages/new-shop-schedule/shop-details-page/update-shop/update-shop.component.html","./src/app/pages/new-shop-schedule/time-schedule-page/add-time-schedule/add-time-schedule.component.ts","./src/app/pages/new-shop-schedule/time-schedule-page/add-time-schedule/add-time-schedule.component.html","./src/app/pages/new-shop-schedule/time-schedule-page/time-schedule-page.component.ts","./src/app/pages/new-shop-schedule/time-schedule-page/time-schedule-page.component.html"],"sourcesContent":["import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ScheduleAppointmentService } from 'src/app/core/services/schedule-appointment.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ScheduleShopService } from 'src/app/core/services/schedule-shop.service';\r\n\r\n@Component({\r\n  selector: 'app-add-appointment',\r\n  templateUrl: './add-appointment.component.html',\r\n  styleUrls: ['./add-appointment.component.scss']\r\n})\r\nexport class AddAppointmentComponent implements OnInit {\r\n  public submitted: boolean;\r\n  isActive: boolean;\r\n  public ShopListResponse:any;\r\n\r\n  public addAppointmentform: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  shopID: any;\r\n  // locations = [\r\n  //   {\r\n  //     \"id\": 1,\r\n  //     \"locationName\": \"At Home\"\r\n\r\n  //   },\r\n  //   {\r\n  //     \"id\": 2,\r\n  //     \"locationName\": \"Virtual/Technician\"\r\n\r\n  //   },\r\n  //   {\r\n  //     \"id\": 2,\r\n  //     \"locationName\": \"Phone Call\"\r\n\r\n  //   },\r\n  // ]\r\n  locations = [];\r\n  \r\n  userRoles = [\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"Admin\"\r\n\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"User\"\r\n\r\n    }\r\n  ]\r\n  constructor(private formBuilder: FormBuilder,\r\n    private scheduleAppointmentService: ScheduleAppointmentService,\r\n    private ScheduleShopService:ScheduleShopService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private route: ActivatedRoute, private router: Router,\r\n    public dialogRef: MatDialogRef<AddAppointmentComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getShopList();\r\n    this.addAppointmentform = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      duration: ['', Validators.required],\r\n      LocationType: [\"\", [Validators.required]],\r\n      UserRole: [\"\", Validators.required],\r\n      Description: [\"\", Validators.required],\r\n      Cancellation: [false, Validators.required],\r\n      isDisable: [false, Validators.required],\r\n      withinDays: [\"\",[Validators.required]]\r\n\r\n    });\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n  \r\n  }\r\n  get f() {\r\n    return this.addAppointmentform.controls;\r\n  }\r\n\r\n  onclear() {\r\n\r\n  }\r\n\r\n  getShopList(){\r\n    this.ScheduleShopService.getShopList({},this.currentUser.id).then((res) => {\r\n\r\n        this.locations= res.data.rows.map((data : any) => {\r\n          return {\r\n            tradeName: data.client.tradeName,\r\n            shopId: data.id\r\n          };\r\n    })\r\n    })\r\n  }\r\n  \r\n\r\n    \r\n  \r\n     \r\n  \r\n  getAppointmentType() {\r\n    this.submitted = true;\r\n    if (this.addAppointmentform.invalid) {\r\n      console.log(this.addAppointmentform.controls);\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    let body = {\r\n      \"name\": this.addAppointmentform.controls.name.value,\r\n      \"duration\": this.addAppointmentform.controls.duration.value,\r\n      \"locationType\": this.addAppointmentform.controls.LocationType.value,\r\n      \"userRole\": this.addAppointmentform.controls.UserRole.value,\r\n      \"description\": this.addAppointmentform.controls.Description.value,\r\n      \"cancellation\": this.addAppointmentform.controls.Cancellation.value ? this.addAppointmentform.controls.Cancellation.value : false,\r\n      \"isDisable\": this.addAppointmentform.controls.isDisable.value ? this.addAppointmentform.controls.isDisable.value : false,\r\n      \"withinDays\": this.addAppointmentform.controls.withinDays.value,\r\n      \"userId\": this.currentUser.id,\r\n      \"shopId\": this.addAppointmentform.controls.LocationType.value, //we are sending shopId which is getting form location list\r\n    }\r\n\r\n    this.scheduleAppointmentService.postAppointDetails(body).then((res) => {\r\n      if (res) {\r\n        this.toastService.openSnackBar(\"Shop Appointment Added Successfully.\");\r\n        // this.router.navigate([\"/pages/shop-setting/shopID/shop-appointment/shopID\"]);\r\n        // this.appointMentForm.reset();\r\n        this.resetForm();\r\n        this.submitted = false;\r\n\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  resetForm() {\r\n    this.addAppointmentform = this.formBuilder.group({\r\n      Name: [\"\"],\r\n      Duration: [\"\"],\r\n      LocationType: [\"\"],\r\n      UserRole: [\"\"],\r\n      Description: [\"\"],\r\n      Cancellation: [false],\r\n      isDisable: [false],\r\n      withinDays: [\"\"]\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    // Reset the form and submitted flag\r\n    this.addAppointmentform.reset();\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n","<div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-1\">Add Appointment</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <!-- <button style=\"margin-right: 10px !important;\" (click)=\"onclear()\" type=\"button\"\r\n            class=\"btn btn-cancel\">Cancel</button> -->\r\n            <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAppointmentType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"addAppointmentform\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Name</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label class=\"form-label\">Duration</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Duration\" formControlName=\"duration\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Shop Location</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"LocationType\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.LocationType.invalid && f.LocationType.touched && submitted\r\n                      }\">\r\n                            <mat-option *ngFor=\"let location of locations\" [value]=\"location.shopId\">\r\n                                {{location.tradeName}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>User Role</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"UserRole\" [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.UserRole.invalid && f.UserRole.touched && submitted\r\n                  }\">\r\n                            <mat-option *ngFor=\"let userR of userRoles\" [value]=\"userR.userRole\">\r\n                                {{userR.userRole}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Description</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput cols=\"35\" rows=\"4\" placeholder=\"Description\" formControlName=\"Description\"\r\n                            [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.Description.invalid && f.Description.touched && submitted\r\n                  }\">\r\n                </textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-checkbox formControlName=\"Cancellation\">\r\n                    Cancellation\r\n                </mat-checkbox>\r\n\r\n            </div>\r\n            <!-- <div>\r\n                <mat-checkbox formControlName=\"isDisable\">\r\n                    Is Disable\r\n                </mat-checkbox>\r\n                \r\n            </div> -->\r\n            \r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Within Days</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matNativeControl type=\"number\" required matInput formControlName=\"withinDays\"\r\n                            placeholder=\"Enter Days\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.withinDays.invalid && f.withinDays.touched && submitted\r\n                      }\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddAppointmentComponent } from './add-appointment/add-appointment.component';\r\nimport { ScheduleAppointmentService } from 'src/app/core/services/schedule-appointment.service';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-appointment-page',\r\n  templateUrl: './appointment-page.component.html',\r\n  styleUrls: ['./appointment-page.component.scss']\r\n})\r\nexport class AppointmentPageComponent implements OnInit {\r\n  public AppointmentList : any = [];\r\n  fileName= 'Appointment.xlsx';\r\n\r\n  public shopID: any;\r\n  public currentPageNo: number = 0;\r\n  public appointmentPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  public appointListRes: any = [];\r\n  public totalrow: any;\r\n  \r\n  constructor(public dialog: MatDialog,\r\n    private ScheduleAppointmentService: ScheduleAppointmentService,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n    this.getAppointmentDetails();\r\n\r\n  }\r\n  getAppointmentDetails() {\r\n    this.ScheduleAppointmentService.getAppointTypeList({}, this.shopID, this.appointmentPageSize, (this.currentPageNo + 1)).then((res) => {\r\n      this.appointListRes = res.data.pageData;\r\n      this.totalrow = res.data.totalrows\r\n    })\r\n\r\n  }\r\n  startUpload(){\r\n\r\n  }\r\n  handleInputChange(e){\r\n  }\r\n  openDialogAppointment(){\r\n    const dialogRef: MatDialogRef<AddAppointmentComponent> = this.dialog.open(AddAppointmentComponent, {\r\n      width: '500px',\r\n      height: '730px',\r\n      data: { },\r\n      panelClass: 'custom-dialog-AddAppointment-class',\r\n      disableClose:true,\r\n      // position: {\r\n      //   center: '0',\r\n      // },\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });  \r\n}\r\n\r\npublic handlePage(e: any) {\r\n  this.currentPageNo = e.pageIndex;\r\n  this.pagesize = e.pageSize;\r\n  if (this.appointListRes.length > 0) {\r\n    this.appointmentPageSize = e.pageSize;\r\n    this.getAppointmentDetails();\r\n  }\r\n}\r\ngetDeleteAppoint(){\r\n\r\n}\r\nupdateAppointment(){\r\n  \r\n}\r\n \r\n  ExcelDownlod(){\r\n    /* pass here the table id */\r\nlet element = document.getElementById('excel-table');\r\nconst ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\r\n\r\n/* generate workbook and add the worksheet */\r\nconst wb: XLSX.WorkBook = XLSX.utils.book_new();\r\nXLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n/* save to file */  \r\nXLSX.writeFile(wb, this.fileName);\r\n\r\n}\r\n}\r\n","<div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3 mt-2\"\r\n        style=\"display:flex;justify-content: space-around !important;\">\r\n        <button class=\"btn text-nowrap\" (click)=\"openDialogAppointment()\"><i class=\"fas fa-plus\"></i> Add\r\n            Appointment</button>\r\n        <!-- <input type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\" class=\"hidden-input\"\r\n            (change)=\"handleInputChange($event)\" />\r\n        <button class=\"btn ms-3 text-nowrap\" ngbTooltip=\"Import Excel\" (click)=\"startUpload()\">\r\n            <i class=\"fas fa-upload\"></i> Import\r\n        </button> -->\r\n        <!-- <button class=\"btn ms-3 text-nowrap\" ngbTooltip=\"Download\" accept=\".xls,.xlsx\" id=\"download\"\r\n            onclick=\"location.href = 'https://web.iceipts.com/api/apiserver/users/Appointment';\"><i\r\n                class=\"fas fa-download\"></i>\r\n        </button> -->\r\n        <!-- <button class=\"btn\" (click)=\"ExcelDownlod()\">\r\n            <i class=\"fas fa-download\"></i>\r\n    </button> -->\r\n    </div>\r\n</div>\r\n\r\n<hr class=\"mb-1\">\r\n<div class=\"table-container \">\r\n    <div class=\"table-div overflow-hidden\" style=\"overflow-x: scroll;\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"col-1 px-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input type=\"checkbox\" class=\"form-check-input px-2\"/>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <span>#</span>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    <!-- <th class=\"col-1 text-nowrap\">#</th> -->\r\n                    <th class=\"col text-nowrap\">Name</th>\r\n                    <th class=\"col text-nowrap\">Duration</th>\r\n                    <th class=\"col text-nowrap\">Location Type</th>\r\n                    <th class=\"col text-nowrap\">Describtion</th>\r\n                    <th class=\"col text-nowrap\">User Role</th>\r\n                    <th class=\"col text-nowrap\">Cancellation</th>\r\n                    <th class=\"col text-nowrap\">IsDisable</th>\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"list\" *ngIf=\"appointListRes\">\r\n                <tr class=\"text-capitalize\" *ngFor=\"let appointment of appointListRes; let i = index\">\r\n                    <td class=\"col-1\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\" />\r\n                    </td>\r\n                    <td class=\"col\">{{ i + 1 }}</td>\r\n                    <td class=\"col\">{{appointment.name}}</td>\r\n                    <td class=\"col\">{{appointment.duration}}</td>\r\n                    <td class=\"col\">{{appointment.locationType}}</td>\r\n                    <td class=\"col\">{{appointment.description}}</td>\r\n                    <td class=\"col\">{{appointment.userRole}}</td>\r\n                    <td class=\"col\">{{appointment.cancellation }}</td>\r\n                    <td class=\"col\">{{appointment.isDisable}}</td>\r\n                    <td class=\"col-1\">\r\n                        <button class=\"btn btnp ps-1\" type=\"button\" routerLinkActive=\"active\">\r\n                            <span class=\"bi-pencil-square icon-color fs-1\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                        </button>\r\n                        <button class=\"btn btnp me-4\">\r\n                            <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\" (click)=\"updateAppointment()\"></span>\r\n                        </button>\r\n                        <!-- <button class=\"btn ps-1\" type=\"button\" data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#errorDelete-modal\">\r\n                            <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\" style=\"color: red;\"></span>\r\n                        </button> -->\r\n                        <button class=\"btn btnp me-4\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                            <span class=\"bi-trash icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"\r\n                                (click)=\" getDeleteAppoint()\"></span>\r\n                            <!-- Delete -->\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody *ngIf=\"appointListRes == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <h5 class=\"text-nowrap\">No Appointment Details Added. Please Add Appointment Details To Be\r\n                            Displayed Here. <span>\r\n                                <a class=\"nav-link\" (click)=\"openDialogAppointment()\">Add Appointment</a>\r\n                            </span></h5>\r\n\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </table>\r\n        <mat-paginator class=\"float-right mt-2\" *ngIf=\"appointListRes.length > 0\" [pageSize]=\"appointmentPageSize\"\r\n            [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n            (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Appointment? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to delete this Appointment?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-updateappointment',\r\n  templateUrl: './updateappointment.component.html',\r\n  styleUrls: ['./updateappointment.component.scss']\r\n})\r\nexport class UpdateappointmentComponent implements OnInit {\r\n  public submitted: boolean;\r\n  isActive: boolean;\r\n  public ShopListResponse: any;\r\n\r\n  public addAppointmentform: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  shopID: any;\r\n\r\n  locations = [];\r\n\r\n  userRoles = [\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"Admin\"\r\n\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"User\"\r\n\r\n    }\r\n  ]\r\n  constructor(private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public dialogRef: MatDialogRef<UpdateappointmentComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addAppointmentform = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      duration: ['', Validators.required],\r\n      LocationType: [\"\", [Validators.required]],\r\n      UserRole: [\"\", Validators.required],\r\n      Description: [\"\", Validators.required],\r\n      Cancellation: [false, Validators.required],\r\n      isDisable: [false, Validators.required],\r\n      withinDays: [\"\", [Validators.required]]\r\n    });\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n   }\r\n  get f() {\r\n    return this.addAppointmentform.controls;\r\n  }\r\n  getAppointmentType(){\r\n    \r\n  }\r\n\r\n  cancel() {\r\n    // Reset the form and submitted flag\r\n    this.addAppointmentform.reset();\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n\r\n\r\n","<p>updateappointment works!</p>\r\n<div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-1\">Add Appointment</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <!-- <button style=\"margin-right: 10px !important;\" (click)=\"onclear()\" type=\"button\"\r\n            class=\"btn btn-cancel\">Cancel</button> -->\r\n            <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAppointmentType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"addAppointmentform\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Name</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label class=\"form-label\">Duration</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Duration\" formControlName=\"duration\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Shop Location</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"LocationType\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.LocationType.invalid && f.LocationType.touched && submitted\r\n                      }\">\r\n                            <mat-option *ngFor=\"let location of locations\" [value]=\"location.shopId\">\r\n                                {{location.tradeName}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>User Role</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"UserRole\" [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.UserRole.invalid && f.UserRole.touched && submitted\r\n                  }\">\r\n                            <mat-option *ngFor=\"let userR of userRoles\" [value]=\"userR.userRole\">\r\n                                {{userR.userRole}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Description</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput cols=\"35\" rows=\"4\" placeholder=\"Description\" formControlName=\"Description\"\r\n                            [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.Description.invalid && f.Description.touched && submitted\r\n                  }\">\r\n                </textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-checkbox formControlName=\"Cancellation\">\r\n                    Cancellation\r\n                </mat-checkbox>\r\n\r\n            </div>\r\n            <div>\r\n                <mat-checkbox formControlName=\"isDisable\">\r\n                    Is Disable\r\n                </mat-checkbox>\r\n                \r\n            </div>\r\n            \r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Within Days</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matNativeControl type=\"number\" required matInput formControlName=\"withinDays\"\r\n                            placeholder=\"Enter Days\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.withinDays.invalid && f.withinDays.touched && submitted\r\n                      }\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main-shop-shcedule-page',\r\n  templateUrl: './main-shop-shcedule-page.component.html',\r\n  styleUrls: ['./main-shop-shcedule-page.component.scss']\r\n})\r\nexport class MainShopShcedulePageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isLinkActive(route: string): boolean {\r\n    return this.router.isActive(route, true);\r\n  }\r\n}\r\n","<div class=\"component-container container-fluid p-4\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./shop-details-list\" routerLinkActive=\"active\">Shop Details</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./appointment-list\" routerLinkActive=\"active\">Appointment</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-3 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./time-schedule-list\" routerLinkActive=\"active\">Time Schedule</a>\r\n          </div>\r\n          <div class=\"col-lg-5\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainShopShcedulePageComponent } from './main-shop-shcedule-page/main-shop-shcedule-page.component';\r\nimport { ShopDetailsPageComponent } from './shop-details-page/shop-details-page.component';\r\nimport { AppointmentPageComponent } from './appointment-page/appointment-page.component';\r\nimport { TimeSchedulePageComponent } from './time-schedule-page/time-schedule-page.component';\r\nimport { UpdateShopComponent } from './shop-details-page/update-shop/update-shop.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainShopShcedulePageComponent,\r\n    children: [\r\n      {\r\n        path: '', \r\n        redirectTo: 'shop-details-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"shop-details-list\",\r\n        component: ShopDetailsPageComponent,\r\n      },\r\n      {\r\n        path: \"appointment-list\",\r\n        component: AppointmentPageComponent,\r\n      },\r\n      {\r\n        path: \"time-schedule-list\",\r\n        component: TimeSchedulePageComponent,\r\n      },\r\n      {\r\n        path: \"edit-trade-details/:id\",\r\n        component: UpdateShopComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NewShopScheduleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NewShopScheduleRoutingModule } from './new-shop-schedule-routing.module';\r\nimport { MainShopShcedulePageComponent } from './main-shop-shcedule-page/main-shop-shcedule-page.component';\r\nimport { ShopDetailsPageComponent } from './shop-details-page/shop-details-page.component';\r\nimport { AppointmentPageComponent } from './appointment-page/appointment-page.component';\r\nimport { TimeSchedulePageComponent } from './time-schedule-page/time-schedule-page.component';\r\nimport { AddAppointmentComponent } from './appointment-page/add-appointment/add-appointment.component';\r\nimport { UpdateShopComponent } from './shop-details-page/update-shop/update-shop.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddTimeScheduleComponent } from './time-schedule-page/add-time-schedule/add-time-schedule.component';\r\nimport { UpdateappointmentComponent } from './appointment-page/updateappointment/updateappointment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainShopShcedulePageComponent,\r\n    ShopDetailsPageComponent,\r\n    AppointmentPageComponent,\r\n    TimeSchedulePageComponent,\r\n    AddAppointmentComponent,\r\n    UpdateShopComponent,\r\n    AddTimeScheduleComponent,\r\n    UpdateappointmentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NewShopScheduleRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class NewShopScheduleModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ScheduleShopService } from 'src/app/core/services/schedule-shop.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-details-page',\r\n  templateUrl: './shop-details-page.component.html',\r\n  styleUrls: ['./shop-details-page.component.scss']\r\n})\r\nexport class ShopDetailsPageComponent implements OnInit {\r\n\r\n  shops=[\r\n    {\r\n      \"id\":1,\r\n      \"email\": \"demo21@gmail.com\",\r\n      \"mobile\": \"8783459890\",\r\n      \"firstName\": \"john\",\r\n      \"lastName\": \"hi\",\r\n      \"parentId\": \"478d3543-d30d-43f2-9559-a080f7b93025\",\r\n      \"isRegistered\": true,\r\n      \"legalName\": \"NH_SHOP\",\r\n      \"accountMethod\": \"Accounts With Stock Management\",\r\n      \"businessType\": \"Proprietorship\",\r\n      \"gstinNo\": \"22\",\r\n      \"gstType\": \"Regular\",\r\n      \"compositeType\": \"Trader\",\r\n      \"homeno\": \"2\",\r\n      \"pincode\": \"390011\",\r\n      \"address\": \"10,abcd road\",\r\n      \"city\": \"vadodara\",\r\n      \"district\": \"vadodara\",\r\n      \"landmark\": \"vadodara\",\r\n      \"state\": \"GUJARAT\",\r\n      \"country\": \"INDIA\"\r\n    }  \r\n  ]\r\n\r\n  public shopForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public ShopListResponse:any;\r\n  isActive: boolean;\r\n\r\n  constructor(private formBuilder:FormBuilder ,private ScheduleShopService:ScheduleShopService,private toastService:ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getShopList();\r\n  }\r\n\r\n  getShopList(){\r\n    this.ScheduleShopService.getShopList({},this.currentUser.id).then((res) => {\r\n      if(res.data.rows){\r\n        this.ShopListResponse = res.data.rows;\r\n        this.isActive = res.data.rows.map(data => {\r\n          data.isActive\r\n        })\r\n        console.log(this.ShopListResponse)\r\n      }\r\n    },(err)=>{\r\n      if(err.error.expose){\r\n        this.ShopListResponse = [];\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else{\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleActiveStatus(shopId) {\r\n    const shopToUpdate = this.ShopListResponse.find(shop => shop.id === shopId);\r\n\r\n    const updatedShop = { ...shopToUpdate, isActive: !shopToUpdate.isActive }; // Create a copy and toggle isActive\r\n    \r\n    this.ScheduleShopService.UpdateShopDetails(updatedShop, shopId).then(\r\n      (res : any) => {\r\n        if(res.success){\r\n          console.log('Shop updated successfully.')\r\n          this.getShopList()\r\n        }\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"row d-flex flex-center\">\r\n  <div class=\"col-md-1 col-lg-6 col-xl-7\"></div>\r\n  <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2 me-4\">\r\n    <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\">\r\n  </div>\r\n  <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-1 col-xl-1 mt-2 p-0\" style = \"display:flex;justify-content: space-around !important;\">\r\n    <!-- <input type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\" class=\"hidden-input\" />\r\n    <button class=\"btn ms-4 text-nowrap\" ngbTooltip=\"Import Excel\" id=\"uploadFile\">\r\n        <i class=\"fas fa-upload\"></i> Import\r\n    </button>\r\n    <button class=\"btn ms-3 text-nowrap\" ngbTooltip=\"Download\" accept=\".xls,.xlsx\"  id=\"download\"\r\n    onclick=\"location.href = 'https://web.iceipts.com/backend/inventory/parties/downloadParties/';\"><i class=\"fas fa-download\"></i></button> -->\r\n  </div>\r\n</div>\r\n\r\n\r\n<hr class=\"mb-1\">    \r\n    \r\n    <div class=\"table-container \">\r\n        <div class=\"table-div overflow-hidden\" style=\"overflow-x: scroll;\">\r\n            <table class=\"table table-responsive\">\r\n                <thead >\r\n                    <tr>\r\n                        <th class=\"col-1 px-0\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <!-- <input  type=\"checkbox\" class=\"form-check-input px-2\"/> -->\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <span>#</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </th>\r\n                        <th class=\"col-2 text-nowrap\">Trade Name</th>\r\n                        <!-- <th class=\"col-2 text-nowrap\">Legal Name</th> -->\r\n                        <th class=\"col-2 text-nowrap\">Business Type</th>\r\n                        <th class=\"col-1 text-nowrap\">Registered</th>\r\n                        <th class=\"col-2 text-nowrap\">Email</th>\r\n                        <th class=\"col-1 text-nowrap\">Appointments</th>\r\n                        <th class=\"col-1 text-nowrap\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"shops\">\r\n                    <tr class=\"table-body-tr\" *ngFor=\"let shop of ShopListResponse;let i = index\">\r\n                        <td class=\"col-1 px-0\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <!-- <input  type=\"checkbox\" class=\"form-check-input \"/> -->\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <span>{{i+1}}</span>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"col-2\">   \r\n                            {{ shop.client == null ?  'no data' : shop.client.legalName | titlecase }}\r\n                        </td>\r\n                        <!-- <td class=\"col-2\">   \r\n                            {{ shop.client == null ?  'no data' : shop.client.tradeName | titlecase }}\r\n                        </td> -->\r\n                        <td class=\"col-2\">\r\n                            {{ shop.client == null ?  'no data' : shop.client.businessType}}\r\n                            \r\n                        </td>\r\n                        <td class=\"col-1\">\r\n                            {{ shop.client == null ?  'no data' : shop.client.isRegistered}}\r\n                            \r\n                        </td>\r\n                        <td class=\"col-2\">\r\n                            {{ shop.email == \"\" ?  'no data' : shop.email}}\r\n                        </td>\r\n                        <td class=\"col-1\">\r\n                            <button class=\"toggle-button\" (click)=\"toggleActiveStatus(shop.id)\" [ngClass]=\"{'active': shop.isActive, 'inactive': !shop.isActive}\">\r\n                              <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n                        </td>\r\n                        <td class=\"col-1\">\r\n                            <!-- <button class=\"btn btnp ps-1\" type=\"button\" routerLinkActive=\"active\">\r\n                                <span class=\"bi-pencil-square icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Edit\" routerLink=\"/pages/shop-schedule-page/edit-trade-details/{{shop.id}}\"></span>\r\n                              </button>\r\n                              \r\n                              <button class=\"btn ps-1\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"></span>\r\n                              </button> -->\r\n                        </td>\r\n                    </tr>\r\n                </tbody> \r\n\r\n                <tbody *ngIf=\"ShopListResponse == 0\">\r\n                    <tr class=\"text-center\">\r\n                        <td colspan=\"10\">\r\n                            <h5 class=\"text-nowrap\">No Shops Details Added. Please Add  Shops Details To Be Displayed Here. <span>\r\n                                <a class=\"nav-link\" routerLink=\"/pages/profile-settings\">Add New Tade</a>\r\n                            </span></h5>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Ṃultiple Delete -->\r\n    <!-- <div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                        aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                            Delete Parties? </h2>\r\n                    </div>\r\n                    <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to delete all employees?</h4>\r\n                    <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to delete all selected employees?</h4>\r\n    \r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"multipleEmployeeDel()\">Continue</a>\r\n                    <a *ngIf=\"!isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"multipleEmployeeDel()\">Continue</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n\r\n    <!-- Signle Delete  -->\r\n    <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Shop? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to delete this shop?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n","import { TitleCasePipe, formatDate } from \"@angular/common\";\r\n  import { Component, ElementRef, OnInit, ViewChild,AfterViewInit, ChangeDetectorRef, OnChanges, SimpleChanges } from \"@angular/core\";\r\n  import {\r\n    FormArray,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators,\r\n  } from \"@angular/forms\";\r\n  import { ActivatedRoute, Router } from \"@angular/router\";\r\n  import { ProfileService } from \"src/app/core/services/profile.service\";\r\n  import { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\n  import {\r\n    MatAutocomplete,\r\n    MatAutocompleteSelectedEvent,\r\n    MatAutocompleteTrigger,\r\n  } from \"@angular/material/autocomplete\";\r\n  import { Observable, pipe } from \"rxjs\";\r\n  import { map, startWith } from \"rxjs/operators\";\r\n  import { MatChipInputEvent } from \"@angular/material/chips\";\r\n  import { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\n  import * as moment from \"moment\";\r\n  import { createFalse } from \"typescript\";\r\n  import { log } from \"console\";\r\n  import { PartyService } from \"src/app/core/services/party.service\";\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  import { ScheduleShopService } from \"src/app/core/services/schedule-shop.service\";\r\n  \r\n  interface IRange {\r\n    value: Date[];\r\n    label: string;\r\n  }\r\n@Component({\r\n  selector: 'app-update-shop',\r\n  templateUrl: './update-shop.component.html',\r\n  styleUrls: ['./update-shop.component.scss']\r\n})\r\nexport class UpdateShopComponent implements OnInit {\r\n\r\n    public dragging: boolean = false;\r\n    public loaded: boolean = false;\r\n    public imageLoaded: boolean = false;\r\n    public activeColor: string = 'green';\r\n    public baseColor: string = '#ccc';\r\n    public signImg: any = '';\r\n    public profilePic: any = '';\r\n    public overlayColor: string = 'rgba(255,255,255,0.5)';\r\n    partners: any[] = [];\r\n  \r\n    ranges: IRange[] = [\r\n      {\r\n        value: [\r\n          new Date(new Date().setDate(new Date().getDate() - 7)),\r\n          new Date(),\r\n        ],\r\n        label: \"Last 7 Days\",\r\n      },\r\n      {\r\n        value: [\r\n          new Date(new Date().setDate(new Date().getMonth() - 1)),\r\n          new Date(),\r\n        ],\r\n        label: \"Last Month\",\r\n      },\r\n    ];\r\n    today: Date;\r\n    maxDate: Date;\r\n    public typeList = [];\r\n    public value: any;\r\n    public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    public data: any;\r\n    public ProfileForm: FormGroup;\r\n    public TradeForm:FormGroup;\r\n    public addressForm: FormGroup;\r\n    public businessForm: FormGroup;\r\n    public dateRange: FormGroup;\r\n    public updated: boolean = false;\r\n    public submitted: boolean;\r\n    public date = new Date();\r\n    public addressId: string = \"\";\r\n    public additionalPlaceOfBusiness: FormArray;\r\n    public addressLength;\r\n    public pinDetails: any;\r\n    public gstDetails: any;\r\n    public finalAddress: any;\r\n    public pin: any;\r\n    public businessNature: any = [];\r\n    public compositeType: boolean = false;\r\n    public isShown: boolean = true;\r\n    public mobileOtp: any;\r\n    public visible = true;\r\n    public selectable = true;\r\n    public removable = true;\r\n    public separatorKeysCodes: number[] = [ENTER, COMMA];\r\n    public categoryCtrl = new FormControl();\r\n    public filteredCategory: Observable<string[]>;\r\n    public categoryBusiness: any = [];\r\n    public categoryName: any = [];\r\n    public categoryId: any = [];\r\n    public opened = false;\r\n    public isDisabledGST: boolean = true;\r\n    public addressArray = [];\r\n    public partenerAray=[]\r\n    public businessType: any;\r\n    public constitutionBusinessType: any;\r\n    public legTrad: boolean = false;\r\n    public cinFlag: boolean = false;\r\n    public partnerSubmitted=false\r\n    partnerDetails: any[] = [];\r\n    additionaDetailsData: any[] = [];\r\n    public cosntBusiness = [\r\n      \"Proprietorship\",\r\n      \"Partnership\",\r\n      \"Private Limited Company\",\r\n      \"Public Limited Company\",\r\n      \"Limited Liability Partnership\",\r\n      \"Hindu Undivided Family\"\r\n    ];\r\n    @ViewChild(\"categoryInput\") categoryInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n    @ViewChild(\"autocompleteTrigger\") matACTrigger: MatAutocompleteTrigger;\r\n    serachByCategory: any;\r\n    public ischecked: boolean = false;\r\n    signatureData: string;\r\n    imgNumber: any;\r\n    showUploadInput: boolean = false;\r\n    public imageSrc: any = \"\";\r\n    profileImage: File;\r\n    signatureImage: File;\r\n    showAdditionalFields = false;\r\n    editedRowIndex: number = -1;  //to store the index of the currently edited row\r\n    additionaList: any[] = [];\r\n    businessPlaceAdd: FormGroup;\r\n    shopId: any;\r\n    isFirstChange: boolean = true;\r\n    // showAdditionalFields = false;\r\n    // @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n  \r\n    constructor(\r\n      public profileService: ProfileService, public partyService: PartyService, public scheduleShopService: ScheduleShopService,\r\n      public fb: FormBuilder, private cdr: ChangeDetectorRef,\r\n      public router: Router, private route: ActivatedRoute,\r\n      private toastService: ToastNotificationService, private titleCasePipe: TitleCasePipe,\r\n      private dialog: MatDialog\r\n    ) {\r\n      this.today = new Date();\r\n      this.maxDate = new Date(\r\n        this.today.getFullYear(),\r\n        this.today.getMonth(),\r\n        25\r\n      );\r\n  \r\n      // this.today = new Date();\r\n      // this.maxDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25)\r\n    }\r\n  \r\n    async ngOnInit() {\r\n      //form for profile data\r\n      try {\r\n        this.TradeForm =this.fb.group({\r\n    \r\n        })\r\n\r\n        // Get the shop ID from the route parameters\r\n        this.route.params.subscribe(params => {\r\n          this.shopId = params['id'];\r\n        });\r\n        // Update the position based on the default value\r\n        // this.businessForm.get('position')?.valueChanges.subscribe(value => {\r\n        //   if (value === 'Partner') {\r\n        //     this.businessForm.get('position')?.setValue('Managing Partner');\r\n        //   }\r\n        // });\r\n  \r\n        this.ProfileForm = this.fb.group({\r\n          firstName: [{value: \"\", disabled: true}],\r\n          legalName: [{value: \"\", disabled: true}],\r\n          businessType: [{value: \"\", disabled: true}],\r\n          email: [{value: \"\", disabled: true}],\r\n          mobile: [{value: \"\", disabled: true}],\r\n          gstType: [{value: \"\", disabled: true}],\r\n          gstStatus: [{value: \"\", disabled: true}],\r\n          gstinNo: [{value: \"\", disabled: true}],\r\n          state: [\"\", [Validators.required]],\r\n          city: [\"\", [Validators.required]],\r\n          pincode: [\"\", [Validators.required]],\r\n          district: [\"\", [Validators.required]],\r\n          landmark: [\"\"],\r\n          country: [\"\", [Validators.required]],\r\n          homeno: [\"\", ],\r\n          // homeno: [\"\", [Validators.required]],\r\n          address: [\"\", [Validators.required]],\r\n          accountMethod: [{value: \"\", disabled: true}],\r\n          compositeType: [{value: \"\", disabled: true}],\r\n          businessNature: [\"\"],\r\n          panNumber: [{value: \"\", disabled: true}],\r\n          tradeName: [\"\",  [Validators.required]],\r\n          financialYearFrom: [{value: \"\", disabled: true}],\r\n          bookBeginningFrom: [{value: \"\", disabled: true}],\r\n          cinNumber: [{value: \"\", disabled: true}],\r\n          profileImage: [null],\r\n          signatureImage: [null],\r\n          // profileImage : this.imageSrc,\r\n          // signatureImage : this.imageSrcSeven,\r\n        });\r\n        this.getType();\r\n  \r\n        this.getBusinessCategory();\r\n        //calling get data api for profile\r\n        this.getTradeDetails();\r\n  \r\n        //form for multiple address\r\n        this.addressForm = this.fb.group({\r\n          addresses: new FormArray([]),\r\n        });\r\n  \r\n        // For Additional place of Business \r\n        this.businessPlaceAdd = this.fb.group({\r\n          pincode: ['', Validators.required],\r\n          state: ['', Validators.required],\r\n          district: ['', Validators.required],\r\n          country: ['', Validators.required],\r\n          city: ['', Validators.required],\r\n          homeno: ['', Validators.required],\r\n          address: ['adress'],\r\n          areaStreet: ['', Validators.required],\r\n          landmark: ['', Validators.required],\r\n        });\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  \r\n    ngAfterViewInit() {\r\n      setTimeout(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n\r\n    toggleAdditionalFields() {\r\n      this.showAdditionalFields = !this.showAdditionalFields;\r\n    }\r\n  \r\n    validatecinNumber(cin) {\r\n      let cinNo = cin.toUpperCase();\r\n      var regex =\r\n        /^([L|U]{1})([0-9]{5})([A-Za-z]{2})([0-9]{4})([A-Za-z]{3})([0-9]{6})$/;\r\n  \r\n      if (regex.test(cinNo)) {\r\n      } else {\r\n        this.ProfileForm.controls.cinNumber.setErrors({ incorrect: true });\r\n      }\r\n    }\r\n  \r\n    validatepanNumber(pan) {\r\n      let panNo = pan.toUpperCase();\r\n      var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n  \r\n      if (regex.test(panNo)) {\r\n      } else {\r\n        this.ProfileForm.controls.panNumber.setErrors({ incorrect: true });\r\n      }\r\n    }\r\n    validateGSTIN(GSTIN) {\r\n      let gstNumber = GSTIN.toUpperCase();\r\n      var regex =\r\n        /^([0][1-9]|[1-2][0-9]|[3][0-7])([a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9a-zA-Z]{1}[zZ]{1}[0-9a-zA-Z]{1})+$/;\r\n      if (gstNumber.length == 15) {\r\n        if (regex.test(gstNumber)) {\r\n          //this.ProfileForm.controls.gstinNo.setErrors({'incorrect': false});\r\n          this.getGstNumber(gstNumber);\r\n          //this.setGSTINError = false\r\n        } else {\r\n          this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n          // this.setGSTINError = true;\r\n        }\r\n        // this.businessDetailsForm.controls.gstNumber.setErrors({'incorrect': true});\r\n      } else {\r\n        this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n        // this.setGSTINError = true;\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * get gst type\r\n     * @param gstType\r\n     */\r\n    \r\n    /**\r\n     * Get Controls of FormArray\r\n     */\r\n    get addressControls() {\r\n      return this.addressForm.get(\"addresses\") as FormArray;\r\n    }\r\n   \r\n  \r\n    addAddress(): void {\r\n      try{\r\n        const data = this.addressForm.get(\"addresses\") as FormArray;\r\n        this.cdr.detectChanges();\r\n        if (data) {\r\n          data.push(this.createAddress());\r\n        }\r\n      } catch {\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Delete array index from FormArray\r\n     * @param index\r\n     */\r\n    deleteAddressForm(index): void {\r\n      const data = this.addressForm.get(\"addresses\") as FormArray;\r\n      data.removeAt(index);\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Add index to FormArray\r\n     * @returns\r\n     */\r\n    createAddress(): FormGroup {\r\n      return new FormGroup({\r\n        homeno: new FormControl(),\r\n        pincode: new FormControl(),\r\n        address: new FormControl(),\r\n        city: new FormControl(),\r\n        state: new FormControl(),\r\n        country: new FormControl(),\r\n        district: new FormControl(),\r\n        landmark: new FormControl(),\r\n      });\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Remove index from FormArray\r\n     * @param i\r\n     */\r\n    removeAddress(i: number) {\r\n      (<FormArray>this.addressForm.get(\"addresses\")).removeAt(i);\r\n    }\r\n  \r\n    /**\r\n     * Get Formcontrol of FormGroup\r\n     */\r\n    get f() {\r\n      return this.ProfileForm.controls;\r\n    }\r\n    get fpart(){\r\n      return this.businessForm.controls;\r\n    }\r\n  \r\n    toggleShow(checked: boolean) {\r\n      this.isShown = checked;\r\n      \r\n      if (!this.isShown) {\r\n        this.ProfileForm.get(\"gstinNo\").clearValidators();\r\n        this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n      } else {\r\n        this.ProfileForm.get(\"gstinNo\").setValidators([]);\r\n        this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n      }\r\n    }\r\n    \r\n  \r\n    /**\r\n     * Get user profile data\r\n     */\r\n    async getTradeDetails() {\r\n      await this.scheduleShopService.getshopListBYshopId({}, this.shopId).then((res : any) => {\r\n        console.log(res);\r\n        this.data = res.data;\r\n        this.constitutionBusinessType = res.data.client.businessType\r\n        let primaryAddress = res.data.primaryAddress;\r\n        if (res.data.client.gstType == \"Composite\") {\r\n          this.compositeType = true;\r\n        }\r\n        if (primaryAddress.length > 0) {\r\n          for (let i = 0; i < primaryAddress.length; i++) {\r\n            this.addressId = primaryAddress[i].id;\r\n            this.addressControls.push(\r\n              new FormGroup({\r\n                address: new FormControl(primaryAddress[i].address),\r\n                city: new FormControl(primaryAddress[i].city),\r\n                country: new FormControl(primaryAddress[i].country),\r\n                homeno: new FormControl(primaryAddress[i].homeno),\r\n                pincode: new FormControl(primaryAddress[i].pincode),\r\n                state: new FormControl(primaryAddress[i].state),\r\n                landmark: new FormControl(primaryAddress[i].landmark),\r\n                district: new FormControl(primaryAddress[i].district),\r\n                id: new FormControl(primaryAddress[i].id),\r\n              })\r\n            );\r\n          }\r\n        }\r\n        if (res.data.client.isRegistered != null) {\r\n          this.toggleShow(res.data.additional.isRegistered);\r\n          // this.isShown = res.data.additional.isRegistered;\r\n        }\r\n        if (res.data.client.gstinNo != null) {\r\n          // this.getGstNumber(res.data.additional.gstinNo);\r\n          // this.getGstNumber(res.data.additional.gstinNo);\r\n        }\r\n        // let businessNatureData = res.data.client.businessTypes.map((item) => item.id);\r\n        // console.log(\"Business ----\", businessNatureData);\r\n        // let businesscategory = res.data.businessCategory.client.map((item) => item.id);\r\n        // console.log(\"Business category -----\", businesscategory);\r\n        // this.categoryCtrl.setValue(businesscategory);\r\n        //sending data from get api to form by patching\r\n        this.ProfileForm.patchValue({\r\n          email: res.data.basicdetails.email,\r\n          businessType: res.data.additional.businessType,\r\n          firstName: res.data.basicdetails.firstName,\r\n          // firstName: res.data.basicdetails.fullName,\r\n          totalPlaces: res.data.additional.totalPlaces,\r\n          legalName: res.data.additional.legalName,\r\n          gstType: res.data.additional.gstType,\r\n          gstinNo: res.data.additional.gstinNo\r\n            ? res.data.additional.gstinNo\r\n            : null,\r\n          compositeType: res.data.additional.compositeType,\r\n          fullName: res.data.basicdetails.firstName,\r\n          // fullName: res.data.basicdetails.fullName,\r\n          // lastName: res.data.basicdetails.lastName,\r\n          // profileImage: res.data.basicdetails.profileImage,\r\n          mobile: res.data.basicdetails.mobile,\r\n          tradeName: res.data.additional.tradeName,\r\n          accountMethod: res.data.additional.accountMethod,\r\n          pincode: res.data.primaryAddress.pincode ? res.data.primaryAddress.pincode : \"\",\r\n          state: res.data.primaryAddress.state ? res.data.primaryAddress.state : \"\",\r\n          city: res.data.primaryAddress.city ? res.data.primaryAddress.city : \"\",\r\n          country: res.data.primaryAddress.country ? res.data.primaryAddress.country : \"\",\r\n          address: res.data.primaryAddress.address ? res.data.primaryAddress.address : \"\",\r\n          landmark: res.data.primaryAddress.landmark ? res.data.primaryAddress.landmark : \"\",\r\n          district: res.data.primaryAddress.district ? res.data.primaryAddress.district : \"\",\r\n          homeno: res.data.primaryAddress.homeno ? res.data.primaryAddress.homeno : \"\",\r\n          panNumber: res.data.additional.panNumber ? res.data.additional.panNumber : \"\",\r\n          // tradeName:res.data.additional.tradeName,\r\n          financialYearFrom: res.data.additional.financialYearFrom ? moment(res.data.additional.financialYearFrom).format(\r\n            \"DD-MMM-YYYY\"\r\n          ) : \"\",\r\n          bookBeginningFrom: res.data.additional.bookBeginningFrom ? moment(res.data.additional.bookBeginningFrom).format(\r\n            \"DD-MMM-YYYY\"\r\n          ) : \"\",\r\n  \r\n          cinNumber: res.data.additional.cinNumber,\r\n          // businessNature: businessNatureData,\r\n        });\r\n      });\r\n    }\r\n    //get pincode api\r\n  \r\n    getPincodeDetails(pin) {\r\n      this.profileService.getUserPincode({}, pin).then((res) => {\r\n        this.pinDetails = res;\r\n        this.ProfileForm.patchValue({\r\n          district: res.data.districtName,\r\n          state: res.data.stateName,\r\n        });\r\n      });\r\n    }\r\n  \r\n    getPincodeDetailsForAdditionalAddress(pin, index) {\r\n      if (pin.length == 6) {\r\n        this.profileService.getUserPincode({}, pin).then((res) => {\r\n          this.pinDetails = res.data;\r\n          this.addressControls.controls[index].patchValue({\r\n            pincode: this.pinDetails.pincode,\r\n            state: this.pinDetails.stateName,\r\n            district: this.pinDetails.districtName,\r\n          });\r\n          this.addressControls\r\n            .at(index)\r\n            .patchValue(res.data.stateName, res.data.districtName);\r\n        });\r\n      }\r\n    }\r\n  \r\n    getGstNumber(gstin) {\r\n      this.profileService.getGstNumber({}, gstin).then(\r\n        (res) => {\r\n          this.gstDetails = res;\r\n          if (res) {\r\n            this.ProfileForm.patchValue({\r\n              legalName: res.data.legalName,\r\n              businessType: res.data.constitution,\r\n              gstType: res.data.taxPayerType,\r\n              gstStatus: res.data.status,\r\n            });\r\n            this.isDisabledGST = false;\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isDisabledGST = true;\r\n        }\r\n      );\r\n    }\r\n  \r\n    /**\r\n     * get nature of business list\r\n     */\r\n    public getType() {\r\n      this.profileService.getTypes({}).then((response) => {\r\n        this.typeList = response.data;\r\n      });\r\n  }\r\n  \r\n    /**\r\n     * Update user profile\r\n     * @returns\r\n     */\r\n    UpdateNewShop() {\r\n      this.submitted = true;\r\n  \r\n      let registerdProfileData = {\r\n        basicDetails: {\r\n          firstName: this.ProfileForm.controls.firstName.value,\r\n          mobile: this.ProfileForm.controls.mobile.value,\r\n          lastName : \"SHOP\",  // need to remove from Backend\r\n          email : this.ProfileForm.controls.email.value,  // need to remove from Backend\r\n          parentId : this.currentUser.id,\r\n          // addSignature : this.signImg,\r\n          // profileImage : this.profileImage,\r\n        },\r\n        shopDetails: {\r\n          isRegistered: this.isShown,\r\n          legalName: this.ProfileForm.controls.legalName.value\r\n            ? this.ProfileForm.controls.legalName.value\r\n            : null,\r\n          businessType: this.ProfileForm.controls.businessType.value\r\n            ? this.ProfileForm.controls.businessType.value\r\n            : null,\r\n          gstType: this.ProfileForm.controls.gstType.value,\r\n          // ...(this.ProfileForm.controls.compositeType.value == \"Composite\") && ({ \"compositeType\": this.ProfileForm.controls.compositeType.value }),\r\n          compositeType: this.ProfileForm.controls.compositeType.value\r\n            ? this.ProfileForm.controls.compositeType.value\r\n            : \"Trader\",\r\n          gstinNo: this.ProfileForm.controls.gstinNo.value\r\n            ? this.ProfileForm.controls.gstinNo.value.toUpperCase()\r\n            : null,\r\n          accountMethod: this.ProfileForm.controls.accountMethod.value,\r\n          //   \"legalName\": this.ProfileForm.controls.legalName.value,\r\n          totalPlaces: 0,\r\n          category: this.categoryId,\r\n          tradeName: this.ProfileForm.controls.tradeName.value,\r\n          panNumber: this.ProfileForm.controls.panNumber.value,\r\n          financialYearFrom: this.ProfileForm.controls.financialYearFrom.value,\r\n          bookBeginningFrom: this.ProfileForm.controls.bookBeginningFrom.value,\r\n          cinNumber: this.ProfileForm.controls.cinNumber.value?this.ProfileForm.controls.cinNumber.value: null,\r\n        },\r\n        address: {\r\n          state: this.ProfileForm.controls.state.value,\r\n          pincode: this.ProfileForm.controls.pincode.value,\r\n          city: \"city\",\r\n          // city: this.ProfileForm.controls.city.value,\r\n          district: this.ProfileForm.controls.district.value,\r\n          landmark: this.ProfileForm.controls.landmark.value\r\n            ? this.ProfileForm.controls.landmark.value\r\n            : \"landmark\",\r\n          country: this.ProfileForm.controls.country.value,\r\n          homeno: \"homeno\",\r\n          // homeno: this.ProfileForm.controls.homeno.value,\r\n          address: this.ProfileForm.controls.address.value,\r\n        },\r\n        businesses: this.ProfileForm.controls.businessNature.value,\r\n        categoryBusiness: this.categoryId,\r\n      };\r\n  \r\n      let finalObject;\r\n  \r\n      console.log(\"User object\", this.ProfileForm);\r\n      if (!this.isShown) {\r\n        finalObject = registerdProfileData;\r\n      } else {\r\n        finalObject = registerdProfileData;\r\n        // finalObject = profileData;\r\n      }\r\n  \r\n      if(this.ProfileForm.valid){\r\n        this.scheduleShopService.UpdateShopDetails(finalObject, this.shopId).then((res : any) => {\r\n            if (res.success) {\r\n              this.router.navigate([\"/pages/shop-schedule-page/shop-details-list\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.ststus == 500) {\r\n              this.toastService.openErrorSnackBar(err.error.error_message);\r\n            } else{\r\n              this.toastService.openErrorSnackBar(err.error.error_message);\r\n            }\r\n          }\r\n          );\r\n        } else {\r\n          this.toastService.openErrorSnackBar(\"Please fill up mandatory details first before submit\")\r\n        }\r\n      }\r\n        \r\n    /**\r\n     * Add multiple address\r\n     */\r\n    addMultipleAddress() {\r\n      console.log(\"addMultipleAddress\")\r\n    const newAddress = this.addressForm.get('addresses').value[this.addressControls.length - 1];\r\n  \r\n    // Check if the new address is not null and contains valid data\r\n    if (newAddress && newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.pincode && newAddress.state) {\r\n      const addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode: newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n  \r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n          .then(\r\n            (res) => {\r\n              if (res.success) {\r\n                this.toastService.openSnackBar(\"Address Added Successfully!!!\");\r\n                window.location.reload();\r\n                this.addressArray = [];\r\n              }\r\n            },\r\n            (err) => {\r\n              if (err.error.status == 400) {\r\n                this.toastService.openErrorSnackBar(\r\n                  \"Fill All Additional Address Details.\"\r\n                );\r\n              }\r\n            }\r\n          );\r\n      }\r\n    }\r\n  \r\n    isInvalidDate(event) {\r\n      let test = event.target.value;\r\n  \r\n      if (test == \"Invalid date\") {\r\n        event.target.value = formatDate(new Date(), \"DD/MM/\", \"en\"); // Change it here\r\n      }\r\n    }\r\n    /**\r\n     * update multiple address by addressId\r\n     * @param item\r\n     */\r\n    updateMultipleAddress(item) {\r\n      let data = {\r\n        homeno: item.value.homeno ? item.value.homeno : \"\",\r\n        landmark: item.value.landmark ? item.value.landmark : \"\",\r\n        district: item.value.district ? item.value.district : \"\",\r\n        pincode: item.value.pincode ? item.value.pincode : \"\",\r\n        address: item.value.address ? item.value.address : \"\",\r\n        city: item.value.city ? item.value.city : \"\",\r\n        state: item.value.state ? item.value.state : \"\",\r\n        country: item.value.country ? item.value.country : \"\",\r\n      };\r\n      console.log(data)\r\n      this.profileService\r\n        .updateMultipleAddress(data, item.value.id)\r\n        .then((res) => {\r\n          if (res) {\r\n            this.toastService.openSnackBar(\"Address Updated Successfully!!!\");\r\n             window.location.reload()\r\n          }\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        });\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Delete Addresses by addressId\r\n     * @param item\r\n     */\r\n    deleteAddress(item) {\r\n      this.profileService.deleteAddressById({}, item.value.id).then((res) => {\r\n        if (res) {\r\n          this.toastService.openSnackBar(\"Address Deleted Successfully!!!\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  \r\n    // Additional Place Of Business\r\n    addPlaceOfBusiness() {\r\n      if (this.businessPlaceAdd.valid) {\r\n        const addressData = this.businessPlaceAdd.value;\r\n        this.profileService.postMultipleAddress({ addresses: [addressData] }, this.shopId)\r\n          .then(\r\n            (res) => {\r\n              if (res.success) {\r\n                this.toastService.openSnackBar(\"Address Added Successfully!!!\");\r\n                // window.location.reload();\r\n                this.businessPlaceAdd.reset();\r\n              }\r\n            },\r\n            (err) => {\r\n              if (err.error.status == 400) {\r\n                this.toastService.openErrorSnackBar(\"Fill All Additional Address Details.\");\r\n              } else {\r\n                this.toastService.openErrorSnackBar(\"Something went wrong\")\r\n              }\r\n            }\r\n          );\r\n      } else {\r\n        this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Update Mobile\r\n     */\r\n    updateMobile() {\r\n      let data = {\r\n        mobile: this.ProfileForm.controls.mobile.value,\r\n      };\r\n      this.profileService\r\n        .updateClientMobileOTP(data, this.currentUser.id)\r\n        .then((res) => {\r\n          this.toastService.openSnackBar(\"OTP Sent Successfully!!!\");\r\n        });\r\n    }\r\n  \r\n    /**\r\n     *\r\n     */\r\n    updateMobileNumber() {\r\n      let data = {\r\n        email: this.ProfileForm.controls.email.value,\r\n        mobile: this.ProfileForm.controls.mobile.value,\r\n        mobileotp: this.mobileOtp,\r\n      };\r\n      this.profileService.updateClientMobile(data).then((res) => {\r\n        this.toastService.openSnackBar(\"Mobile Number Verified Successfully!!!\");\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * add category name in categortNames array\r\n     * @param event\r\n     */\r\n    add(event: MatChipInputEvent): void {\r\n      let input = event.input;\r\n      let value = event.value;\r\n      // Add our category\r\n      if ((value || \"\").trim()) {\r\n        this.typeList.push(value.trim());\r\n      }\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = \"\";\r\n      }\r\n      this.categoryCtrl.setValue(value);\r\n    }\r\n  \r\n    /**\r\n     * remove/delete selected category\r\n     * @param category\r\n     */\r\n    remove(category: any): void {\r\n      let index = this.categoryName.indexOf(category);\r\n      if (index >= 0) {\r\n        this.categoryName.splice(index, 1);\r\n        this.categoryId.splice(index, 1);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * called when category selected from dropdown\r\n     * @param event\r\n     */\r\n    selected(event: MatAutocompleteSelectedEvent): void {\r\n      let newValue = event.option.viewValue;\r\n      if (this.categoryName.includes(newValue)) {\r\n        this.categoryName = [\r\n          ...this.categoryName.filter((fruit) => fruit !== newValue),\r\n        ];\r\n      } else {\r\n        this.categoryName.push(event.option.viewValue);\r\n      }\r\n      this.categoryInput.nativeElement.value = \"\";\r\n      // this.categoryCtrl.setValue(null);\r\n  \r\n      // keep the autocomplete opened after each item is picked.\r\n      requestAnimationFrame(() => {\r\n        this.openAuto(this.matACTrigger);\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * open category dropdown panel\r\n     * @param trigger\r\n     */\r\n    openAuto(trigger: MatAutocompleteTrigger) {\r\n      trigger.openPanel();\r\n      this.categoryInput.nativeElement.focus();\r\n    }\r\n  \r\n    searchCategoryByCategory(categoryInput) {\r\n      this.profileService.getCategoryBySearch({}, categoryInput).then((res) => {\r\n        this.serachByCategory = res.data;\r\n      });\r\n    }\r\n    /**\r\n     * Get all categories\r\n     */\r\n    getBusinessCategory() {\r\n      this.profileService.getBuisnessCategoryAll({}).then((res) => {\r\n        this.categoryBusiness = res.data.rows;\r\n        this.filteredCategory = this.categoryCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((name) =>\r\n            name ? this.filterNames(name) : this.categoryBusiness.slice()\r\n          )\r\n        );\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * filter search category names\r\n     * @param name\r\n     * @returns\r\n     */\r\n    private filterNames(name: string): string[] {\r\n      return this.categoryBusiness.filter((list) => {\r\n          list.category.toLowerCase().indexOf(name) === 0\r\n        }\r\n      );\r\n    }\r\n  \r\n    public array = [];\r\n    getCategoryId(list) {\r\n      this.array.push(list.id);\r\n      this.categoryId = this.array.filter(\r\n        (item, index, self) => self.indexOf(item) === index\r\n      );\r\n    }\r\n    numberOnly(event): boolean {\r\n      const charCode = event.which ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  \r\n  }\r\n  ","<div class=\"container-fluid pt-3 bg-white\">\r\n    <div class=\"fixed-nav-panel row\">\r\n        <div class=\"nav-panel-header col-lg-4\">\r\n            <h2>Update Trade Name</h2>\r\n        </div>\r\n        <div class=\"nav-panel-actions col-lg-8\">\r\n            <div class=\"nav-panel-btns row\">\r\n                <div class=\"col-sm-6\"></div>\r\n                <div class=\"col-lg-2 d-grid\">\r\n                    <button mat-raised-button class=\"text-nowrap\" style=\"border: 1px solid #000;\"\r\n                    *appHasPermission=\"['modify']; name 'profile'\">Cancel</button>\r\n                </div>\r\n                <div class=\"col-lg-3 d-grid\">\r\n                    <button mat-raised-button class=\"text-nowrap text-light\" style=\"background: #a0a0a0;\" type=\"button\"\r\n                    *appHasPermission=\"['modify']; name 'profile'\" (click)=\"UpdateNewShop()\">Save Changes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<hr style=\"background-color: black;font-weight: bold;\">\r\n    <form [formGroup]=\"ProfileForm\" autocomplete=\"off\">\r\n        <div class=\"profile-options row\">\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 pe-4\">\r\n                <div class=\"row mb-5\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Admin Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required formControlName=\"firstName\" maxLength=\"50\"\r\n                            placeholder=\"First Name\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group col-sm-12 col-md-6\">\r\n                        <mat-label>Email Address</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"email\" readonly matInput required formControlName=\"email\"\r\n                                placeholder=\"Email\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"form-group col-sm-12 col-md-6\">\r\n                        <mat-label>Mobile Number</mat-label>\r\n                        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                            <input type=\"text\" matInput formControlName=\"mobile\" minlength=\"10\" maxlength=\"10\"\r\n                                placeholder=\"Mobile Number\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>GSTIN</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput formControlName=\"gstinNo\"\r\n                                (keyup)=\"validateGSTIN($event.target.value)\" maxlength=\"15\" #input1\r\n                                placeholder=\"GSTIN\" (input)=\"input1.value=$event.target.value.toUpperCase()\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"(ProfileForm.get('businessType').value =='Private Limited Company' || ProfileForm.get('businessType').value =='Public Limited Company') && isShown\">\r\n                        <mat-label>CIN</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"cinNumber\"\r\n                                (keyup)=\"validatecinNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\" placeholder=\"CIN\">\r\n                        </mat-form-field>\r\n                        <mat-error\r\n                            *ngIf=\"f.cinNumber.invalid && (f.cinNumber.dirty || f.cinNumber.touched)\"\r\n                            class=\"invalid-feedback\">\r\n                            <mat-error *ngIf=\"f.cinNumber.errors?.required\"> CINI is Required!</mat-error>\r\n                            <mat-error class=\"text-danger\"\r\n                                *ngIf=\"(submitted || f.cinNumber.touched) && f.cinNumber.errors?.pattern\">\r\n                                CIN pattern is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"ProfileForm.get('businessType').value =='Proprietorship' || ProfileForm.get('businessType').value =='Hindu Undivided Family' && isShown\">\r\n                        <mat-label>Legal Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"legalName\"\r\n                                placeholder=\"Legal Name\" [ngClass]=\"{\r\n                                    'is-invalid': (f.legalName.invalid && f.legalName.touched) && submitted }\" requied>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors\">\r\n                            Legal name must be in Alphabets\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors?.required\">\r\n                            Legal Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>PAN Number</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"panNumber\" placeholder=\"PAN\"\r\n                                (keyup)=\"validatepanNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\">\r\n                        </mat-form-field>\r\n                        <mat-error style=\"font-weight: 400; font-size: 11px; \"\r\n                            *ngIf=\"f.panNumber.invalid && (f.panNumber.dirty || f.panNumber.touched)\"\r\n                            class=\"invalid-feedback\">\r\n                            <mat-error *ngIf=\"f.panNumber.errors?.required\"> PAN Number Is Required!</mat-error>\r\n                            <mat-error class=\"text-danger\"\r\n                                *ngIf=\"(submitted || f.panNumber.touched) && f.panNumber.errors?.pattern\">\r\n                                PAN pattern is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"row mb-3\">\r\n                    \r\n                </div> -->\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Financial Year Start From</mat-label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput ngModel bsDatepicker placeholder=\"Financial Year From\" [maxDate]=\"today\"\r\n                                formControlName=\"financialYearFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue', \r\n                          dateInputFormat: 'DD MMM YYYY',\r\n                          showWeekNumbers:false }\"\r\n                                [ngClass]=\"{\r\n                            'is-invalid': (f.financialYearFrom.invalid && f.financialYearFrom.touched) && submitted }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.financialYearFrom.touched) && f.financialYearFrom.errors?.required\">\r\n                            financialYearFrom is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Book Beginning From</mat-label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput ngModel bsDatepicker placeholder=\"Book Beginning From\"\r\n                                formControlName=\"bookBeginningFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue', \r\n                          dateInputFormat: 'DD MMM',\r\n                          showWeekNumbers:false }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12\">\r\n                        <mat-label for=\"billingAddress\">Billing Address</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <textarea matNativeControl matInput required type=\"text\" formControlName=\"address\" row=\"2\"\r\n                                placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Billing Address is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Pincode</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required maxlength=\"6\" minlength=\"6\" name=\"pincodetxt\"\r\n                                id=\"pincodetxt\" formControlName=\"pincode\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                                (change)=\"getPincodeDetails($event.target.value)\">\r\n\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                            Pincode is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                            Pincode should be only digits\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>State</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput\r\n                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                    'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>City</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                            placeholder=\"City\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Country</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                placeholder=\"Country\" [ngClass]=\"{\r\n                                'is-invalid': (f.country.invalid && f.country.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"card mb-3\" *appHasPermission=\"['read']; name: 'profile'\">\r\n                    <form [formGroup]=\"addressForm\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:18px!important;\">Add multiple Business Addresses</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                            <div formArrayName=\"addresses\" *ngFor=\"let item of addressControls.controls; let i = index\">\r\n                                <div [formGroupName]=\"i\" class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input type=\"text\" matInput required\r\n                                                (input)=\"getPincodeDetailsForAdditionalAddress($event.target.value,i)\" maxlength=\"6\"\r\n                                                minlength=\"6\" formControlName=\"pincode\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                                                value=\"\">\r\n                                        </mat-form-field>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                                            Pincode is Required !\r\n                                        </mat-error>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                                            Pincode should be only digits.\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>State</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput\r\n                                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                                'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                                            State is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>District</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                                placeholder=\"District\" [ngClass]=\"{\r\n                                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                                            District is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                                placeholder=\"Country\" [ngClass]=\"{\r\n                                            'is-invalid': (f.country.invalid && f.country.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                                            Country is Required!\r\n                                        </mat-error>\r\n            \r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\"\r\n                                                placeholder=\"Town/City\" [ngClass]=\"{\r\n                                            'is-invalid': (f.city.invalid && f.city.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.city.touched) && f.city.errors?.required\">\r\n                                            Town/City is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>House No</mat-label>\r\n                                         <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\"\r\n                                                placeholder=\"House No,Apartment,Building,Company\" [ngClass]=\"{\r\n                                            'is-invalid': (f.homeno.invalid && f.homeno.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.homeno.touched) && f.homeno.errors?.required\">\r\n                                            House No is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"address\"\r\n                                                placeholder=\"Area\" [ngClass]=\"{\r\n                                            'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                                            Area, Street, Sector, Village is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\"\r\n                                                placeholder=\"Landmark\" [ngClass]=\"{\r\n                                                'is-invalid': (f.landmark.invalid && f.country.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.landmark.touched) && f.landmark.errors?.required\">\r\n                                            Landmark is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"offset-3 col-9 ml-10\">\r\n                                        <div class=\"d-flex justify-content-end row\">\r\n                                            <div *ngIf=\"item.value.id\">\r\n                                                <a class=\"col-6 btn btn-cancel margin-right mb-1\" (click)=\"deleteAddress(item)\"\r\n                                                    style=\"margin-right: 10px\">Cancel\r\n                                                </a>\r\n                                                \r\n                                                <a class=\"col-6 btn btn-save margin-right mb-1\" \r\n                                                    *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                                    (click)=\"updateMultipleAddress(item)\">\r\n                                                    Update\r\n                                                </a>\r\n                                            </div>\r\n                                            <div>\r\n                                                <a class=\"btn btn-outline-warn margin-right\" *ngIf=\"!item.value.id\"\r\n                                                    (click)=\"deleteAddressForm(i)\" style=\"margin-right: 10px\">\r\n                                                    -\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n            \r\n                            <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-end\">\r\n                                <a class=\"btn btn-cancel margin-right\" (click)=\"addAddress()\">\r\n                                    +\r\n                                </a>\r\n            \r\n                                <button mat-flat-button class=\"btn btn-save\" *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                    (click)=\"addMultipleAddress()\">\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 ps-4\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Tax Payer Type</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering formControlName=\"gstType\"\r\n                                placeholder=\"GST Type\" [ngClass]=\"{\r\n                                    'is-invalid': (f.gstType.invalid && f.gstType.touched) && submitted }\"\r\n                                [disabled]=\"!isDisabledGST\">\r\n                                <mat-option value=\"Regular\">Regular</mat-option>\r\n                                <mat-option value=\"Composite\">Composite\r\n                                </mat-option>\r\n                                <mat-option value=\"Exempted\">Exempted</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.gstType.touched) && f.gstType.errors?.required\">\r\n                            Tax Payer Type is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\"> -->\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Trade Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"tradeName\" placeholder=\"Trade Name\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.tradeName.invalid && f.tradeName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.tradeName.touched) && f.tradeName.errors?.required\">\r\n                            Trade Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\">\r\n                        <mat-label>Composition Dealer *</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering\r\n                                placeholder=\"Composition Dealer\">\r\n                                <mat-option value=\"Manufacturer & Trader (Goods)\">Manufacturer & Trader (Goods)</mat-option>\r\n                                <mat-option value=\"Restaurant (Not Serving Alcohol)\">Restaurant (Not Serving Alcohol)\r\n                                </mat-option>\r\n                                <mat-option value=\"Service\">Service</mat-option>\r\n                                <mat-option value=\"Manufacturers of Bricks\">Manufacturers of Bricks</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Constitution of Business</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select formControlName=\"businessType\" matNativeControl matInput disableOptionCentering\r\n                                placeholdeer=\"Constitution of Business\" [disabled]=\"!isDisabledGST\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.businessType.invalid && f.businessType.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let item of cosntBusiness\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessType.touched) && f.businessType.errors?.required\">\r\n                            Constitution of Business is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Account Method</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering required formControlName=\"accountMethod\"\r\n                                placeholdeer=\"Constitution of Business\" [ngClass]=\"{\r\n                                    'is-invalid': (f.accountMethod.invalid && f.accountMethod.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option value=\"Accounts\">Only Accounts</mat-option>\r\n                                <mat-option value=\"Accounts With Stock Management\">Accounts With Stock Management</mat-option>\r\n                                <!-- <option value=\"Both\">Both</option> -->\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.accountMethod.touched) && f.accountMethod.errors?.required\">\r\n                            Account Method is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Business Type(Select multiple, if applicable)</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering formControlName=\"businessNature\" multiple\r\n                            [ngClass]=\"{'is-invalid': (f.businessNature.invalid && f.businessNature.touched) && submitted }\" required>\r\n                                <mat-option *ngFor=\"let type of typeList\" [value]=\"type.id\">{{type.businessType}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>  \r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessNature.touched) && f.businessNature.errors?.required\">\r\n                            Business Type is Required!\r\n                        </mat-error>                      \r\n                    </div>\r\n                    \r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Business Category</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-chip-list #chipList aria-label=\"category selection\" [multiple]=\"true\">\r\n                                <mat-chip *ngFor=\"let category of categoryName\" [selectable]=\"category=='Education'\"\r\n                                    [removable]=\"removable\" (removed)=\"remove(category)\">\r\n                                    {{category}}\r\n                                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                                </mat-chip>\r\n                                <input placeholder=\"Business Category\" #categoryInput\r\n                                    #autocompleteTrigger=\"matAutocompleteTrigger\" [formControl]=\"categoryCtrl\"\r\n                                    [matAutocomplete]=\"auto\" [matChipInputFor]=\"chipList\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    (matChipInputTokenEnd)=\"add($event)\" [ngClass]=\"{\r\n                                        'is-invalid': (categoryCtrl.invalid && categoryCtrl.touched) && submitted }\" required>\r\n                            </mat-chip-list>\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n                                <mat-option *ngFor=\"let item of filteredCategory | async\" [value]=\"item.id\"\r\n                                    (onSelectionChange)=\"getCategoryId(item)\">\r\n                                    <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\"\r\n                                        [checked]=\"categoryName.indexOf(item.category) >=0\"></mat-checkbox>\r\n                                    {{item.category}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <a mat-icon-button matSuffix style=\"width: 34px; height: 34px;\"\r\n                                (click)=\"openAuto(autocompleteTrigger)\">\r\n                                <mat-icon style=\"width: 34px;\">expand_more</mat-icon>\r\n                            </a>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || categoryCtrl.touched) && categoryCtrl.errors?.required\">\r\n                            Category is Required!\r\n                        </mat-error>                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"card mb-3\" *ngIf=\"showAdditionalFields\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:16px!important;\">Add Additional Place of Business</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                            <form [formGroup]=\"businessPlaceAdd\" (ngSubmit)=\"addPlaceOfBusiness()\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input type=\"text\" matInput required formControlName=\"pincode\" placeholder=\"Pincode\">\r\n                                        </mat-form-field>\r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>State</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput type=\"text\" ngxOnlyString required formControlName=\"state\" placeholder=\"State\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>District</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\" placeholder=\"District\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl type=\"text\" matInput required formControlName=\"country\" placeholder=\"Country\">\r\n                                        </mat-form-field>\r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\" placeholder=\"City\">\r\n                                        </mat-form-field>\r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>House No</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\" placeholder=\"House No, Apartment, Building, Company\">\r\n                                        </mat-form-field>\r\n                        \r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"areaStreet\" placeholder=\"Area\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\" placeholder=\"Landmark\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <!-- Add a submit button -->\r\n                                    <div class=\"d-flex justify-content-end\">\r\n                                        <button type=\"submit\" mat-flat-button class=\"btn btn-save\">Add Address</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Add additional Trade Name -->\r\n                    <div class=\"card mb-3\" *ngIf=\"showAdditionalFields\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:18px!important;\">Add Addtional Trade Name</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                    \r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Additional Trade Name </mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            placeholder=\"Additional Trade Name \">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Address</mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            formControlName=\"address\" placeholder=\"Additional Trade Name \">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Add Addtional Place of Business</mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            formControlName=\"additionalplaces\" placeholder=\"Add Addtional Place of Business\">\r\n                                    </mat-form-field>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <h3 style=\"font-weight:500;\">ADDRESS</h3>\r\n                            </div>\r\n                    \r\n                            <div class=\"row\">\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <input type=\"text\" matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>State</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>District</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <input matNativeControl matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>House No, Apartment, Building, Company</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                            <div class=\"row\">\r\n                                <h3 style=\"font-weight:500;\">Add Addtional Place of Business</h3>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <input type=\"text\" matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>State</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>District</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <input matNativeControl matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>House No, Apartment, Building, Company</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-12\">\r\n                        <div class=\"notes-section\">\r\n                            <p class=\"notes-textarea text-black\" style=\"background: #e4e3e6;\">\r\n                                <b>Note:</b> Terms & condition and Signature added below will be shown on your invoices.\r\n                            </p>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-12\">\r\n                        <div class=\"terms-section\">\r\n                            \r\n                          </div>\r\n                          <label class=\"form-label\">Terms & Conditions</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <textarea matInput required rows=\"3\" placeholder=\"Terms & Conditions\"\r\n                       >\r\n                       1. Goods once sold will not be taken back or exchanged.\r\n                       1. Goods once sold will not be taken back or exchanged.</textarea>\r\n                </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-time-schedule',\r\n  templateUrl: './add-time-schedule.component.html',\r\n  styleUrls: ['./add-time-schedule.component.scss']\r\n})\r\nexport class AddTimeScheduleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-time-schedule works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ScheduleScheduleService } from 'src/app/core/services/schedule-schedule.service';\r\n\r\n@Component({\r\n  selector: 'app-time-schedule-page',\r\n  templateUrl: './time-schedule-page.component.html',\r\n  styleUrls: ['./time-schedule-page.component.scss']\r\n})\r\nexport class TimeSchedulePageComponent implements OnInit {\r\n\r\n  schedules=[\r\n    {\r\n      \"id\":1,\r\n      \"appointmentType\":\"Routine Visit\",\r\n      \"shopName\":\"Chinchwad East Pune\",\r\n      \"breakTime\":\"2pm -3pm\",\r\n      \"bufferTime\":\"15min\",\r\n    },\r\n    {\r\n      \"id\":2,\r\n      \"appointmentType\":\"Virtual Appt.\",\r\n      \"shopName\":\"Chinchwad East Pune\",\r\n      \"breakTime\":\"12pm -1pm\",\r\n      \"bufferTime\":\"30 min\",\r\n    },\r\n]\r\nappointMentType=[\r\n  {\r\n  \"id\":1,\r\n  \"appointMent\":\"Routine Visit\"\r\n  },\r\n  {\r\n    \"id\":2,\r\n    \"appointMent\":\"Virtual appt\t\"\r\n  },\r\n  {\r\n    \"id\":3,\r\n    \"appointMent\":\"One To One\"\r\n  },\r\n]\r\n\r\n\r\nshopID:any;\r\npublic schduleAllRes:any;\r\n\r\n\r\n  constructor(private formBuilder:FormBuilder,\r\n    private modal:NgbModal,private route: ActivatedRoute,private scheduleScheduleService:ScheduleScheduleService ) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n   this.getAllSchedule();\r\n  }\r\n\r\n  getAllSchedule(){\r\n    this.scheduleScheduleService.getAllScheduleShopID({},this.shopID).then((res) => {\r\n      this.schduleAllRes = res.data;\r\n      console.log(\"schduleAllRes\",this.schduleAllRes) ;\r\n     })   \r\n  }\r\n\r\n  modalDismiss(){\r\n    this.modal.dismissAll();\r\n  }\r\n  \r\n  deleteSchedule(id:any){\r\n   this.schedules = this.schedules.filter(x => x.id != id);\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-2col-lg-7 col-xl-7\"></div>\r\n    <div class=\"col-sm-12 col-md-6 col-lg-3 col-xl-3 mt-2\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\" />\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-12 col-md-4 col-lg-2 col-xl-2 mt-2\"\r\n        style=\"display: flex; justify-content: space-around !important\">\r\n        <button class=\"btn text-nowrap ms-2\"><i class=\"fas fa-plus\"></i> Add Time Schedule</button>\r\n        <!-- <input type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\" class=\"hidden-input\" />\r\n        <button class=\"btn text-nowrap mx-2\" ngbTooltip=\"Import Excel\" id=\"uploadFile\">\r\n            <i class=\"fas fa-upload\"></i> Import\r\n        </button>\r\n        <button class=\"btn text-nowrap\" ngbTooltip=\"Download\" accept=\".xls,.xlsx\" id=\"download\"\r\n            onclick=\"location.href = ''\">\r\n            <i class=\"fas fa-download\"></i>\r\n        </button> -->\r\n    </div>\r\n</div>\r\n\r\n<hr class=\"mb-1\" />\r\n\r\n<div class=\"card-body p-0 overflow-hidden\">\r\n    <div class=\"table-div overflow-hidden\" style=\"overflow-x: scroll;\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <tr class=\"btn-reveal-trigger\">\r\n                    <th class=\"col-1 px-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input  type=\"checkbox\" class=\"form-check-input px-2\"/>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <span>#</span>\r\n                            </div>\r\n                        </div> \r\n                    </th>\r\n                    <th class=\"col-2\">Schedule Name</th>\r\n                    <th class=\"col-2\">Appointment Name</th>\r\n                    <th class=\"col-1\">Duration</th>\r\n                    <th class=\"col-1\">Location Type</th>\r\n                    <th class=\"col-4\"></th>\r\n                    <th class=\"col-1\" class=\"text-center\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"schedules\">\r\n                <tr *ngFor=\"let schedule of schduleAllRes; let i = index\">\r\n                    <td class=\"col-1 px-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input  type=\"checkbox\" class=\"form-check-input \"/>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <span>{{i+1}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td clas=\"col-2\">{{ schedule.scheduleName }}</td>\r\n                    <td clas=\"col-2\">{{ schedule.appointmentType.name }}</td>\r\n                    <td clas=\"col-1\">{{ schedule.appointmentType.duration }}</td>\r\n                    <td clas=\"col-1\">{{ schedule.appointmentType.locationType }}</td>\r\n                    <td clas=\"col-4\"></td>\r\n                    <td class=\"col-1\">\r\n                        <span class=\"m-1\" text-center></span>\r\n                        <button class=\"btn btnp\" data-bs-target=\"#errorDelete-modal\" aria-hidden=\"true\">\r\n                            <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                (click)=\"deleteSchedule(schedule.id)\"></span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"schduleAllRes == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <h5 class=\"text-nowrap\">\r\n                            No Shop Schedule Details Added. Please Add Shop Schedule Details\r\n                            To Be Displayed Here.\r\n                            <span>\r\n                                <a class=\"nav-link\" routerLink=\"/pages/shop-setting/{{\r\n                    shopID\r\n                  }}/add-schedule-form/{{ shopID }}\">Add New Shop Schedule</a>\r\n                            </span>\r\n                        </h5>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}