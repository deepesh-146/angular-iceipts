{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","AddAppointmentComponent","formBuilder","scheduleAppointmentService","ScheduleShopService","toastService","titleCasePipe","route","router","dialogRef","JSON","parse","localStorage","getItem","getShopList","addAppointmentform","group","name","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","duration","LocationType","UserRole","Description","Cancellation","isDisable","withinDays","params","subscribe","shopID","controls","currentUser","id","then","res","locations","data","rows","map","tradeName","client","shopId","submitted","invalid","console","log","openErrorSnackBar","body","value","postAppointDetails","openSnackBar","resetForm","err","error","expose","transform","error_message","Name","Duration","reset","close","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ctx_r2","AppointmentPageComponent","dialog","ScheduleAppointmentService","getAppointmentDetails","getAppointTypeList","appointmentPageSize","currentPageNo","appointListRes","pageData","totalrow","totalrows","e","open","_add_appointment_add_appointment_component__WEBPACK_IMPORTED_MODULE_0__","width","height","panelClass","disableClose","position","right","afterClosed","result","pageIndex","pagesize","pageSize","length","element","document","getElementById","ws","xlsx__WEBPACK_IMPORTED_MODULE_3__","wb","fileName","_angular_core__WEBPACK_IMPORTED_MODULE_0__","UpdateappointmentComponent","_angular_forms__WEBPACK_IMPORTED_MODULE_1__","MainShopShcedulePageComponent","isActive","routes","path","component","_main_shop_shcedule_page_main_shop_shcedule_page_component__WEBPACK_IMPORTED_MODULE_0__","children","redirectTo","pathMatch","_shop_details_page_shop_details_page_component__WEBPACK_IMPORTED_MODULE_1__","_appointment_page_appointment_page_component__WEBPACK_IMPORTED_MODULE_2__","_time_schedule_page_time_schedule_page_component__WEBPACK_IMPORTED_MODULE_3__","_shop_details_page_update_shop_update_shop_component__WEBPACK_IMPORTED_MODULE_4__","routerLinkActiveOptions","exact","NewShopScheduleRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_6__","imports","exports","NewShopScheduleModule","_angular_common__WEBPACK_IMPORTED_MODULE_11__","_new_shop_schedule_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","src_app_material_module__WEBPACK_IMPORTED_MODULE_7__","ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_13__","declarations","_main_shop_shcedule_page_main_shop_shcedule_page_component__WEBPACK_IMPORTED_MODULE_1__","_shop_details_page_shop_details_page_component__WEBPACK_IMPORTED_MODULE_2__","_appointment_page_appointment_page_component__WEBPACK_IMPORTED_MODULE_3__","_time_schedule_page_time_schedule_page_component__WEBPACK_IMPORTED_MODULE_4__","_appointment_page_add_appointment_add_appointment_component__WEBPACK_IMPORTED_MODULE_5__","_shop_details_page_update_shop_update_shop_component__WEBPACK_IMPORTED_MODULE_6__","_time_schedule_page_add_time_schedule_add_time_schedule_component__WEBPACK_IMPORTED_MODULE_8__","_appointment_page_updateappointment_updateappointment_component__WEBPACK_IMPORTED_MODULE_9__","ShopDetailsPageComponent","ShopListResponse","shopToUpdate","find","shop","updatedShop","UpdateShopDetails","success","_angular_core__WEBPACK_IMPORTED_MODULE_5__","$event","ctx_r82","_r85","_r81","ctx_r21","UpdateShopComponent","profileService","partyService","scheduleShopService","fb","cdr","Date","setDate","getDate","label","getMonth","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","today","maxDate","getFullYear","TradeForm","ProfileForm","firstName","disabled","legalName","businessType","email","mobile","gstType","gstStatus","gstinNo","state","city","pincode","district","landmark","country","homeno","address","accountMethod","compositeType","businessNature","panNumber","financialYearFrom","bookBeginningFrom","cinNumber","profileImage","signatureImage","getType","getBusinessCategory","getTradeDetails","addressForm","addresses","businessPlaceAdd","areaStreet","setTimeout","detectChanges","showAdditionalFields","cin","cinNo","toUpperCase","regex","test","setErrors","incorrect","pan","panNo","GSTIN","gstNumber","getGstNumber","get","push","createAddress","index","removeAt","i","businessForm","checked","isShown","clearValidators","updateValueAndValidity","setValidators","getshopListBYshopId","constitutionBusinessType","primaryAddress","addressId","addressControls","isRegistered","toggleShow","additional","patchValue","basicdetails","totalPlaces","fullName","moment__WEBPACK_IMPORTED_MODULE_0__","format","pin","getUserPincode","pinDetails","districtName","stateName","at","gstin","gstDetails","constitution","taxPayerType","status","isDisabledGST","getTypes","response","typeList","registerdProfileData","basicDetails","lastName","parentId","shopDetails","category","categoryId","businesses","categoryBusiness","finalObject","valid","navigate","ststus","newAddress","addressData","toString","postMultipleAddress","window","location","reload","addressArray","event","target","item","updateMultipleAddress","deleteAddressById","updateClientMobileOTP","mobileotp","mobileOtp","updateClientMobile","input","trim","categoryCtrl","setValue","categoryName","indexOf","splice","newValue","option","viewValue","includes","filter","fruit","categoryInput","nativeElement","requestAnimationFrame","openAuto","matACTrigger","trigger","openPanel","focus","getCategoryBySearch","serachByCategory","getBuisnessCategoryAll","filteredCategory","valueChanges","pipe","filterNames","slice","list","toLowerCase","array","self","charCode","which","keyCode","viewQuery","AddTimeScheduleComponent","_angular_core__WEBPACK_IMPORTED_MODULE_1__","TimeSchedulePageComponent","modal","scheduleScheduleService","getAllSchedule","getAllScheduleShopID","schduleAllRes","dismissAll","schedules","x"],"sources":["webpack:///src/app/pages/new-shop-schedule/appointment-page/add-appointment/add-appointment.component.html","webpack:///src/app/pages/new-shop-schedule/appointment-page/add-appointment/add-appointment.component.ts","webpack:///src/app/pages/new-shop-schedule/appointment-page/appointment-page.component.html","webpack:///src/app/pages/new-shop-schedule/appointment-page/appointment-page.component.ts","webpack:///src/app/pages/new-shop-schedule/appointment-page/updateappointment/updateappointment.component.html","webpack:///src/app/pages/new-shop-schedule/appointment-page/updateappointment/updateappointment.component.ts","webpack:///src/app/pages/new-shop-schedule/main-shop-shcedule-page/main-shop-shcedule-page.component.ts","webpack:///src/app/pages/new-shop-schedule/main-shop-shcedule-page/main-shop-shcedule-page.component.html","webpack:///src/app/pages/new-shop-schedule/new-shop-schedule-routing.module.ts","webpack:///src/app/pages/new-shop-schedule/new-shop-schedule.module.ts","webpack:///src/app/pages/new-shop-schedule/shop-details-page/shop-details-page.component.html","webpack:///src/app/pages/new-shop-schedule/shop-details-page/shop-details-page.component.ts","webpack:///src/app/pages/new-shop-schedule/shop-details-page/update-shop/update-shop.component.html","webpack:///src/app/pages/new-shop-schedule/shop-details-page/update-shop/update-shop.component.ts","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/add-time-schedule/add-time-schedule.component.ts","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/add-time-schedule/add-time-schedule.component.html","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/time-schedule-page.component.html","webpack:///src/app/pages/new-shop-schedule/time-schedule-page/time-schedule-page.component.ts"],"sourcesContent":["<div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-1\">Add Appointment</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <!-- <button style=\"margin-right: 10px !important;\" (click)=\"onclear()\" type=\"button\"\r\n            class=\"btn btn-cancel\">Cancel</button> -->\r\n            <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAppointmentType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"addAppointmentform\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Name</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label class=\"form-label\">Duration</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Duration\" formControlName=\"duration\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Shop Location</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"LocationType\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.LocationType.invalid && f.LocationType.touched && submitted\r\n                      }\">\r\n                            <mat-option *ngFor=\"let location of locations\" [value]=\"location.shopId\">\r\n                                {{location.tradeName}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>User Role</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"UserRole\" [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.UserRole.invalid && f.UserRole.touched && submitted\r\n                  }\">\r\n                            <mat-option *ngFor=\"let userR of userRoles\" [value]=\"userR.userRole\">\r\n                                {{userR.userRole}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Description</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput cols=\"35\" rows=\"4\" placeholder=\"Description\" formControlName=\"Description\"\r\n                            [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.Description.invalid && f.Description.touched && submitted\r\n                  }\">\r\n                </textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-checkbox formControlName=\"Cancellation\">\r\n                    Cancellation\r\n                </mat-checkbox>\r\n\r\n            </div>\r\n            <!-- <div>\r\n                <mat-checkbox formControlName=\"isDisable\">\r\n                    Is Disable\r\n                </mat-checkbox>\r\n                \r\n            </div> -->\r\n            \r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Within Days</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matNativeControl type=\"number\" required matInput formControlName=\"withinDays\"\r\n                            placeholder=\"Enter Days\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.withinDays.invalid && f.withinDays.touched && submitted\r\n                      }\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { TitleCasePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ScheduleAppointmentService } from 'src/app/core/services/schedule-appointment.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\nimport { ScheduleShopService } from 'src/app/core/services/schedule-shop.service';\r\n\r\n@Component({\r\n  selector: 'app-add-appointment',\r\n  templateUrl: './add-appointment.component.html',\r\n  styleUrls: ['./add-appointment.component.scss']\r\n})\r\nexport class AddAppointmentComponent implements OnInit {\r\n  public submitted: boolean;\r\n  isActive: boolean;\r\n  public ShopListResponse:any;\r\n\r\n  public addAppointmentform: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  shopID: any;\r\n  // locations = [\r\n  //   {\r\n  //     \"id\": 1,\r\n  //     \"locationName\": \"At Home\"\r\n\r\n  //   },\r\n  //   {\r\n  //     \"id\": 2,\r\n  //     \"locationName\": \"Virtual/Technician\"\r\n\r\n  //   },\r\n  //   {\r\n  //     \"id\": 2,\r\n  //     \"locationName\": \"Phone Call\"\r\n\r\n  //   },\r\n  // ]\r\n  locations = [];\r\n  \r\n  userRoles = [\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"Admin\"\r\n\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"User\"\r\n\r\n    }\r\n  ]\r\n  constructor(private formBuilder: FormBuilder,\r\n    private scheduleAppointmentService: ScheduleAppointmentService,\r\n    private ScheduleShopService:ScheduleShopService,\r\n    private toastService: ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe,\r\n    private route: ActivatedRoute, private router: Router,\r\n    public dialogRef: MatDialogRef<AddAppointmentComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getShopList();\r\n    this.addAppointmentform = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      duration: ['', Validators.required],\r\n      LocationType: [\"\", [Validators.required]],\r\n      UserRole: [\"\", Validators.required],\r\n      Description: [\"\", Validators.required],\r\n      Cancellation: [false, Validators.required],\r\n      isDisable: [false, Validators.required],\r\n      withinDays: [\"\",[Validators.required]]\r\n\r\n    });\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n  \r\n  }\r\n  get f() {\r\n    return this.addAppointmentform.controls;\r\n  }\r\n\r\n  onclear() {\r\n\r\n  }\r\n\r\n  getShopList(){\r\n    this.ScheduleShopService.getShopList({},this.currentUser.id).then((res) => {\r\n\r\n        this.locations= res.data.rows.map((data : any) => {\r\n          return {\r\n            tradeName: data.client.tradeName,\r\n            shopId: data.id\r\n          };\r\n    })\r\n    })\r\n  }\r\n  \r\n\r\n    \r\n  \r\n     \r\n  \r\n  getAppointmentType() {\r\n    this.submitted = true;\r\n    if (this.addAppointmentform.invalid) {\r\n      console.log(this.addAppointmentform.controls);\r\n      this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      return false;\r\n    }\r\n    let body = {\r\n      \"name\": this.addAppointmentform.controls.name.value,\r\n      \"duration\": this.addAppointmentform.controls.duration.value,\r\n      \"locationType\": this.addAppointmentform.controls.LocationType.value,\r\n      \"userRole\": this.addAppointmentform.controls.UserRole.value,\r\n      \"description\": this.addAppointmentform.controls.Description.value,\r\n      \"cancellation\": this.addAppointmentform.controls.Cancellation.value ? this.addAppointmentform.controls.Cancellation.value : false,\r\n      \"isDisable\": this.addAppointmentform.controls.isDisable.value ? this.addAppointmentform.controls.isDisable.value : false,\r\n      \"withinDays\": this.addAppointmentform.controls.withinDays.value,\r\n      \"userId\": this.currentUser.id,\r\n      \"shopId\": this.addAppointmentform.controls.LocationType.value, //we are sending shopId which is getting form location list\r\n    }\r\n\r\n    this.scheduleAppointmentService.postAppointDetails(body).then((res) => {\r\n      if (res) {\r\n        this.toastService.openSnackBar(\"Shop Appointment Added Successfully.\");\r\n        // this.router.navigate([\"/pages/shop-setting/shopID/shop-appointment/shopID\"]);\r\n        // this.appointMentForm.reset();\r\n        this.resetForm();\r\n        this.submitted = false;\r\n\r\n      }\r\n    }, (err) => {\r\n      if (err.error.expose) {\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else {\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  resetForm() {\r\n    this.addAppointmentform = this.formBuilder.group({\r\n      Name: [\"\"],\r\n      Duration: [\"\"],\r\n      LocationType: [\"\"],\r\n      UserRole: [\"\"],\r\n      Description: [\"\"],\r\n      Cancellation: [false],\r\n      isDisable: [false],\r\n      withinDays: [\"\"]\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    // Reset the form and submitted flag\r\n    this.addAppointmentform.reset();\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n","<div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-1 col-lg-5 col-xl-6\"></div>\r\n    <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\">\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-4 col-xl-3 mt-2\"\r\n        style=\"display:flex;justify-content: space-around !important;\">\r\n        <button class=\"btn text-nowrap\" (click)=\"openDialogAppointment()\"><i class=\"fas fa-plus\"></i> Add\r\n            Appointment</button>\r\n        <!-- <input type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\" class=\"hidden-input\"\r\n            (change)=\"handleInputChange($event)\" />\r\n        <button class=\"btn ms-3 text-nowrap\" ngbTooltip=\"Import Excel\" (click)=\"startUpload()\">\r\n            <i class=\"fas fa-upload\"></i> Import\r\n        </button> -->\r\n        <!-- <button class=\"btn ms-3 text-nowrap\" ngbTooltip=\"Download\" accept=\".xls,.xlsx\" id=\"download\"\r\n            onclick=\"location.href = 'https://web.iceipts.com/api/apiserver/users/Appointment';\"><i\r\n                class=\"fas fa-download\"></i>\r\n        </button> -->\r\n        <!-- <button class=\"btn\" (click)=\"ExcelDownlod()\">\r\n            <i class=\"fas fa-download\"></i>\r\n    </button> -->\r\n    </div>\r\n</div>\r\n\r\n<hr class=\"mb-1\">\r\n<div class=\"table-container \">\r\n    <div class=\"table-div overflow-hidden\" style=\"overflow-x: scroll;\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"col-1 px-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input type=\"checkbox\" class=\"form-check-input px-2\"/>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <span>#</span>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    <!-- <th class=\"col-1 text-nowrap\">#</th> -->\r\n                    <th class=\"col text-nowrap\">Name</th>\r\n                    <th class=\"col text-nowrap\">Duration</th>\r\n                    <th class=\"col text-nowrap\">Location Type</th>\r\n                    <th class=\"col text-nowrap\">Describtion</th>\r\n                    <th class=\"col text-nowrap\">User Role</th>\r\n                    <th class=\"col text-nowrap\">Cancellation</th>\r\n                    <th class=\"col text-nowrap\">IsDisable</th>\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"list\" *ngIf=\"appointListRes\">\r\n                <tr class=\"text-capitalize\" *ngFor=\"let appointment of appointListRes; let i = index\">\r\n                    <td class=\"col-1\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" class=\"mt-2\" />\r\n                    </td>\r\n                    <td class=\"col\">{{ i + 1 }}</td>\r\n                    <td class=\"col\">{{appointment.name}}</td>\r\n                    <td class=\"col\">{{appointment.duration}}</td>\r\n                    <td class=\"col\">{{appointment.locationType}}</td>\r\n                    <td class=\"col\">{{appointment.description}}</td>\r\n                    <td class=\"col\">{{appointment.userRole}}</td>\r\n                    <td class=\"col\">{{appointment.cancellation }}</td>\r\n                    <td class=\"col\">{{appointment.isDisable}}</td>\r\n                    <td class=\"col-1\">\r\n                        <button class=\"btn btnp ps-1\" type=\"button\" routerLinkActive=\"active\">\r\n                            <span class=\"bi-pencil-square icon-color fs-1\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\"></span>\r\n                        </button>\r\n                        <button class=\"btn btnp me-4\">\r\n                            <span class=\"bi-pencil-square icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Edit\" (click)=\"updateAppointment()\"></span>\r\n                        </button>\r\n                        <!-- <button class=\"btn ps-1\" type=\"button\" data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#errorDelete-modal\">\r\n                            <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                title=\"Delete\" style=\"color: red;\"></span>\r\n                        </button> -->\r\n                        <button class=\"btn btnp me-4\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                            <span class=\"bi-trash icon-color iconFontSize\" data-bs-toggle=\"tooltip\"\r\n                                data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"\r\n                                (click)=\" getDeleteAppoint()\"></span>\r\n                            <!-- Delete -->\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n            <tbody *ngIf=\"appointListRes == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <h5 class=\"text-nowrap\">No Appointment Details Added. Please Add Appointment Details To Be\r\n                            Displayed Here. <span>\r\n                                <a class=\"nav-link\" (click)=\"openDialogAppointment()\">Add Appointment</a>\r\n                            </span></h5>\r\n\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </table>\r\n        <mat-paginator class=\"float-right mt-2\" *ngIf=\"appointListRes.length > 0\" [pageSize]=\"appointmentPageSize\"\r\n            [pageSizeOptions]=\"[5, 10, 20,30]\" [length]=\"totalrow\" [pageIndex]=\"currentPageNo\"\r\n            (page)=\"handlePage($event)\" aria-label=\"Select page\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Appointment? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to delete this Appointment?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AddAppointmentComponent } from './add-appointment/add-appointment.component';\r\nimport { ScheduleAppointmentService } from 'src/app/core/services/schedule-appointment.service';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-appointment-page',\r\n  templateUrl: './appointment-page.component.html',\r\n  styleUrls: ['./appointment-page.component.scss']\r\n})\r\nexport class AppointmentPageComponent implements OnInit {\r\n  public AppointmentList : any = [];\r\n  fileName= 'Appointment.xlsx';\r\n\r\n  public shopID: any;\r\n  public currentPageNo: number = 0;\r\n  public appointmentPageSize: number = 5;\r\n  public pagesize: number = 1;\r\n  public count: number = 0;\r\n  public appointListRes: any = [];\r\n  public totalrow: any;\r\n  \r\n  constructor(public dialog: MatDialog,\r\n    private ScheduleAppointmentService: ScheduleAppointmentService,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n    this.getAppointmentDetails();\r\n\r\n  }\r\n  getAppointmentDetails() {\r\n    this.ScheduleAppointmentService.getAppointTypeList({}, this.shopID, this.appointmentPageSize, (this.currentPageNo + 1)).then((res) => {\r\n      this.appointListRes = res.data.pageData;\r\n      this.totalrow = res.data.totalrows\r\n    })\r\n\r\n  }\r\n  startUpload(){\r\n\r\n  }\r\n  handleInputChange(e){\r\n  }\r\n  openDialogAppointment(){\r\n    const dialogRef: MatDialogRef<AddAppointmentComponent> = this.dialog.open(AddAppointmentComponent, {\r\n      width: '500px',\r\n      height: '730px',\r\n      data: { },\r\n      panelClass: 'custom-dialog-AddAppointment-class',\r\n      disableClose:true,\r\n      // position: {\r\n      //   center: '0',\r\n      // },\r\n      position: {\r\n        right: '0',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });  \r\n}\r\n\r\npublic handlePage(e: any) {\r\n  this.currentPageNo = e.pageIndex;\r\n  this.pagesize = e.pageSize;\r\n  if (this.appointListRes.length > 0) {\r\n    this.appointmentPageSize = e.pageSize;\r\n    this.getAppointmentDetails();\r\n  }\r\n}\r\ngetDeleteAppoint(){\r\n\r\n}\r\nupdateAppointment(){\r\n  \r\n}\r\n \r\n  ExcelDownlod(){\r\n    /* pass here the table id */\r\nlet element = document.getElementById('excel-table');\r\nconst ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\r\n\r\n/* generate workbook and add the worksheet */\r\nconst wb: XLSX.WorkBook = XLSX.utils.book_new();\r\nXLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n/* save to file */  \r\nXLSX.writeFile(wb, this.fileName);\r\n\r\n}\r\n}\r\n","<p>updateappointment works!</p>\r\n<div class=\"modal-header flex d-flex flex-row pt-0\" style=\"justify-content:center; align-items: center;\">\r\n    <h1 style=\"color: #EB8B3F; font-weight: bolder;\" class=\"modal-title mb-1\">Add Appointment</h1>\r\n\r\n    <div class=\"flex d-flex flex-row\" style=\"margin-left: auto;\">\r\n\r\n        <!-- <button style=\"margin-right: 10px !important;\" (click)=\"onclear()\" type=\"button\"\r\n            class=\"btn btn-cancel\">Cancel</button> -->\r\n            <button style=\"margin-right: 10px !important;\" type=\"button\" class=\"btn btn-cancel\" (click)=\"cancel()\">Cancel</button>\r\n\r\n        <button type=\"button\" class=\"btn btn-save\" (click)=\"getAppointmentType()\">Save</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"addAppointmentform\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <label class=\"form-label\">Name</label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Name\" formControlName=\"name\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label class=\"form-label\">Duration</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matInput placeholder=\"Duration\" formControlName=\"duration\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Shop Location</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"LocationType\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.LocationType.invalid && f.LocationType.touched && submitted\r\n                      }\">\r\n                            <mat-option *ngFor=\"let location of locations\" [value]=\"location.shopId\">\r\n                                {{location.tradeName}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>User Role</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-select formControlName=\"UserRole\" [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.UserRole.invalid && f.UserRole.touched && submitted\r\n                  }\">\r\n                            <mat-option *ngFor=\"let userR of userRoles\" [value]=\"userR.userRole\">\r\n                                {{userR.userRole}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Description</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <textarea matInput cols=\"35\" rows=\"4\" placeholder=\"Description\" formControlName=\"Description\"\r\n                            [ngClass]=\"{\r\n                    'is-invalid':\r\n                    f.Description.invalid && f.Description.touched && submitted\r\n                  }\">\r\n                </textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <mat-checkbox formControlName=\"Cancellation\">\r\n                    Cancellation\r\n                </mat-checkbox>\r\n\r\n            </div>\r\n            <div>\r\n                <mat-checkbox formControlName=\"isDisable\">\r\n                    Is Disable\r\n                </mat-checkbox>\r\n                \r\n            </div>\r\n            \r\n            <div class=\"col-sm-12 col-lg-12 col-md-12\">\r\n                <div class=\"mb-1\">\r\n                    <mat-label>Within Days</mat-label>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <input matNativeControl type=\"number\" required matInput formControlName=\"withinDays\"\r\n                            placeholder=\"Enter Days\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\" [ngClass]=\"{\r\n                        'is-invalid':\r\n                        f.withinDays.invalid && f.withinDays.touched && submitted\r\n                      }\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-updateappointment',\r\n  templateUrl: './updateappointment.component.html',\r\n  styleUrls: ['./updateappointment.component.scss']\r\n})\r\nexport class UpdateappointmentComponent implements OnInit {\r\n  public submitted: boolean;\r\n  isActive: boolean;\r\n  public ShopListResponse: any;\r\n\r\n  public addAppointmentform: any;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  shopID: any;\r\n\r\n  locations = [];\r\n\r\n  userRoles = [\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"Admin\"\r\n\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"userRole\": \"User\"\r\n\r\n    }\r\n  ]\r\n  constructor(private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public dialogRef: MatDialogRef<UpdateappointmentComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addAppointmentform = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      duration: ['', Validators.required],\r\n      LocationType: [\"\", [Validators.required]],\r\n      UserRole: [\"\", Validators.required],\r\n      Description: [\"\", Validators.required],\r\n      Cancellation: [false, Validators.required],\r\n      isDisable: [false, Validators.required],\r\n      withinDays: [\"\", [Validators.required]]\r\n    });\r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n   }\r\n  get f() {\r\n    return this.addAppointmentform.controls;\r\n  }\r\n  getAppointmentType(){\r\n    \r\n  }\r\n\r\n  cancel() {\r\n    // Reset the form and submitted flag\r\n    this.addAppointmentform.reset();\r\n    this.submitted = false;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main-shop-shcedule-page',\r\n  templateUrl: './main-shop-shcedule-page.component.html',\r\n  styleUrls: ['./main-shop-shcedule-page.component.scss']\r\n})\r\nexport class MainShopShcedulePageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isLinkActive(route: string): boolean {\r\n    return this.router.isActive(route, true);\r\n  }\r\n}\r\n","<div class=\"component-container container-fluid p-4\">\r\n    <div id=\"navPanel\" class=\"row\">\r\n      <div class=\"navOptions col-xxl-6 col-xl-6 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"row page-nav-link mt-3\">\r\n          <div class=\"col-xxl-1 col-xl-1 col-lg-2 col-md-3 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./shop-details-list\" routerLinkActive=\"active\">Shop Details</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-2 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./appointment-list\" routerLinkActive=\"active\">Appointment</a>\r\n          </div>\r\n          <div class=\"col-xxl-2 col-xl-2 col-lg-3 col-md-4 col-sm-6 links\">\r\n            <a class=\"mt-3 pb-1 ps-1 text-nowrap\" routerLink=\"./time-schedule-list\" routerLinkActive=\"active\">Time Schedule</a>\r\n          </div>\r\n          <div class=\"col-lg-5\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"mt-1\">\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainShopShcedulePageComponent } from './main-shop-shcedule-page/main-shop-shcedule-page.component';\r\nimport { ShopDetailsPageComponent } from './shop-details-page/shop-details-page.component';\r\nimport { AppointmentPageComponent } from './appointment-page/appointment-page.component';\r\nimport { TimeSchedulePageComponent } from './time-schedule-page/time-schedule-page.component';\r\nimport { UpdateShopComponent } from './shop-details-page/update-shop/update-shop.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainShopShcedulePageComponent,\r\n    children: [\r\n      {\r\n        path: '', \r\n        redirectTo: 'shop-details-list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"shop-details-list\",\r\n        component: ShopDetailsPageComponent,\r\n      },\r\n      {\r\n        path: \"appointment-list\",\r\n        component: AppointmentPageComponent,\r\n      },\r\n      {\r\n        path: \"time-schedule-list\",\r\n        component: TimeSchedulePageComponent,\r\n      },\r\n      {\r\n        path: \"edit-trade-details/:id\",\r\n        component: UpdateShopComponent,\r\n      },\r\n    ],\r\n    pathMatch: 'prefix',\r\n    data: {\r\n      routerLinkActiveOptions: { exact: true, pathMatch: 'full' }\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NewShopScheduleRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NewShopScheduleRoutingModule } from './new-shop-schedule-routing.module';\r\nimport { MainShopShcedulePageComponent } from './main-shop-shcedule-page/main-shop-shcedule-page.component';\r\nimport { ShopDetailsPageComponent } from './shop-details-page/shop-details-page.component';\r\nimport { AppointmentPageComponent } from './appointment-page/appointment-page.component';\r\nimport { TimeSchedulePageComponent } from './time-schedule-page/time-schedule-page.component';\r\nimport { AddAppointmentComponent } from './appointment-page/add-appointment/add-appointment.component';\r\nimport { UpdateShopComponent } from './shop-details-page/update-shop/update-shop.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialExampleModule } from 'src/app/material.module';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { AddTimeScheduleComponent } from './time-schedule-page/add-time-schedule/add-time-schedule.component';\r\nimport { UpdateappointmentComponent } from './appointment-page/updateappointment/updateappointment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainShopShcedulePageComponent,\r\n    ShopDetailsPageComponent,\r\n    AppointmentPageComponent,\r\n    TimeSchedulePageComponent,\r\n    AddAppointmentComponent,\r\n    UpdateShopComponent,\r\n    AddTimeScheduleComponent,\r\n    UpdateappointmentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NewShopScheduleRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialExampleModule,\r\n    BsDatepickerModule.forRoot(),\r\n  ]\r\n})\r\nexport class NewShopScheduleModule { }\r\n","<div class=\"row d-flex flex-center\">\r\n  <div class=\"col-md-1 col-lg-6 col-xl-7\"></div>\r\n  <div class=\"col-sm-4 col-md-3 col-lg-3 col-xl-3 mt-2 me-4\">\r\n    <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\">\r\n  </div>\r\n  <div class=\"navOption-btns col-sm-8 col-md-8 col-lg-1 col-xl-1 mt-2 p-0\" style = \"display:flex;justify-content: space-around !important;\">\r\n    <!-- <input type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\" class=\"hidden-input\" />\r\n    <button class=\"btn ms-4 text-nowrap\" ngbTooltip=\"Import Excel\" id=\"uploadFile\">\r\n        <i class=\"fas fa-upload\"></i> Import\r\n    </button>\r\n    <button class=\"btn ms-3 text-nowrap\" ngbTooltip=\"Download\" accept=\".xls,.xlsx\"  id=\"download\"\r\n    onclick=\"location.href = 'https://web.iceipts.com/backend/inventory/parties/downloadParties/';\"><i class=\"fas fa-download\"></i></button> -->\r\n  </div>\r\n</div>\r\n\r\n\r\n<hr class=\"mb-1\">    \r\n    \r\n    <div class=\"table-container \">\r\n        <div class=\"table-div overflow-hidden\" style=\"overflow-x: scroll;\">\r\n            <table class=\"table table-responsive\">\r\n                <thead >\r\n                    <tr>\r\n                        <th class=\"col-1 px-0\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <!-- <input  type=\"checkbox\" class=\"form-check-input px-2\"/> -->\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <span>#</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </th>\r\n                        <th class=\"col-2 text-nowrap\">Trade Name</th>\r\n                        <!-- <th class=\"col-2 text-nowrap\">Legal Name</th> -->\r\n                        <th class=\"col-2 text-nowrap\">Business Type</th>\r\n                        <th class=\"col-1 text-nowrap\">Registered</th>\r\n                        <th class=\"col-2 text-nowrap\">Email</th>\r\n                        <th class=\"col-1 text-nowrap\">Appointments</th>\r\n                        <th class=\"col-1 text-nowrap\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf=\"shops\">\r\n                    <tr class=\"table-body-tr\" *ngFor=\"let shop of ShopListResponse;let i = index\">\r\n                        <td class=\"col-1 px-0\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <!-- <input  type=\"checkbox\" class=\"form-check-input \"/> -->\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <span>{{i+1}}</span>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"col-2\">   \r\n                            {{ shop.client == null ?  'no data' : shop.client.legalName | titlecase }}\r\n                        </td>\r\n                        <!-- <td class=\"col-2\">   \r\n                            {{ shop.client == null ?  'no data' : shop.client.tradeName | titlecase }}\r\n                        </td> -->\r\n                        <td class=\"col-2\">\r\n                            {{ shop.client == null ?  'no data' : shop.client.businessType}}\r\n                            \r\n                        </td>\r\n                        <td class=\"col-1\">\r\n                            {{ shop.client == null ?  'no data' : shop.client.isRegistered}}\r\n                            \r\n                        </td>\r\n                        <td class=\"col-2\">\r\n                            {{ shop.email == \"\" ?  'no data' : shop.email}}\r\n                        </td>\r\n                        <td class=\"col-1\">\r\n                            <button class=\"toggle-button\" (click)=\"toggleActiveStatus(shop.id)\" [ngClass]=\"{'active': shop.isActive, 'inactive': !shop.isActive}\">\r\n                              <div class=\"toggle-slider\"></div>\r\n                            </button>\r\n                        </td>\r\n                        <td class=\"col-1\">\r\n                            <!-- <button class=\"btn btnp ps-1\" type=\"button\" routerLinkActive=\"active\">\r\n                                <span class=\"bi-pencil-square icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Edit\" routerLink=\"/pages/shop-schedule-page/edit-trade-details/{{shop.id}}\"></span>\r\n                              </button>\r\n                              \r\n                              <button class=\"btn ps-1\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#errorDelete-modal\">\r\n                                <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\" style=\"color: red;\"></span>\r\n                              </button> -->\r\n                        </td>\r\n                    </tr>\r\n                </tbody> \r\n\r\n                <tbody *ngIf=\"ShopListResponse == 0\">\r\n                    <tr class=\"text-center\">\r\n                        <td colspan=\"10\">\r\n                            <h5 class=\"text-nowrap\">No Shops Details Added. Please Add  Shops Details To Be Displayed Here. <span>\r\n                                <a class=\"nav-link\" routerLink=\"/pages/profile-settings\">Add New Tade</a>\r\n                            </span></h5>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Ṃultiple Delete -->\r\n    <!-- <div class=\"modal fade\" id=\"errorDeleteSelect-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n            <div class=\"modal-content position-relative\">\r\n                <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                    <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                        aria-label=\"Close\"></a>\r\n                </div>\r\n                <div class=\"modal-body p-0\">\r\n                    <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                        <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                            Delete Parties? </h2>\r\n                    </div>\r\n                    <h4 *ngIf=\"isChecked \" class=\"text-center \">Are you sure to delete all employees?</h4>\r\n                    <h4 *ngIf=\"!isChecked \" class=\"text-center \">Are you sure to delete all selected employees?</h4>\r\n    \r\n                </div>\r\n                <div class=\"modal-footer justify-content-center\">\r\n                    <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                    <a *ngIf=\"isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"multipleEmployeeDel()\">Continue</a>\r\n                    <a *ngIf=\"!isChecked \" class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\" (click)=\"multipleEmployeeDel()\">Continue</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n\r\n    <!-- Signle Delete  -->\r\n    <div class=\"modal fade\" id=\"errorDelete-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"max-width: 350px\">\r\n        <div class=\"modal-content position-relative\">\r\n            <div class=\"position-absolute top-0 end-0 mt-2 me-2 z-index-1\">\r\n                <a class=\"btn-close btn btn-sm btn-circle d-flex flex-center transition-base\" data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"></a>\r\n            </div>\r\n            <div class=\"modal-body p-0\">\r\n                <div class=\"rounded-top-lg py-3 ps-4 pe-6 bg-light\">\r\n                    <h2 class=\"mb-1 text-center font-weight-bold\" style=\"font-weight: 800; \" id=\"modalExampleDemoLabel\">\r\n                        Delete Shop? </h2>\r\n                </div>\r\n                <h4 class=\"text-center \">Are you sure to delete this shop?</h4>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a class=\"btn btn-outline-success\" data-bs-dismiss=\"modal\">Close</a>\r\n                <a class=\"btn btn-outline-danger\" data-bs-dismiss=\"modal\">Delete\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ScheduleShopService } from 'src/app/core/services/schedule-shop.service';\r\nimport { ToastNotificationService } from 'src/app/core/services/toast-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-shop-details-page',\r\n  templateUrl: './shop-details-page.component.html',\r\n  styleUrls: ['./shop-details-page.component.scss']\r\n})\r\nexport class ShopDetailsPageComponent implements OnInit {\r\n\r\n  shops=[\r\n    {\r\n      \"id\":1,\r\n      \"email\": \"demo21@gmail.com\",\r\n      \"mobile\": \"8783459890\",\r\n      \"firstName\": \"john\",\r\n      \"lastName\": \"hi\",\r\n      \"parentId\": \"478d3543-d30d-43f2-9559-a080f7b93025\",\r\n      \"isRegistered\": true,\r\n      \"legalName\": \"NH_SHOP\",\r\n      \"accountMethod\": \"Accounts With Stock Management\",\r\n      \"businessType\": \"Proprietorship\",\r\n      \"gstinNo\": \"22\",\r\n      \"gstType\": \"Regular\",\r\n      \"compositeType\": \"Trader\",\r\n      \"homeno\": \"2\",\r\n      \"pincode\": \"390011\",\r\n      \"address\": \"10,abcd road\",\r\n      \"city\": \"vadodara\",\r\n      \"district\": \"vadodara\",\r\n      \"landmark\": \"vadodara\",\r\n      \"state\": \"GUJARAT\",\r\n      \"country\": \"INDIA\"\r\n    }  \r\n  ]\r\n\r\n  public shopForm: FormGroup;\r\n  public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  public ShopListResponse:any;\r\n  isActive: boolean;\r\n\r\n  constructor(private formBuilder:FormBuilder ,private ScheduleShopService:ScheduleShopService,private toastService:ToastNotificationService,\r\n    private titleCasePipe: TitleCasePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getShopList();\r\n  }\r\n\r\n  getShopList(){\r\n    this.ScheduleShopService.getShopList({},this.currentUser.id).then((res) => {\r\n      if(res.data.rows){\r\n        this.ShopListResponse = res.data.rows;\r\n        this.isActive = res.data.rows.map(data => {\r\n          data.isActive\r\n        })\r\n        console.log(this.ShopListResponse)\r\n      }\r\n    },(err)=>{\r\n      if(err.error.expose){\r\n        this.ShopListResponse = [];\r\n        this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n      }\r\n      else{\r\n        this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleActiveStatus(shopId) {\r\n    const shopToUpdate = this.ShopListResponse.find(shop => shop.id === shopId);\r\n\r\n    const updatedShop = { ...shopToUpdate, isActive: !shopToUpdate.isActive }; // Create a copy and toggle isActive\r\n    \r\n    this.ScheduleShopService.UpdateShopDetails(updatedShop, shopId).then(\r\n      (res : any) => {\r\n        if(res.success){\r\n          console.log('Shop updated successfully.')\r\n          this.getShopList()\r\n        }\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"container-fluid pt-3 bg-white\">\r\n    <div class=\"fixed-nav-panel row\">\r\n        <div class=\"nav-panel-header col-lg-4\">\r\n            <h2>Update Trade Name</h2>\r\n        </div>\r\n        <div class=\"nav-panel-actions col-lg-8\">\r\n            <div class=\"nav-panel-btns row\">\r\n                <div class=\"col-sm-6\"></div>\r\n                <div class=\"col-lg-2 d-grid\">\r\n                    <button mat-raised-button class=\"text-nowrap\" style=\"border: 1px solid #000;\"\r\n                    *appHasPermission=\"['modify']; name 'profile'\">Cancel</button>\r\n                </div>\r\n                <div class=\"col-lg-3 d-grid\">\r\n                    <button mat-raised-button class=\"text-nowrap text-light\" style=\"background: #a0a0a0;\" type=\"button\"\r\n                    *appHasPermission=\"['modify']; name 'profile'\" (click)=\"UpdateNewShop()\">Save Changes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<hr style=\"background-color: black;font-weight: bold;\">\r\n    <form [formGroup]=\"ProfileForm\" autocomplete=\"off\">\r\n        <div class=\"profile-options row\">\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 pe-4\">\r\n                <div class=\"row mb-5\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Admin Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required formControlName=\"firstName\" maxLength=\"50\"\r\n                            placeholder=\"First Name\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group col-sm-12 col-md-6\">\r\n                        <mat-label>Email Address</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"email\" readonly matInput required formControlName=\"email\"\r\n                                placeholder=\"Email\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"form-group col-sm-12 col-md-6\">\r\n                        <mat-label>Mobile Number</mat-label>\r\n                        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\r\n                            <input type=\"text\" matInput formControlName=\"mobile\" minlength=\"10\" maxlength=\"10\"\r\n                                placeholder=\"Mobile Number\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>GSTIN</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput formControlName=\"gstinNo\"\r\n                                (keyup)=\"validateGSTIN($event.target.value)\" maxlength=\"15\" #input1\r\n                                placeholder=\"GSTIN\" (input)=\"input1.value=$event.target.value.toUpperCase()\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"(ProfileForm.get('businessType').value =='Private Limited Company' || ProfileForm.get('businessType').value =='Public Limited Company') && isShown\">\r\n                        <mat-label>CIN</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"cinNumber\"\r\n                                (keyup)=\"validatecinNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\" placeholder=\"CIN\">\r\n                        </mat-form-field>\r\n                        <mat-error\r\n                            *ngIf=\"f.cinNumber.invalid && (f.cinNumber.dirty || f.cinNumber.touched)\"\r\n                            class=\"invalid-feedback\">\r\n                            <mat-error *ngIf=\"f.cinNumber.errors?.required\"> CINI is Required!</mat-error>\r\n                            <mat-error class=\"text-danger\"\r\n                                *ngIf=\"(submitted || f.cinNumber.touched) && f.cinNumber.errors?.pattern\">\r\n                                CIN pattern is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"ProfileForm.get('businessType').value =='Proprietorship' || ProfileForm.get('businessType').value =='Hindu Undivided Family' && isShown\">\r\n                        <mat-label>Legal Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput type=\"text\" formControlName=\"legalName\"\r\n                                placeholder=\"Legal Name\" [ngClass]=\"{\r\n                                    'is-invalid': (f.legalName.invalid && f.legalName.touched) && submitted }\" requied>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors\">\r\n                            Legal name must be in Alphabets\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.legalName.touched) && f.legalName.errors?.required\">\r\n                            Legal Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>PAN Number</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"panNumber\" placeholder=\"PAN\"\r\n                                (keyup)=\"validatepanNumber($event.target.value)\" #input1\r\n                                (input)=\"input1.value=$event.target.value.toUpperCase()\">\r\n                        </mat-form-field>\r\n                        <mat-error style=\"font-weight: 400; font-size: 11px; \"\r\n                            *ngIf=\"f.panNumber.invalid && (f.panNumber.dirty || f.panNumber.touched)\"\r\n                            class=\"invalid-feedback\">\r\n                            <mat-error *ngIf=\"f.panNumber.errors?.required\"> PAN Number Is Required!</mat-error>\r\n                            <mat-error class=\"text-danger\"\r\n                                *ngIf=\"(submitted || f.panNumber.touched) && f.panNumber.errors?.pattern\">\r\n                                PAN pattern is Required!\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"row mb-3\">\r\n                    \r\n                </div> -->\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Financial Year Start From</mat-label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput ngModel bsDatepicker placeholder=\"Financial Year From\" [maxDate]=\"today\"\r\n                                formControlName=\"financialYearFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue', \r\n                          dateInputFormat: 'DD MMM YYYY',\r\n                          showWeekNumbers:false }\"\r\n                                [ngClass]=\"{\r\n                            'is-invalid': (f.financialYearFrom.invalid && f.financialYearFrom.touched) && submitted }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.financialYearFrom.touched) && f.financialYearFrom.errors?.required\">\r\n                            financialYearFrom is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Book Beginning From</mat-label>\r\n                        <mat-form-field style=\"font-size: 12px\" class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matInput ngModel bsDatepicker placeholder=\"Book Beginning From\"\r\n                                formControlName=\"bookBeginningFrom\" style=\"text-transform:uppercase!important;\"\r\n                                bsDatepicker [bsConfig]=\"{\r\n                          containerClass: 'theme-dark-blue', \r\n                          dateInputFormat: 'DD MMM',\r\n                          showWeekNumbers:false }\">\r\n                            <span>\r\n                                <mat-icon class=\"iconcalender\">date_range</mat-icon>\r\n                            </span>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12\">\r\n                        <mat-label for=\"billingAddress\">Billing Address</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <textarea matNativeControl matInput required type=\"text\" formControlName=\"address\" row=\"2\"\r\n                                placeholder=\"Billing Address\" [ngClass]=\"{\r\n                                'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required></textarea>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                            Billing Address is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Pincode</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input type=\"text\" matInput required maxlength=\"6\" minlength=\"6\" name=\"pincodetxt\"\r\n                                id=\"pincodetxt\" formControlName=\"pincode\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                                (change)=\"getPincodeDetails($event.target.value)\">\r\n\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                            Pincode is Required!\r\n                        </mat-error>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                            Pincode should be only digits\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>State</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput\r\n                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                    'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                            State is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>City</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                            placeholder=\"City\" [ngClass]=\"{\r\n                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                            District is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Country</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                placeholder=\"Country\" [ngClass]=\"{\r\n                                'is-invalid': (f.country.invalid && f.country.touched) && submitted }\" required>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"card mb-3\" *appHasPermission=\"['read']; name: 'profile'\">\r\n                    <form [formGroup]=\"addressForm\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:18px!important;\">Add multiple Business Addresses</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                            <div formArrayName=\"addresses\" *ngFor=\"let item of addressControls.controls; let i = index\">\r\n                                <div [formGroupName]=\"i\" class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input type=\"text\" matInput required\r\n                                                (input)=\"getPincodeDetailsForAdditionalAddress($event.target.value,i)\" maxlength=\"6\"\r\n                                                minlength=\"6\" formControlName=\"pincode\" placeholder=\"Pincode\" [ngClass]=\"{\r\n                                                    'is-invalid': (f.pincode.invalid && f.pincode.touched) && submitted }\"\r\n                                                value=\"\">\r\n                                        </mat-form-field>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.required\">\r\n                                            Pincode is Required !\r\n                                        </mat-error>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.pincode.touched) && f.pincode.errors?.pattern\">\r\n                                            Pincode should be only digits.\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>State</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput\r\n                                                formControlName=\"state\" name=\"pintxt\" id=\"pintxt\" placeholder=\"State\" [ngClass]=\"{\r\n                                                'is-invalid': (f.state.invalid && f.state.touched) && submitted }\" value=\"\">\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.state.touched) && f.state.errors?.required\">\r\n                                            State is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>District</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\"\r\n                                                placeholder=\"District\" [ngClass]=\"{\r\n                                                'is-invalid': (f.district.invalid && f.district.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.district.touched) && f.district.errors?.required\">\r\n                                            District is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"country\"\r\n                                                placeholder=\"Country\" [ngClass]=\"{\r\n                                            'is-invalid': (f.country.invalid && f.country.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.country.touched) && f.country.errors?.required\">\r\n                                            Country is Required!\r\n                                        </mat-error>\r\n            \r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\"\r\n                                                placeholder=\"Town/City\" [ngClass]=\"{\r\n                                            'is-invalid': (f.city.invalid && f.city.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.city.touched) && f.city.errors?.required\">\r\n                                            Town/City is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>House No</mat-label>\r\n                                         <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\"\r\n                                                placeholder=\"House No,Apartment,Building,Company\" [ngClass]=\"{\r\n                                            'is-invalid': (f.homeno.invalid && f.homeno.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.homeno.touched) && f.homeno.errors?.required\">\r\n                                            House No is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"address\"\r\n                                                placeholder=\"Area\" [ngClass]=\"{\r\n                                            'is-invalid': (f.address.invalid && f.address.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n            \r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.address.touched) && f.address.errors?.required\">\r\n                                            Area, Street, Sector, Village is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n            \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\"\r\n                                                placeholder=\"Landmark\" [ngClass]=\"{\r\n                                                'is-invalid': (f.landmark.invalid && f.country.touched) && submitted }\" required>\r\n                                        </mat-form-field>\r\n                                        <mat-error class=\"text-danger\"\r\n                                            *ngIf=\"(submitted || f.landmark.touched) && f.landmark.errors?.required\">\r\n                                            Landmark is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"offset-3 col-9 ml-10\">\r\n                                        <div class=\"d-flex justify-content-end row\">\r\n                                            <div *ngIf=\"item.value.id\">\r\n                                                <a class=\"col-6 btn btn-cancel margin-right mb-1\" (click)=\"deleteAddress(item)\"\r\n                                                    style=\"margin-right: 10px\">Cancel\r\n                                                </a>\r\n                                                \r\n                                                <a class=\"col-6 btn btn-save margin-right mb-1\" \r\n                                                    *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                                    (click)=\"updateMultipleAddress(item)\">\r\n                                                    Update\r\n                                                </a>\r\n                                            </div>\r\n                                            <div>\r\n                                                <a class=\"btn btn-outline-warn margin-right\" *ngIf=\"!item.value.id\"\r\n                                                    (click)=\"deleteAddressForm(i)\" style=\"margin-right: 10px\">\r\n                                                    -\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n            \r\n                            <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-end\">\r\n                                <a class=\"btn btn-cancel margin-right\" (click)=\"addAddress()\">\r\n                                    +\r\n                                </a>\r\n            \r\n                                <button mat-flat-button class=\"btn btn-save\" *appHasPermission=\"['modify']; name: 'profile'\"\r\n                                    (click)=\"addMultipleAddress()\">\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"profile-details col-sm-12 col-md-6 col-lg-6 ps-4\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Tax Payer Type</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering formControlName=\"gstType\"\r\n                                placeholder=\"GST Type\" [ngClass]=\"{\r\n                                    'is-invalid': (f.gstType.invalid && f.gstType.touched) && submitted }\"\r\n                                [disabled]=\"!isDisabledGST\">\r\n                                <mat-option value=\"Regular\">Regular</mat-option>\r\n                                <mat-option value=\"Composite\">Composite\r\n                                </mat-option>\r\n                                <mat-option value=\"Exempted\">Exempted</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.gstType.touched) && f.gstType.errors?.required\">\r\n                            Tax Payer Type is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\"> -->\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Trade Name</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <input matNativeControl matInput formControlName=\"tradeName\" placeholder=\"Trade Name\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.tradeName.invalid && f.tradeName.touched) && submitted }\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.tradeName.touched) && f.tradeName.errors?.required\">\r\n                            Trade Name is Required!\r\n                        </mat-error>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown && ProfileForm.get('gstType').value =='Composite'\">\r\n                        <mat-label>Composition Dealer *</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering\r\n                                placeholder=\"Composition Dealer\">\r\n                                <mat-option value=\"Manufacturer & Trader (Goods)\">Manufacturer & Trader (Goods)</mat-option>\r\n                                <mat-option value=\"Restaurant (Not Serving Alcohol)\">Restaurant (Not Serving Alcohol)\r\n                                </mat-option>\r\n                                <mat-option value=\"Service\">Service</mat-option>\r\n                                <mat-option value=\"Manufacturers of Bricks\">Manufacturers of Bricks</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Constitution of Business</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select formControlName=\"businessType\" matNativeControl matInput disableOptionCentering\r\n                                placeholdeer=\"Constitution of Business\" [disabled]=\"!isDisabledGST\"\r\n                                [ngClass]=\"{\r\n                                    'is-invalid': (f.businessType.invalid && f.businessType.touched) && submitted }\">\r\n                                <mat-option *ngFor=\"let item of cosntBusiness\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessType.touched) && f.businessType.errors?.required\">\r\n                            Constitution of Business is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-6\">\r\n                        <mat-label>Account Method</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering required formControlName=\"accountMethod\"\r\n                                placeholdeer=\"Constitution of Business\" [ngClass]=\"{\r\n                                    'is-invalid': (f.accountMethod.invalid && f.accountMethod.touched) && submitted }\"\r\n                                required>\r\n                                <mat-option value=\"Accounts\">Only Accounts</mat-option>\r\n                                <mat-option value=\"Accounts With Stock Management\">Accounts With Stock Management</mat-option>\r\n                                <!-- <option value=\"Both\">Both</option> -->\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.accountMethod.touched) && f.accountMethod.errors?.required\">\r\n                            Account Method is Required!\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Business Type(Select multiple, if applicable)</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-select matNativeControl matInput disableOptionCentering formControlName=\"businessNature\" multiple\r\n                            [ngClass]=\"{'is-invalid': (f.businessNature.invalid && f.businessNature.touched) && submitted }\" required>\r\n                                <mat-option *ngFor=\"let type of typeList\" [value]=\"type.id\">{{type.businessType}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>  \r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || f.businessNature.touched) && f.businessNature.errors?.required\">\r\n                            Business Type is Required!\r\n                        </mat-error>                      \r\n                    </div>\r\n                    \r\n                    <div class=\"col-sm-12 col-md-6\" *ngIf=\"isShown\">\r\n                        <mat-label>Business Category</mat-label>\r\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                            <mat-chip-list #chipList aria-label=\"category selection\" [multiple]=\"true\">\r\n                                <mat-chip *ngFor=\"let category of categoryName\" [selectable]=\"category=='Education'\"\r\n                                    [removable]=\"removable\" (removed)=\"remove(category)\">\r\n                                    {{category}}\r\n                                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                                </mat-chip>\r\n                                <input placeholder=\"Business Category\" #categoryInput\r\n                                    #autocompleteTrigger=\"matAutocompleteTrigger\" [formControl]=\"categoryCtrl\"\r\n                                    [matAutocomplete]=\"auto\" [matChipInputFor]=\"chipList\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    (matChipInputTokenEnd)=\"add($event)\" [ngClass]=\"{\r\n                                        'is-invalid': (categoryCtrl.invalid && categoryCtrl.touched) && submitted }\" required>\r\n                            </mat-chip-list>\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n                                <mat-option *ngFor=\"let item of filteredCategory | async\" [value]=\"item.id\"\r\n                                    (onSelectionChange)=\"getCategoryId(item)\">\r\n                                    <mat-checkbox color=\"primary\" style=\"padding: 0 12px;\"\r\n                                        [checked]=\"categoryName.indexOf(item.category) >=0\"></mat-checkbox>\r\n                                    {{item.category}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <a mat-icon-button matSuffix style=\"width: 34px; height: 34px;\"\r\n                                (click)=\"openAuto(autocompleteTrigger)\">\r\n                                <mat-icon style=\"width: 34px;\">expand_more</mat-icon>\r\n                            </a>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"text-danger\"\r\n                            *ngIf=\"(submitted || categoryCtrl.touched) && categoryCtrl.errors?.required\">\r\n                            Category is Required!\r\n                        </mat-error>                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"card mb-3\" *ngIf=\"showAdditionalFields\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:16px!important;\">Add Additional Place of Business</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                            <form [formGroup]=\"businessPlaceAdd\" (ngSubmit)=\"addPlaceOfBusiness()\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input type=\"text\" matInput required formControlName=\"pincode\" placeholder=\"Pincode\">\r\n                                        </mat-form-field>\r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>State</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput type=\"text\" ngxOnlyString required formControlName=\"state\" placeholder=\"State\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>District</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"district\" placeholder=\"District\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl type=\"text\" matInput required formControlName=\"country\" placeholder=\"Country\">\r\n                                        </mat-form-field>\r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"city\" placeholder=\"City\">\r\n                                        </mat-form-field>\r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>House No</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"homeno\" placeholder=\"House No, Apartment, Building, Company\">\r\n                                        </mat-form-field>\r\n                        \r\n                        \r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"areaStreet\" placeholder=\"Area\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                        \r\n                                    <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                            <input matNativeControl matInput required type=\"text\" formControlName=\"landmark\" placeholder=\"Landmark\">\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <!-- Add a submit button -->\r\n                                    <div class=\"d-flex justify-content-end\">\r\n                                        <button type=\"submit\" mat-flat-button class=\"btn btn-save\">Add Address</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Add additional Trade Name -->\r\n                    <div class=\"card mb-3\" *ngIf=\"showAdditionalFields\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"mb-0\" style=\"font-weight:500;font-size:18px!important;\">Add Addtional Trade Name</h4>\r\n                        </div>\r\n                        <div class=\"card-body bg-light\">\r\n                    \r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Additional Trade Name </mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            placeholder=\"Additional Trade Name \">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Address</mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            formControlName=\"address\" placeholder=\"Additional Trade Name \">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Add Addtional Place of Business</mat-label>\r\n                                        <input matNativeControl matInput type=\"text\" ngxOnlyString required matInput\r\n                                            formControlName=\"additionalplaces\" placeholder=\"Add Addtional Place of Business\">\r\n                                    </mat-form-field>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <h3 style=\"font-weight:500;\">ADDRESS</h3>\r\n                            </div>\r\n                    \r\n                            <div class=\"row\">\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <input type=\"text\" matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>State</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>District</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <input matNativeControl matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>House No, Apartment, Building, Company</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                            <div class=\"row\">\r\n                                <h3 style=\"font-weight:500;\">Add Addtional Place of Business</h3>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Pincode</mat-label>\r\n                                        <input type=\"text\" matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>State</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\" ngxOnlyString required matInput>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>District</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Country</mat-label>\r\n                                        <input matNativeControl matInput required>\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Town/City</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>House No, Apartment, Building, Company</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                    \r\n                    \r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Area, Street, Sector, Village</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                    \r\n                                <div class=\"col-sm-12 col-md-4 col-lg-4 \">\r\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                        <mat-label>Landmark</mat-label>\r\n                                        <input matNativeControl matInput required type=\"text\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-sm-12 col-md-12\">\r\n                        <div class=\"notes-section\">\r\n                            <p class=\"notes-textarea text-black\" style=\"background: #e4e3e6;\">\r\n                                <b>Note:</b> Terms & condition and Signature added below will be shown on your invoices.\r\n                            </p>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-12\">\r\n                        <div class=\"terms-section\">\r\n                            \r\n                          </div>\r\n                          <label class=\"form-label\">Terms & Conditions</label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <textarea matInput required rows=\"3\" placeholder=\"Terms & Conditions\"\r\n                       >\r\n                       1. Goods once sold will not be taken back or exchanged.\r\n                       1. Goods once sold will not be taken back or exchanged.</textarea>\r\n                </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </form>\r\n\r\n</div>\r\n","import { TitleCasePipe, formatDate } from \"@angular/common\";\r\n  import { Component, ElementRef, OnInit, ViewChild,AfterViewInit, ChangeDetectorRef, OnChanges, SimpleChanges } from \"@angular/core\";\r\n  import {\r\n    FormArray,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators,\r\n  } from \"@angular/forms\";\r\n  import { ActivatedRoute, Router } from \"@angular/router\";\r\n  import { ProfileService } from \"src/app/core/services/profile.service\";\r\n  import { ToastNotificationService } from \"src/app/core/services/toast-notification.service\";\r\n  import {\r\n    MatAutocomplete,\r\n    MatAutocompleteSelectedEvent,\r\n    MatAutocompleteTrigger,\r\n  } from \"@angular/material/autocomplete\";\r\n  import { Observable, pipe } from \"rxjs\";\r\n  import { map, startWith } from \"rxjs/operators\";\r\n  import { MatChipInputEvent } from \"@angular/material/chips\";\r\n  import { COMMA, ENTER } from \"@angular/cdk/keycodes\";\r\n  import * as moment from \"moment\";\r\n  import { createFalse } from \"typescript\";\r\n  import { log } from \"console\";\r\n  import { PartyService } from \"src/app/core/services/party.service\";\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  import { ScheduleShopService } from \"src/app/core/services/schedule-shop.service\";\r\n  \r\n  interface IRange {\r\n    value: Date[];\r\n    label: string;\r\n  }\r\n@Component({\r\n  selector: 'app-update-shop',\r\n  templateUrl: './update-shop.component.html',\r\n  styleUrls: ['./update-shop.component.scss']\r\n})\r\nexport class UpdateShopComponent implements OnInit {\r\n\r\n    public dragging: boolean = false;\r\n    public loaded: boolean = false;\r\n    public imageLoaded: boolean = false;\r\n    public activeColor: string = 'green';\r\n    public baseColor: string = '#ccc';\r\n    public signImg: any = '';\r\n    public profilePic: any = '';\r\n    public overlayColor: string = 'rgba(255,255,255,0.5)';\r\n    partners: any[] = [];\r\n  \r\n    ranges: IRange[] = [\r\n      {\r\n        value: [\r\n          new Date(new Date().setDate(new Date().getDate() - 7)),\r\n          new Date(),\r\n        ],\r\n        label: \"Last 7 Days\",\r\n      },\r\n      {\r\n        value: [\r\n          new Date(new Date().setDate(new Date().getMonth() - 1)),\r\n          new Date(),\r\n        ],\r\n        label: \"Last Month\",\r\n      },\r\n    ];\r\n    today: Date;\r\n    maxDate: Date;\r\n    public typeList = [];\r\n    public value: any;\r\n    public currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    public data: any;\r\n    public ProfileForm: FormGroup;\r\n    public TradeForm:FormGroup;\r\n    public addressForm: FormGroup;\r\n    public businessForm: FormGroup;\r\n    public dateRange: FormGroup;\r\n    public updated: boolean = false;\r\n    public submitted: boolean;\r\n    public date = new Date();\r\n    public addressId: string = \"\";\r\n    public additionalPlaceOfBusiness: FormArray;\r\n    public addressLength;\r\n    public pinDetails: any;\r\n    public gstDetails: any;\r\n    public finalAddress: any;\r\n    public pin: any;\r\n    public businessNature: any = [];\r\n    public compositeType: boolean = false;\r\n    public isShown: boolean = true;\r\n    public mobileOtp: any;\r\n    public visible = true;\r\n    public selectable = true;\r\n    public removable = true;\r\n    public separatorKeysCodes: number[] = [ENTER, COMMA];\r\n    public categoryCtrl = new FormControl();\r\n    public filteredCategory: Observable<string[]>;\r\n    public categoryBusiness: any = [];\r\n    public categoryName: any = [];\r\n    public categoryId: any = [];\r\n    public opened = false;\r\n    public isDisabledGST: boolean = true;\r\n    public addressArray = [];\r\n    public partenerAray=[]\r\n    public businessType: any;\r\n    public constitutionBusinessType: any;\r\n    public legTrad: boolean = false;\r\n    public cinFlag: boolean = false;\r\n    public partnerSubmitted=false\r\n    partnerDetails: any[] = [];\r\n    additionaDetailsData: any[] = [];\r\n    public cosntBusiness = [\r\n      \"Proprietorship\",\r\n      \"Partnership\",\r\n      \"Private Limited Company\",\r\n      \"Public Limited Company\",\r\n      \"Limited Liability Partnership\",\r\n      \"Hindu Undivided Family\"\r\n    ];\r\n    @ViewChild(\"categoryInput\") categoryInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild(\"auto\") matAutocomplete: MatAutocomplete;\r\n    @ViewChild(\"autocompleteTrigger\") matACTrigger: MatAutocompleteTrigger;\r\n    serachByCategory: any;\r\n    public ischecked: boolean = false;\r\n    signatureData: string;\r\n    imgNumber: any;\r\n    showUploadInput: boolean = false;\r\n    public imageSrc: any = \"\";\r\n    profileImage: File;\r\n    signatureImage: File;\r\n    showAdditionalFields = false;\r\n    editedRowIndex: number = -1;  //to store the index of the currently edited row\r\n    additionaList: any[] = [];\r\n    businessPlaceAdd: FormGroup;\r\n    shopId: any;\r\n    isFirstChange: boolean = true;\r\n    // showAdditionalFields = false;\r\n    // @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n  \r\n    constructor(\r\n      public profileService: ProfileService, public partyService: PartyService, public scheduleShopService: ScheduleShopService,\r\n      public fb: FormBuilder, private cdr: ChangeDetectorRef,\r\n      public router: Router, private route: ActivatedRoute,\r\n      private toastService: ToastNotificationService, private titleCasePipe: TitleCasePipe,\r\n      private dialog: MatDialog\r\n    ) {\r\n      this.today = new Date();\r\n      this.maxDate = new Date(\r\n        this.today.getFullYear(),\r\n        this.today.getMonth(),\r\n        25\r\n      );\r\n  \r\n      // this.today = new Date();\r\n      // this.maxDate = new Date(this.today.getFullYear(), this.today.getMonth(), 25)\r\n    }\r\n  \r\n    async ngOnInit() {\r\n      //form for profile data\r\n      try {\r\n        this.TradeForm =this.fb.group({\r\n    \r\n        })\r\n\r\n        // Get the shop ID from the route parameters\r\n        this.route.params.subscribe(params => {\r\n          this.shopId = params['id'];\r\n        });\r\n        // Update the position based on the default value\r\n        // this.businessForm.get('position')?.valueChanges.subscribe(value => {\r\n        //   if (value === 'Partner') {\r\n        //     this.businessForm.get('position')?.setValue('Managing Partner');\r\n        //   }\r\n        // });\r\n  \r\n        this.ProfileForm = this.fb.group({\r\n          firstName: [{value: \"\", disabled: true}],\r\n          legalName: [{value: \"\", disabled: true}],\r\n          businessType: [{value: \"\", disabled: true}],\r\n          email: [{value: \"\", disabled: true}],\r\n          mobile: [{value: \"\", disabled: true}],\r\n          gstType: [{value: \"\", disabled: true}],\r\n          gstStatus: [{value: \"\", disabled: true}],\r\n          gstinNo: [{value: \"\", disabled: true}],\r\n          state: [\"\", [Validators.required]],\r\n          city: [\"\", [Validators.required]],\r\n          pincode: [\"\", [Validators.required]],\r\n          district: [\"\", [Validators.required]],\r\n          landmark: [\"\"],\r\n          country: [\"\", [Validators.required]],\r\n          homeno: [\"\", ],\r\n          // homeno: [\"\", [Validators.required]],\r\n          address: [\"\", [Validators.required]],\r\n          accountMethod: [{value: \"\", disabled: true}],\r\n          compositeType: [{value: \"\", disabled: true}],\r\n          businessNature: [\"\"],\r\n          panNumber: [{value: \"\", disabled: true}],\r\n          tradeName: [\"\",  [Validators.required]],\r\n          financialYearFrom: [{value: \"\", disabled: true}],\r\n          bookBeginningFrom: [{value: \"\", disabled: true}],\r\n          cinNumber: [{value: \"\", disabled: true}],\r\n          profileImage: [null],\r\n          signatureImage: [null],\r\n          // profileImage : this.imageSrc,\r\n          // signatureImage : this.imageSrcSeven,\r\n        });\r\n        this.getType();\r\n  \r\n        this.getBusinessCategory();\r\n        //calling get data api for profile\r\n        this.getTradeDetails();\r\n  \r\n        //form for multiple address\r\n        this.addressForm = this.fb.group({\r\n          addresses: new FormArray([]),\r\n        });\r\n  \r\n        // For Additional place of Business \r\n        this.businessPlaceAdd = this.fb.group({\r\n          pincode: ['', Validators.required],\r\n          state: ['', Validators.required],\r\n          district: ['', Validators.required],\r\n          country: ['', Validators.required],\r\n          city: ['', Validators.required],\r\n          homeno: ['', Validators.required],\r\n          address: ['adress'],\r\n          areaStreet: ['', Validators.required],\r\n          landmark: ['', Validators.required],\r\n        });\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  \r\n    ngAfterViewInit() {\r\n      setTimeout(() => {\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n\r\n    toggleAdditionalFields() {\r\n      this.showAdditionalFields = !this.showAdditionalFields;\r\n    }\r\n  \r\n    validatecinNumber(cin) {\r\n      let cinNo = cin.toUpperCase();\r\n      var regex =\r\n        /^([L|U]{1})([0-9]{5})([A-Za-z]{2})([0-9]{4})([A-Za-z]{3})([0-9]{6})$/;\r\n  \r\n      if (regex.test(cinNo)) {\r\n      } else {\r\n        this.ProfileForm.controls.cinNumber.setErrors({ incorrect: true });\r\n      }\r\n    }\r\n  \r\n    validatepanNumber(pan) {\r\n      let panNo = pan.toUpperCase();\r\n      var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}/;\r\n  \r\n      if (regex.test(panNo)) {\r\n      } else {\r\n        this.ProfileForm.controls.panNumber.setErrors({ incorrect: true });\r\n      }\r\n    }\r\n    validateGSTIN(GSTIN) {\r\n      let gstNumber = GSTIN.toUpperCase();\r\n      var regex =\r\n        /^([0][1-9]|[1-2][0-9]|[3][0-7])([a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9a-zA-Z]{1}[zZ]{1}[0-9a-zA-Z]{1})+$/;\r\n      if (gstNumber.length == 15) {\r\n        if (regex.test(gstNumber)) {\r\n          //this.ProfileForm.controls.gstinNo.setErrors({'incorrect': false});\r\n          this.getGstNumber(gstNumber);\r\n          //this.setGSTINError = false\r\n        } else {\r\n          this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n          // this.setGSTINError = true;\r\n        }\r\n        // this.businessDetailsForm.controls.gstNumber.setErrors({'incorrect': true});\r\n      } else {\r\n        this.ProfileForm.controls.gstinNo.setErrors({ incorrect: true });\r\n        // this.setGSTINError = true;\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * get gst type\r\n     * @param gstType\r\n     */\r\n    \r\n    /**\r\n     * Get Controls of FormArray\r\n     */\r\n    get addressControls() {\r\n      return this.addressForm.get(\"addresses\") as FormArray;\r\n    }\r\n   \r\n  \r\n    addAddress(): void {\r\n      try{\r\n        const data = this.addressForm.get(\"addresses\") as FormArray;\r\n        this.cdr.detectChanges();\r\n        if (data) {\r\n          data.push(this.createAddress());\r\n        }\r\n      } catch {\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Delete array index from FormArray\r\n     * @param index\r\n     */\r\n    deleteAddressForm(index): void {\r\n      const data = this.addressForm.get(\"addresses\") as FormArray;\r\n      data.removeAt(index);\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Add index to FormArray\r\n     * @returns\r\n     */\r\n    createAddress(): FormGroup {\r\n      return new FormGroup({\r\n        homeno: new FormControl(),\r\n        pincode: new FormControl(),\r\n        address: new FormControl(),\r\n        city: new FormControl(),\r\n        state: new FormControl(),\r\n        country: new FormControl(),\r\n        district: new FormControl(),\r\n        landmark: new FormControl(),\r\n      });\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Remove index from FormArray\r\n     * @param i\r\n     */\r\n    removeAddress(i: number) {\r\n      (<FormArray>this.addressForm.get(\"addresses\")).removeAt(i);\r\n    }\r\n  \r\n    /**\r\n     * Get Formcontrol of FormGroup\r\n     */\r\n    get f() {\r\n      return this.ProfileForm.controls;\r\n    }\r\n    get fpart(){\r\n      return this.businessForm.controls;\r\n    }\r\n  \r\n    toggleShow(checked: boolean) {\r\n      this.isShown = checked;\r\n      \r\n      if (!this.isShown) {\r\n        this.ProfileForm.get(\"gstinNo\").clearValidators();\r\n        this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n      } else {\r\n        this.ProfileForm.get(\"gstinNo\").setValidators([]);\r\n        this.ProfileForm.get(\"gstinNo\").updateValueAndValidity();\r\n      }\r\n    }\r\n    \r\n  \r\n    /**\r\n     * Get user profile data\r\n     */\r\n    async getTradeDetails() {\r\n      await this.scheduleShopService.getshopListBYshopId({}, this.shopId).then((res : any) => {\r\n        console.log(res);\r\n        this.data = res.data;\r\n        this.constitutionBusinessType = res.data.client.businessType\r\n        let primaryAddress = res.data.primaryAddress;\r\n        if (res.data.client.gstType == \"Composite\") {\r\n          this.compositeType = true;\r\n        }\r\n        if (primaryAddress.length > 0) {\r\n          for (let i = 0; i < primaryAddress.length; i++) {\r\n            this.addressId = primaryAddress[i].id;\r\n            this.addressControls.push(\r\n              new FormGroup({\r\n                address: new FormControl(primaryAddress[i].address),\r\n                city: new FormControl(primaryAddress[i].city),\r\n                country: new FormControl(primaryAddress[i].country),\r\n                homeno: new FormControl(primaryAddress[i].homeno),\r\n                pincode: new FormControl(primaryAddress[i].pincode),\r\n                state: new FormControl(primaryAddress[i].state),\r\n                landmark: new FormControl(primaryAddress[i].landmark),\r\n                district: new FormControl(primaryAddress[i].district),\r\n                id: new FormControl(primaryAddress[i].id),\r\n              })\r\n            );\r\n          }\r\n        }\r\n        if (res.data.client.isRegistered != null) {\r\n          this.toggleShow(res.data.additional.isRegistered);\r\n          // this.isShown = res.data.additional.isRegistered;\r\n        }\r\n        if (res.data.client.gstinNo != null) {\r\n          // this.getGstNumber(res.data.additional.gstinNo);\r\n          // this.getGstNumber(res.data.additional.gstinNo);\r\n        }\r\n        // let businessNatureData = res.data.client.businessTypes.map((item) => item.id);\r\n        // console.log(\"Business ----\", businessNatureData);\r\n        // let businesscategory = res.data.businessCategory.client.map((item) => item.id);\r\n        // console.log(\"Business category -----\", businesscategory);\r\n        // this.categoryCtrl.setValue(businesscategory);\r\n        //sending data from get api to form by patching\r\n        this.ProfileForm.patchValue({\r\n          email: res.data.basicdetails.email,\r\n          businessType: res.data.additional.businessType,\r\n          firstName: res.data.basicdetails.firstName,\r\n          // firstName: res.data.basicdetails.fullName,\r\n          totalPlaces: res.data.additional.totalPlaces,\r\n          legalName: res.data.additional.legalName,\r\n          gstType: res.data.additional.gstType,\r\n          gstinNo: res.data.additional.gstinNo\r\n            ? res.data.additional.gstinNo\r\n            : null,\r\n          compositeType: res.data.additional.compositeType,\r\n          fullName: res.data.basicdetails.firstName,\r\n          // fullName: res.data.basicdetails.fullName,\r\n          // lastName: res.data.basicdetails.lastName,\r\n          // profileImage: res.data.basicdetails.profileImage,\r\n          mobile: res.data.basicdetails.mobile,\r\n          tradeName: res.data.additional.tradeName,\r\n          accountMethod: res.data.additional.accountMethod,\r\n          pincode: res.data.primaryAddress.pincode ? res.data.primaryAddress.pincode : \"\",\r\n          state: res.data.primaryAddress.state ? res.data.primaryAddress.state : \"\",\r\n          city: res.data.primaryAddress.city ? res.data.primaryAddress.city : \"\",\r\n          country: res.data.primaryAddress.country ? res.data.primaryAddress.country : \"\",\r\n          address: res.data.primaryAddress.address ? res.data.primaryAddress.address : \"\",\r\n          landmark: res.data.primaryAddress.landmark ? res.data.primaryAddress.landmark : \"\",\r\n          district: res.data.primaryAddress.district ? res.data.primaryAddress.district : \"\",\r\n          homeno: res.data.primaryAddress.homeno ? res.data.primaryAddress.homeno : \"\",\r\n          panNumber: res.data.additional.panNumber ? res.data.additional.panNumber : \"\",\r\n          // tradeName:res.data.additional.tradeName,\r\n          financialYearFrom: res.data.additional.financialYearFrom ? moment(res.data.additional.financialYearFrom).format(\r\n            \"DD-MMM-YYYY\"\r\n          ) : \"\",\r\n          bookBeginningFrom: res.data.additional.bookBeginningFrom ? moment(res.data.additional.bookBeginningFrom).format(\r\n            \"DD-MMM-YYYY\"\r\n          ) : \"\",\r\n  \r\n          cinNumber: res.data.additional.cinNumber,\r\n          // businessNature: businessNatureData,\r\n        });\r\n      });\r\n    }\r\n    //get pincode api\r\n  \r\n    getPincodeDetails(pin) {\r\n      this.profileService.getUserPincode({}, pin).then((res) => {\r\n        this.pinDetails = res;\r\n        this.ProfileForm.patchValue({\r\n          district: res.data.districtName,\r\n          state: res.data.stateName,\r\n        });\r\n      });\r\n    }\r\n  \r\n    getPincodeDetailsForAdditionalAddress(pin, index) {\r\n      if (pin.length == 6) {\r\n        this.profileService.getUserPincode({}, pin).then((res) => {\r\n          this.pinDetails = res.data;\r\n          this.addressControls.controls[index].patchValue({\r\n            pincode: this.pinDetails.pincode,\r\n            state: this.pinDetails.stateName,\r\n            district: this.pinDetails.districtName,\r\n          });\r\n          this.addressControls\r\n            .at(index)\r\n            .patchValue(res.data.stateName, res.data.districtName);\r\n        });\r\n      }\r\n    }\r\n  \r\n    getGstNumber(gstin) {\r\n      this.profileService.getGstNumber({}, gstin).then(\r\n        (res) => {\r\n          this.gstDetails = res;\r\n          if (res) {\r\n            this.ProfileForm.patchValue({\r\n              legalName: res.data.legalName,\r\n              businessType: res.data.constitution,\r\n              gstType: res.data.taxPayerType,\r\n              gstStatus: res.data.status,\r\n            });\r\n            this.isDisabledGST = false;\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isDisabledGST = true;\r\n        }\r\n      );\r\n    }\r\n  \r\n    /**\r\n     * get nature of business list\r\n     */\r\n    public getType() {\r\n      this.profileService.getTypes({}).then((response) => {\r\n        this.typeList = response.data;\r\n      });\r\n  }\r\n  \r\n    /**\r\n     * Update user profile\r\n     * @returns\r\n     */\r\n    UpdateNewShop() {\r\n      this.submitted = true;\r\n  \r\n      let registerdProfileData = {\r\n        basicDetails: {\r\n          firstName: this.ProfileForm.controls.firstName.value,\r\n          mobile: this.ProfileForm.controls.mobile.value,\r\n          lastName : \"SHOP\",  // need to remove from Backend\r\n          email : this.ProfileForm.controls.email.value,  // need to remove from Backend\r\n          parentId : this.currentUser.id,\r\n          // addSignature : this.signImg,\r\n          // profileImage : this.profileImage,\r\n        },\r\n        shopDetails: {\r\n          isRegistered: this.isShown,\r\n          legalName: this.ProfileForm.controls.legalName.value\r\n            ? this.ProfileForm.controls.legalName.value\r\n            : null,\r\n          businessType: this.ProfileForm.controls.businessType.value\r\n            ? this.ProfileForm.controls.businessType.value\r\n            : null,\r\n          gstType: this.ProfileForm.controls.gstType.value,\r\n          // ...(this.ProfileForm.controls.compositeType.value == \"Composite\") && ({ \"compositeType\": this.ProfileForm.controls.compositeType.value }),\r\n          compositeType: this.ProfileForm.controls.compositeType.value\r\n            ? this.ProfileForm.controls.compositeType.value\r\n            : \"Trader\",\r\n          gstinNo: this.ProfileForm.controls.gstinNo.value\r\n            ? this.ProfileForm.controls.gstinNo.value.toUpperCase()\r\n            : null,\r\n          accountMethod: this.ProfileForm.controls.accountMethod.value,\r\n          //   \"legalName\": this.ProfileForm.controls.legalName.value,\r\n          totalPlaces: 0,\r\n          category: this.categoryId,\r\n          tradeName: this.ProfileForm.controls.tradeName.value,\r\n          panNumber: this.ProfileForm.controls.panNumber.value,\r\n          financialYearFrom: this.ProfileForm.controls.financialYearFrom.value,\r\n          bookBeginningFrom: this.ProfileForm.controls.bookBeginningFrom.value,\r\n          cinNumber: this.ProfileForm.controls.cinNumber.value?this.ProfileForm.controls.cinNumber.value: null,\r\n        },\r\n        address: {\r\n          state: this.ProfileForm.controls.state.value,\r\n          pincode: this.ProfileForm.controls.pincode.value,\r\n          city: \"city\",\r\n          // city: this.ProfileForm.controls.city.value,\r\n          district: this.ProfileForm.controls.district.value,\r\n          landmark: this.ProfileForm.controls.landmark.value\r\n            ? this.ProfileForm.controls.landmark.value\r\n            : \"landmark\",\r\n          country: this.ProfileForm.controls.country.value,\r\n          homeno: \"homeno\",\r\n          // homeno: this.ProfileForm.controls.homeno.value,\r\n          address: this.ProfileForm.controls.address.value,\r\n        },\r\n        businesses: this.ProfileForm.controls.businessNature.value,\r\n        categoryBusiness: this.categoryId,\r\n      };\r\n  \r\n      let finalObject;\r\n  \r\n      console.log(\"User object\", this.ProfileForm);\r\n      if (!this.isShown) {\r\n        finalObject = registerdProfileData;\r\n      } else {\r\n        finalObject = registerdProfileData;\r\n        // finalObject = profileData;\r\n      }\r\n  \r\n      if(this.ProfileForm.valid){\r\n        this.scheduleShopService.UpdateShopDetails(finalObject, this.shopId).then((res : any) => {\r\n            if (res.success) {\r\n              this.router.navigate([\"/pages/shop-schedule-page/shop-details-list\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            if (err.error.ststus == 500) {\r\n              this.toastService.openErrorSnackBar(err.error.error_message);\r\n            } else{\r\n              this.toastService.openErrorSnackBar(err.error.error_message);\r\n            }\r\n          }\r\n          );\r\n        } else {\r\n          this.toastService.openErrorSnackBar(\"Please fill up mandatory details first before submit\")\r\n        }\r\n      }\r\n        \r\n    /**\r\n     * Add multiple address\r\n     */\r\n    addMultipleAddress() {\r\n      console.log(\"addMultipleAddress\")\r\n    const newAddress = this.addressForm.get('addresses').value[this.addressControls.length - 1];\r\n  \r\n    // Check if the new address is not null and contains valid data\r\n    if (newAddress && newAddress.address && newAddress.city && newAddress.country && newAddress.district && newAddress.homeno && newAddress.landmark && newAddress.pincode && newAddress.state) {\r\n      const addressData = {\r\n        id: newAddress.id || \"\",\r\n        address: newAddress.address,\r\n        city: newAddress.city,\r\n        country: newAddress.country,\r\n        district: newAddress.district,\r\n        homeno: newAddress.homeno,\r\n        landmark: newAddress.landmark,\r\n        pincode: newAddress.pincode.toString(),\r\n        state: newAddress.state\r\n      };\r\n  \r\n      this.profileService.postMultipleAddress({ addresses: [addressData] }, this.currentUser.id)\r\n          .then(\r\n            (res) => {\r\n              if (res.success) {\r\n                this.toastService.openSnackBar(\"Address Added Successfully!!!\");\r\n                window.location.reload();\r\n                this.addressArray = [];\r\n              }\r\n            },\r\n            (err) => {\r\n              if (err.error.status == 400) {\r\n                this.toastService.openErrorSnackBar(\r\n                  \"Fill All Additional Address Details.\"\r\n                );\r\n              }\r\n            }\r\n          );\r\n      }\r\n    }\r\n  \r\n    isInvalidDate(event) {\r\n      let test = event.target.value;\r\n  \r\n      if (test == \"Invalid date\") {\r\n        event.target.value = formatDate(new Date(), \"DD/MM/\", \"en\"); // Change it here\r\n      }\r\n    }\r\n    /**\r\n     * update multiple address by addressId\r\n     * @param item\r\n     */\r\n    updateMultipleAddress(item) {\r\n      let data = {\r\n        homeno: item.value.homeno ? item.value.homeno : \"\",\r\n        landmark: item.value.landmark ? item.value.landmark : \"\",\r\n        district: item.value.district ? item.value.district : \"\",\r\n        pincode: item.value.pincode ? item.value.pincode : \"\",\r\n        address: item.value.address ? item.value.address : \"\",\r\n        city: item.value.city ? item.value.city : \"\",\r\n        state: item.value.state ? item.value.state : \"\",\r\n        country: item.value.country ? item.value.country : \"\",\r\n      };\r\n      console.log(data)\r\n      this.profileService\r\n        .updateMultipleAddress(data, item.value.id)\r\n        .then((res) => {\r\n          if (res) {\r\n            this.toastService.openSnackBar(\"Address Updated Successfully!!!\");\r\n             window.location.reload()\r\n          }\r\n        }, (err) => {\r\n          if (err.error.expose) {\r\n            this.toastService.openErrorSnackBar(this.titleCasePipe.transform(err.error.error_message));\r\n          }\r\n          else {\r\n            this.toastService.openErrorSnackBar(\"Something Went Wrong.\");\r\n          }\r\n        });\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Delete Addresses by addressId\r\n     * @param item\r\n     */\r\n    deleteAddress(item) {\r\n      this.profileService.deleteAddressById({}, item.value.id).then((res) => {\r\n        if (res) {\r\n          this.toastService.openSnackBar(\"Address Deleted Successfully!!!\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  \r\n    // Additional Place Of Business\r\n    addPlaceOfBusiness() {\r\n      if (this.businessPlaceAdd.valid) {\r\n        const addressData = this.businessPlaceAdd.value;\r\n        this.profileService.postMultipleAddress({ addresses: [addressData] }, this.shopId)\r\n          .then(\r\n            (res) => {\r\n              if (res.success) {\r\n                this.toastService.openSnackBar(\"Address Added Successfully!!!\");\r\n                // window.location.reload();\r\n                this.businessPlaceAdd.reset();\r\n              }\r\n            },\r\n            (err) => {\r\n              if (err.error.status == 400) {\r\n                this.toastService.openErrorSnackBar(\"Fill All Additional Address Details.\");\r\n              } else {\r\n                this.toastService.openErrorSnackBar(\"Something went wrong\")\r\n              }\r\n            }\r\n          );\r\n      } else {\r\n        this.toastService.openErrorSnackBar(\"Please Fill Mandatory Fields!!!\");\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Update Mobile\r\n     */\r\n    updateMobile() {\r\n      let data = {\r\n        mobile: this.ProfileForm.controls.mobile.value,\r\n      };\r\n      this.profileService\r\n        .updateClientMobileOTP(data, this.currentUser.id)\r\n        .then((res) => {\r\n          this.toastService.openSnackBar(\"OTP Sent Successfully!!!\");\r\n        });\r\n    }\r\n  \r\n    /**\r\n     *\r\n     */\r\n    updateMobileNumber() {\r\n      let data = {\r\n        email: this.ProfileForm.controls.email.value,\r\n        mobile: this.ProfileForm.controls.mobile.value,\r\n        mobileotp: this.mobileOtp,\r\n      };\r\n      this.profileService.updateClientMobile(data).then((res) => {\r\n        this.toastService.openSnackBar(\"Mobile Number Verified Successfully!!!\");\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * add category name in categortNames array\r\n     * @param event\r\n     */\r\n    add(event: MatChipInputEvent): void {\r\n      let input = event.input;\r\n      let value = event.value;\r\n      // Add our category\r\n      if ((value || \"\").trim()) {\r\n        this.typeList.push(value.trim());\r\n      }\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = \"\";\r\n      }\r\n      this.categoryCtrl.setValue(value);\r\n    }\r\n  \r\n    /**\r\n     * remove/delete selected category\r\n     * @param category\r\n     */\r\n    remove(category: any): void {\r\n      let index = this.categoryName.indexOf(category);\r\n      if (index >= 0) {\r\n        this.categoryName.splice(index, 1);\r\n        this.categoryId.splice(index, 1);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * called when category selected from dropdown\r\n     * @param event\r\n     */\r\n    selected(event: MatAutocompleteSelectedEvent): void {\r\n      let newValue = event.option.viewValue;\r\n      if (this.categoryName.includes(newValue)) {\r\n        this.categoryName = [\r\n          ...this.categoryName.filter((fruit) => fruit !== newValue),\r\n        ];\r\n      } else {\r\n        this.categoryName.push(event.option.viewValue);\r\n      }\r\n      this.categoryInput.nativeElement.value = \"\";\r\n      // this.categoryCtrl.setValue(null);\r\n  \r\n      // keep the autocomplete opened after each item is picked.\r\n      requestAnimationFrame(() => {\r\n        this.openAuto(this.matACTrigger);\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * open category dropdown panel\r\n     * @param trigger\r\n     */\r\n    openAuto(trigger: MatAutocompleteTrigger) {\r\n      trigger.openPanel();\r\n      this.categoryInput.nativeElement.focus();\r\n    }\r\n  \r\n    searchCategoryByCategory(categoryInput) {\r\n      this.profileService.getCategoryBySearch({}, categoryInput).then((res) => {\r\n        this.serachByCategory = res.data;\r\n      });\r\n    }\r\n    /**\r\n     * Get all categories\r\n     */\r\n    getBusinessCategory() {\r\n      this.profileService.getBuisnessCategoryAll({}).then((res) => {\r\n        this.categoryBusiness = res.data.rows;\r\n        this.filteredCategory = this.categoryCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((name) =>\r\n            name ? this.filterNames(name) : this.categoryBusiness.slice()\r\n          )\r\n        );\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * filter search category names\r\n     * @param name\r\n     * @returns\r\n     */\r\n    private filterNames(name: string): string[] {\r\n      return this.categoryBusiness.filter((list) => {\r\n          list.category.toLowerCase().indexOf(name) === 0\r\n        }\r\n      );\r\n    }\r\n  \r\n    public array = [];\r\n    getCategoryId(list) {\r\n      this.array.push(list.id);\r\n      this.categoryId = this.array.filter(\r\n        (item, index, self) => self.indexOf(item) === index\r\n      );\r\n    }\r\n    numberOnly(event): boolean {\r\n      const charCode = event.which ? event.which : event.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  \r\n  }\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-time-schedule',\r\n  templateUrl: './add-time-schedule.component.html',\r\n  styleUrls: ['./add-time-schedule.component.scss']\r\n})\r\nexport class AddTimeScheduleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-time-schedule works!</p>\r\n","<div class=\"row d-flex flex-center\">\r\n    <div class=\"col-md-2col-lg-7 col-xl-7\"></div>\r\n    <div class=\"col-sm-12 col-md-6 col-lg-3 col-xl-3 mt-2\">\r\n        <input type=\"search\" id=\"searchInput\" class=\"form-control pe-5\" placeholder=\"Name\" />\r\n    </div>\r\n    <div class=\"navOption-btns col-sm-12 col-md-4 col-lg-2 col-xl-2 mt-2\"\r\n        style=\"display: flex; justify-content: space-around !important\">\r\n        <button class=\"btn text-nowrap ms-2\"><i class=\"fas fa-plus\"></i> Add Time Schedule</button>\r\n        <!-- <input type=\"file\" name=\"file\" id=\"uploadFile\" accept=\".xls,.xlsx\" class=\"hidden-input\" />\r\n        <button class=\"btn text-nowrap mx-2\" ngbTooltip=\"Import Excel\" id=\"uploadFile\">\r\n            <i class=\"fas fa-upload\"></i> Import\r\n        </button>\r\n        <button class=\"btn text-nowrap\" ngbTooltip=\"Download\" accept=\".xls,.xlsx\" id=\"download\"\r\n            onclick=\"location.href = ''\">\r\n            <i class=\"fas fa-download\"></i>\r\n        </button> -->\r\n    </div>\r\n</div>\r\n\r\n<hr class=\"mb-1\" />\r\n\r\n<div class=\"card-body p-0 overflow-hidden\">\r\n    <div class=\"table-div overflow-hidden\" style=\"overflow-x: scroll;\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <tr class=\"btn-reveal-trigger\">\r\n                    <th class=\"col-1 px-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input  type=\"checkbox\" class=\"form-check-input px-2\"/>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <span>#</span>\r\n                            </div>\r\n                        </div> \r\n                    </th>\r\n                    <th class=\"col-2\">Schedule Name</th>\r\n                    <th class=\"col-2\">Appointment Name</th>\r\n                    <th class=\"col-1\">Duration</th>\r\n                    <th class=\"col-1\">Location Type</th>\r\n                    <th class=\"col-4\"></th>\r\n                    <th class=\"col-1\" class=\"text-center\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngIf=\"schedules\">\r\n                <tr *ngFor=\"let schedule of schduleAllRes; let i = index\">\r\n                    <td class=\"col-1 px-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input  type=\"checkbox\" class=\"form-check-input \"/>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <span>{{i+1}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td clas=\"col-2\">{{ schedule.scheduleName }}</td>\r\n                    <td clas=\"col-2\">{{ schedule.appointmentType.name }}</td>\r\n                    <td clas=\"col-1\">{{ schedule.appointmentType.duration }}</td>\r\n                    <td clas=\"col-1\">{{ schedule.appointmentType.locationType }}</td>\r\n                    <td clas=\"col-4\"></td>\r\n                    <td class=\"col-1\">\r\n                        <span class=\"m-1\" text-center></span>\r\n                        <button class=\"btn btnp\" data-bs-target=\"#errorDelete-modal\" aria-hidden=\"true\">\r\n                            <span class=\"bi-trash icon-color fs-1\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                (click)=\"deleteSchedule(schedule.id)\"></span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody *ngIf=\"schduleAllRes == 0\">\r\n                <tr class=\"text-center\">\r\n                    <td colspan=\"10\">\r\n                        <h5 class=\"text-nowrap\">\r\n                            No Shop Schedule Details Added. Please Add Shop Schedule Details\r\n                            To Be Displayed Here.\r\n                            <span>\r\n                                <a class=\"nav-link\" routerLink=\"/pages/shop-setting/{{\r\n                    shopID\r\n                  }}/add-schedule-form/{{ shopID }}\">Add New Shop Schedule</a>\r\n                            </span>\r\n                        </h5>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ScheduleScheduleService } from 'src/app/core/services/schedule-schedule.service';\r\n\r\n@Component({\r\n  selector: 'app-time-schedule-page',\r\n  templateUrl: './time-schedule-page.component.html',\r\n  styleUrls: ['./time-schedule-page.component.scss']\r\n})\r\nexport class TimeSchedulePageComponent implements OnInit {\r\n\r\n  schedules=[\r\n    {\r\n      \"id\":1,\r\n      \"appointmentType\":\"Routine Visit\",\r\n      \"shopName\":\"Chinchwad East Pune\",\r\n      \"breakTime\":\"2pm -3pm\",\r\n      \"bufferTime\":\"15min\",\r\n    },\r\n    {\r\n      \"id\":2,\r\n      \"appointmentType\":\"Virtual Appt.\",\r\n      \"shopName\":\"Chinchwad East Pune\",\r\n      \"breakTime\":\"12pm -1pm\",\r\n      \"bufferTime\":\"30 min\",\r\n    },\r\n]\r\nappointMentType=[\r\n  {\r\n  \"id\":1,\r\n  \"appointMent\":\"Routine Visit\"\r\n  },\r\n  {\r\n    \"id\":2,\r\n    \"appointMent\":\"Virtual appt\t\"\r\n  },\r\n  {\r\n    \"id\":3,\r\n    \"appointMent\":\"One To One\"\r\n  },\r\n]\r\n\r\n\r\nshopID:any;\r\npublic schduleAllRes:any;\r\n\r\n\r\n  constructor(private formBuilder:FormBuilder,\r\n    private modal:NgbModal,private route: ActivatedRoute,private scheduleScheduleService:ScheduleScheduleService ) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.route.params.subscribe(\r\n      params => this.shopID = params['id']\r\n    );\r\n   this.getAllSchedule();\r\n  }\r\n\r\n  getAllSchedule(){\r\n    this.scheduleScheduleService.getAllScheduleShopID({},this.shopID).then((res) => {\r\n      this.schduleAllRes = res.data;\r\n      console.log(\"schduleAllRes\",this.schduleAllRes) ;\r\n     })   \r\n  }\r\n\r\n  modalDismiss(){\r\n    this.modal.dismissAll();\r\n  }\r\n  \r\n  deleteSchedule(id:any){\r\n   this.schedules = this.schedules.filter(x => x.id != id);\r\n\r\n  }\r\n\r\n}\r\n\r\n"]}